(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var Control_Apply = require("../Control.Apply/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Applicative = function (Apply0, pure) {
    this.Apply0 = Apply0;
    this.pure = pure;
};
var pure = function (dict) {
    return dict.pure;
};
var unless = function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (!v) {
                return v1;
            };
            if (v) {
                return pure(dictApplicative)(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Control.Applicative line 62, column 1 - line 62, column 65: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var when = function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v) {
                return v1;
            };
            if (!v) {
                return pure(dictApplicative)(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Control.Applicative line 57, column 1 - line 57, column 63: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var liftA1 = function (dictApplicative) {
    return function (f) {
        return function (a) {
            return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
        };
    };
};
var applicativeFn = new Applicative(function () {
    return Control_Apply.applyFn;
}, function (x) {
    return function (v) {
        return x;
    };
});
var applicativeArray = new Applicative(function () {
    return Control_Apply.applyArray;
}, function (x) {
    return [ x ];
});
module.exports = {
    Applicative: Applicative,
    pure: pure,
    liftA1: liftA1,
    unless: unless,
    when: when,
    applicativeFn: applicativeFn,
    applicativeArray: applicativeArray
};

},{"../Control.Apply/index.js":3,"../Data.Functor/index.js":22,"../Data.Unit/index.js":43}],2:[function(require,module,exports){
"use strict";

exports.arrayApply = function (fs) {
  return function (xs) {
    var l = fs.length;
    var k = xs.length;
    var result = new Array(l*k);
    var n = 0;
    for (var i = 0; i < l; i++) {
      var f = fs[i];
      for (var j = 0; j < k; j++) {
        result[n++] = f(xs[j]);
      }
    }
    return result;
  };
};

},{}],3:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var $foreign = require("./foreign.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Apply = function (Functor0, apply) {
    this.Functor0 = Functor0;
    this.apply = apply;
};
var applyFn = new Apply(function () {
    return Data_Functor.functorFn;
}, function (f) {
    return function (g) {
        return function (x) {
            return f(x)(g(x));
        };
    };
});
var applyArray = new Apply(function () {
    return Data_Functor.functorArray;
}, $foreign.arrayApply);
var apply = function (dict) {
    return dict.apply;
};
var applyFirst = function (dictApply) {
    return function (a) {
        return function (b) {
            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
        };
    };
};
var applySecond = function (dictApply) {
    return function (a) {
        return function (b) {
            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
        };
    };
};
var lift2 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
            };
        };
    };
};
var lift3 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c);
                };
            };
        };
    };
};
var lift4 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d);
                    };
                };
            };
        };
    };
};
var lift5 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return apply(dictApply)(apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d))(e);
                        };
                    };
                };
            };
        };
    };
};
module.exports = {
    Apply: Apply,
    apply: apply,
    applyFirst: applyFirst,
    applySecond: applySecond,
    lift2: lift2,
    lift3: lift3,
    lift4: lift4,
    lift5: lift5,
    applyFn: applyFn,
    applyArray: applyArray
};

},{"../Control.Category/index.js":6,"../Data.Function/index.js":20,"../Data.Functor/index.js":22,"./foreign.js":2}],4:[function(require,module,exports){
"use strict";

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];
    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }
    return result;
  };
};

},{}],5:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Bind = function (Apply0, bind) {
    this.Apply0 = Apply0;
    this.bind = bind;
};
var Discard = function (discard) {
    this.discard = discard;
};
var discard = function (dict) {
    return dict.discard;
};
var bindFn = new Bind(function () {
    return Control_Apply.applyFn;
}, function (m) {
    return function (f) {
        return function (x) {
            return f(m(x))(x);
        };
    };
});
var bindArray = new Bind(function () {
    return Control_Apply.applyArray;
}, $foreign.arrayBind);
var bind = function (dict) {
    return dict.bind;
};
var bindFlipped = function (dictBind) {
    return Data_Function.flip(bind(dictBind));
};
var composeKleisliFlipped = function (dictBind) {
    return function (f) {
        return function (g) {
            return function (a) {
                return bindFlipped(dictBind)(f)(g(a));
            };
        };
    };
};
var composeKleisli = function (dictBind) {
    return function (f) {
        return function (g) {
            return function (a) {
                return bind(dictBind)(f(a))(g);
            };
        };
    };
};
var discardUnit = new Discard(function (dictBind) {
    return bind(dictBind);
});
var ifM = function (dictBind) {
    return function (cond) {
        return function (t) {
            return function (f) {
                return bind(dictBind)(cond)(function (cond$prime) {
                    if (cond$prime) {
                        return t;
                    };
                    return f;
                });
            };
        };
    };
};
var join = function (dictBind) {
    return function (m) {
        return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));
    };
};
module.exports = {
    Bind: Bind,
    bind: bind,
    bindFlipped: bindFlipped,
    Discard: Discard,
    discard: discard,
    join: join,
    composeKleisli: composeKleisli,
    composeKleisliFlipped: composeKleisliFlipped,
    ifM: ifM,
    bindFn: bindFn,
    bindArray: bindArray,
    discardUnit: discardUnit
};

},{"../Control.Applicative/index.js":1,"../Control.Apply/index.js":3,"../Control.Category/index.js":6,"../Data.Function/index.js":20,"../Data.Functor/index.js":22,"../Data.Unit/index.js":43,"./foreign.js":4}],6:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Category = function (Semigroupoid0, identity) {
    this.Semigroupoid0 = Semigroupoid0;
    this.identity = identity;
};
var identity = function (dict) {
    return dict.identity;
};
var categoryFn = new Category(function () {
    return Control_Semigroupoid.semigroupoidFn;
}, function (x) {
    return x;
});
module.exports = {
    Category: Category,
    identity: identity,
    categoryFn: categoryFn
};

},{"../Control.Semigroupoid/index.js":8}],7:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Monad = function (Applicative0, Bind1) {
    this.Applicative0 = Applicative0;
    this.Bind1 = Bind1;
};
var whenM = function (dictMonad) {
    return function (mb) {
        return function (m) {
            return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {
                return Control_Applicative.when(dictMonad.Applicative0())(v)(m);
            });
        };
    };
};
var unlessM = function (dictMonad) {
    return function (mb) {
        return function (m) {
            return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {
                return Control_Applicative.unless(dictMonad.Applicative0())(v)(m);
            });
        };
    };
};
var monadFn = new Monad(function () {
    return Control_Applicative.applicativeFn;
}, function () {
    return Control_Bind.bindFn;
});
var monadArray = new Monad(function () {
    return Control_Applicative.applicativeArray;
}, function () {
    return Control_Bind.bindArray;
});
var liftM1 = function (dictMonad) {
    return function (f) {
        return function (a) {
            return Control_Bind.bind(dictMonad.Bind1())(a)(function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(f(v));
            });
        };
    };
};
var ap = function (dictMonad) {
    return function (f) {
        return function (a) {
            return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                });
            });
        };
    };
};
module.exports = {
    Monad: Monad,
    liftM1: liftM1,
    ap: ap,
    whenM: whenM,
    unlessM: unlessM,
    monadFn: monadFn,
    monadArray: monadArray
};

},{"../Control.Applicative/index.js":1,"../Control.Apply/index.js":3,"../Control.Bind/index.js":5,"../Data.Functor/index.js":22,"../Data.Unit/index.js":43}],8:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var Semigroupoid = function (compose) {
    this.compose = compose;
};
var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
        return function (x) {
            return f(g(x));
        };
    };
});
var compose = function (dict) {
    return dict.compose;
};
var composeFlipped = function (dictSemigroupoid) {
    return function (f) {
        return function (g) {
            return compose(dictSemigroupoid)(g)(f);
        };
    };
};
module.exports = {
    compose: compose,
    Semigroupoid: Semigroupoid,
    composeFlipped: composeFlipped,
    semigroupoidFn: semigroupoidFn
};

},{}],9:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var BooleanAlgebra = function (HeytingAlgebra0) {
    this.HeytingAlgebra0 = HeytingAlgebra0;
};
var BooleanAlgebraRecord = function (HeytingAlgebraRecord0) {
    this.HeytingAlgebraRecord0 = HeytingAlgebraRecord0;
};
var booleanAlgebraUnit = new BooleanAlgebra(function () {
    return Data_HeytingAlgebra.heytingAlgebraUnit;
});
var booleanAlgebraRecordNil = new BooleanAlgebraRecord(function () {
    return Data_HeytingAlgebra.heytingAlgebraRecordNil;
});
var booleanAlgebraRecordCons = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictBooleanAlgebraRecord) {
            return function (dictBooleanAlgebra) {
                return new BooleanAlgebraRecord(function () {
                    return Data_HeytingAlgebra.heytingAlgebraRecordCons(dictIsSymbol)(dictCons)(dictBooleanAlgebraRecord.HeytingAlgebraRecord0())(dictBooleanAlgebra.HeytingAlgebra0());
                });
            };
        };
    };
};
var booleanAlgebraRecord = function (dictRowToList) {
    return function (dictBooleanAlgebraRecord) {
        return new BooleanAlgebra(function () {
            return Data_HeytingAlgebra.heytingAlgebraRecord(dictRowToList)(dictBooleanAlgebraRecord.HeytingAlgebraRecord0());
        });
    };
};
var booleanAlgebraFn = function (dictBooleanAlgebra) {
    return new BooleanAlgebra(function () {
        return Data_HeytingAlgebra.heytingAlgebraFunction(dictBooleanAlgebra.HeytingAlgebra0());
    });
};
var booleanAlgebraBoolean = new BooleanAlgebra(function () {
    return Data_HeytingAlgebra.heytingAlgebraBoolean;
});
module.exports = {
    BooleanAlgebra: BooleanAlgebra,
    BooleanAlgebraRecord: BooleanAlgebraRecord,
    booleanAlgebraBoolean: booleanAlgebraBoolean,
    booleanAlgebraUnit: booleanAlgebraUnit,
    booleanAlgebraFn: booleanAlgebraFn,
    booleanAlgebraRecord: booleanAlgebraRecord,
    booleanAlgebraRecordNil: booleanAlgebraRecordNil,
    booleanAlgebraRecordCons: booleanAlgebraRecordCons
};

},{"../Data.HeytingAlgebra/index.js":24,"../Data.Symbol/index.js":41,"../Data.Unit/index.js":43}],10:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var otherwise = true;
module.exports = {
    otherwise: otherwise
};

},{}],11:[function(require,module,exports){
"use strict";

exports.topInt = 2147483647;
exports.bottomInt = -2147483648;

exports.topChar = String.fromCharCode(65535);
exports.bottomChar = String.fromCharCode(0);

exports.topNumber = Number.POSITIVE_INFINITY;
exports.bottomNumber = Number.NEGATIVE_INFINITY;

},{}],12:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var $foreign = require("./foreign.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Bounded = function (Ord0, bottom, top) {
    this.Ord0 = Ord0;
    this.bottom = bottom;
    this.top = top;
};
var top = function (dict) {
    return dict.top;
};
var boundedUnit = new Bounded(function () {
    return Data_Ord.ordUnit;
}, Data_Unit.unit, Data_Unit.unit);
var boundedOrdering = new Bounded(function () {
    return Data_Ord.ordOrdering;
}, Data_Ordering.LT.value, Data_Ordering.GT.value);
var boundedNumber = new Bounded(function () {
    return Data_Ord.ordNumber;
}, $foreign.bottomNumber, $foreign.topNumber);
var boundedInt = new Bounded(function () {
    return Data_Ord.ordInt;
}, $foreign.bottomInt, $foreign.topInt);
var boundedChar = new Bounded(function () {
    return Data_Ord.ordChar;
}, $foreign.bottomChar, $foreign.topChar);
var boundedBoolean = new Bounded(function () {
    return Data_Ord.ordBoolean;
}, false, true);
var bottom = function (dict) {
    return dict.bottom;
};
module.exports = {
    Bounded: Bounded,
    bottom: bottom,
    top: top,
    boundedBoolean: boundedBoolean,
    boundedInt: boundedInt,
    boundedChar: boundedChar,
    boundedOrdering: boundedOrdering,
    boundedUnit: boundedUnit,
    boundedNumber: boundedNumber
};

},{"../Data.Ord/index.js":30,"../Data.Ordering/index.js":31,"../Data.Unit/index.js":43,"./foreign.js":11}],13:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var CommutativeRing = function (Ring0) {
    this.Ring0 = Ring0;
};
var CommutativeRingRecord = function (RingRecord0) {
    this.RingRecord0 = RingRecord0;
};
var commutativeRingUnit = new CommutativeRing(function () {
    return Data_Ring.ringUnit;
});
var commutativeRingRecordNil = new CommutativeRingRecord(function () {
    return Data_Ring.ringRecordNil;
});
var commutativeRingRecordCons = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictCommutativeRingRecord) {
            return function (dictCommutativeRing) {
                return new CommutativeRingRecord(function () {
                    return Data_Ring.ringRecordCons(dictIsSymbol)(dictCons)(dictCommutativeRingRecord.RingRecord0())(dictCommutativeRing.Ring0());
                });
            };
        };
    };
};
var commutativeRingRecord = function (dictRowToList) {
    return function (dictCommutativeRingRecord) {
        return new CommutativeRing(function () {
            return Data_Ring.ringRecord(dictRowToList)(dictCommutativeRingRecord.RingRecord0());
        });
    };
};
var commutativeRingNumber = new CommutativeRing(function () {
    return Data_Ring.ringNumber;
});
var commutativeRingInt = new CommutativeRing(function () {
    return Data_Ring.ringInt;
});
var commutativeRingFn = function (dictCommutativeRing) {
    return new CommutativeRing(function () {
        return Data_Ring.ringFn(dictCommutativeRing.Ring0());
    });
};
module.exports = {
    CommutativeRing: CommutativeRing,
    CommutativeRingRecord: CommutativeRingRecord,
    commutativeRingInt: commutativeRingInt,
    commutativeRingNumber: commutativeRingNumber,
    commutativeRingUnit: commutativeRingUnit,
    commutativeRingFn: commutativeRingFn,
    commutativeRingRecord: commutativeRingRecord,
    commutativeRingRecordNil: commutativeRingRecordNil,
    commutativeRingRecordCons: commutativeRingRecordCons
};

},{"../Data.Ring/index.js":33,"../Data.Semiring/index.js":37,"../Data.Symbol/index.js":41,"../Data.Unit/index.js":43}],14:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var DivisionRing = function (Ring0, recip) {
    this.Ring0 = Ring0;
    this.recip = recip;
};
var recip = function (dict) {
    return dict.recip;
};
var rightDiv = function (dictDivisionRing) {
    return function (a) {
        return function (b) {
            return Data_Semiring.mul((dictDivisionRing.Ring0()).Semiring0())(a)(recip(dictDivisionRing)(b));
        };
    };
};
var leftDiv = function (dictDivisionRing) {
    return function (a) {
        return function (b) {
            return Data_Semiring.mul((dictDivisionRing.Ring0()).Semiring0())(recip(dictDivisionRing)(b))(a);
        };
    };
};
var divisionringNumber = new DivisionRing(function () {
    return Data_Ring.ringNumber;
}, function (x) {
    return 1.0 / x;
});
module.exports = {
    DivisionRing: DivisionRing,
    recip: recip,
    leftDiv: leftDiv,
    rightDiv: rightDiv,
    divisionringNumber: divisionringNumber
};

},{"../Data.EuclideanRing/index.js":18,"../Data.Ring/index.js":33,"../Data.Semiring/index.js":37}],15:[function(require,module,exports){
"use strict";

exports.refEq = function (r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs === ys) return true;
      if (xs.length !== ys.length) return false;
      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }
      return true;
    };
  };
};

},{}],16:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var $foreign = require("./foreign.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Data_Void = require("../Data.Void/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var Eq = function (eq) {
    this.eq = eq;
};
var Eq1 = function (eq1) {
    this.eq1 = eq1;
};
var EqRecord = function (eqRecord) {
    this.eqRecord = eqRecord;
};
var eqVoid = new Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var eqUnit = new Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var eqString = new Eq($foreign.refEq);
var eqRowNil = new EqRecord(function (v) {
    return function (v1) {
        return function (v2) {
            return true;
        };
    };
});
var eqRecord = function (dict) {
    return dict.eqRecord;
};
var eqRec = function (dictRowToList) {
    return function (dictEqRecord) {
        return new Eq(eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value));
    };
};
var eqNumber = new Eq($foreign.refEq);
var eqInt = new Eq($foreign.refEq);
var eqChar = new Eq($foreign.refEq);
var eqBoolean = new Eq($foreign.refEq);
var eq1 = function (dict) {
    return dict.eq1;
};
var eq = function (dict) {
    return dict.eq;
};
var eqArray = function (dictEq) {
    return new Eq($foreign.eqArrayImpl(eq(dictEq)));
};
var eq1Array = new Eq1(function (dictEq) {
    return eq(eqArray(dictEq));
});
var eqRowCons = function (dictEqRecord) {
    return function (dictCons) {
        return function (dictIsSymbol) {
            return function (dictEq) {
                return new EqRecord(function (v) {
                    return function (ra) {
                        return function (rb) {
                            var tail = eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            var get = Record_Unsafe.unsafeGet(key);
                            return eq(dictEq)(get(ra))(get(rb)) && tail;
                        };
                    };
                });
            };
        };
    };
};
var notEq = function (dictEq) {
    return function (x) {
        return function (y) {
            return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
        };
    };
};
var notEq1 = function (dictEq1) {
    return function (dictEq) {
        return function (x) {
            return function (y) {
                return eq(eqBoolean)(eq1(dictEq1)(dictEq)(x)(y))(false);
            };
        };
    };
};
module.exports = {
    Eq: Eq,
    eq: eq,
    notEq: notEq,
    Eq1: Eq1,
    eq1: eq1,
    notEq1: notEq1,
    EqRecord: EqRecord,
    eqRecord: eqRecord,
    eqBoolean: eqBoolean,
    eqInt: eqInt,
    eqNumber: eqNumber,
    eqChar: eqChar,
    eqString: eqString,
    eqUnit: eqUnit,
    eqVoid: eqVoid,
    eqArray: eqArray,
    eqRec: eqRec,
    eq1Array: eq1Array,
    eqRowNil: eqRowNil,
    eqRowCons: eqRowCons
};

},{"../Data.HeytingAlgebra/index.js":24,"../Data.Symbol/index.js":41,"../Data.Unit/index.js":43,"../Data.Void/index.js":44,"../Record.Unsafe/index.js":52,"../Type.Data.RowList/index.js":53,"./foreign.js":15}],17:[function(require,module,exports){
"use strict";

exports.intDegree = function (x) {
  return Math.min(Math.abs(x), 2147483647);
};

// See the Euclidean definition in
// https://en.m.wikipedia.org/wiki/Modulo_operation.
exports.intDiv = function (x) {
  return function (y) {
    if (y === 0) return 0;
    return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
  };
};

exports.intMod = function (x) {
  return function (y) {
    if (y === 0) return 0;
    var yy = Math.abs(y);
    return ((x % yy) + yy) % yy;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};

},{}],18:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var $foreign = require("./foreign.js");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");
var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
    this.CommutativeRing0 = CommutativeRing0;
    this.degree = degree;
    this.div = div;
    this.mod = mod;
};
var mod = function (dict) {
    return dict.mod;
};
var gcd = function ($copy_dictEq) {
    return function ($copy_dictEuclideanRing) {
        return function ($copy_a) {
            return function ($copy_b) {
                var $tco_var_dictEq = $copy_dictEq;
                var $tco_var_dictEuclideanRing = $copy_dictEuclideanRing;
                var $tco_var_a = $copy_a;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(dictEq, dictEuclideanRing, a, b) {
                    var $7 = Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                    if ($7) {
                        $tco_done = true;
                        return a;
                    };
                    $tco_var_dictEq = dictEq;
                    $tco_var_dictEuclideanRing = dictEuclideanRing;
                    $tco_var_a = b;
                    $copy_b = mod(dictEuclideanRing)(a)(b);
                    return;
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_dictEq, $tco_var_dictEuclideanRing, $tco_var_a, $copy_b);
                };
                return $tco_result;
            };
        };
    };
};
var euclideanRingNumber = new EuclideanRing(function () {
    return Data_CommutativeRing.commutativeRingNumber;
}, function (v) {
    return 1;
}, $foreign.numDiv, function (v) {
    return function (v1) {
        return 0.0;
    };
});
var euclideanRingInt = new EuclideanRing(function () {
    return Data_CommutativeRing.commutativeRingInt;
}, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
var div = function (dict) {
    return dict.div;
};
var lcm = function (dictEq) {
    return function (dictEuclideanRing) {
        return function (a) {
            return function (b) {
                var $8 = Data_Eq.eq(dictEq)(a)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())) || Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                if ($8) {
                    return Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0());
                };
                return div(dictEuclideanRing)(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(a)(b))(gcd(dictEq)(dictEuclideanRing)(a)(b));
            };
        };
    };
};
var degree = function (dict) {
    return dict.degree;
};
module.exports = {
    EuclideanRing: EuclideanRing,
    degree: degree,
    div: div,
    mod: mod,
    gcd: gcd,
    lcm: lcm,
    euclideanRingInt: euclideanRingInt,
    euclideanRingNumber: euclideanRingNumber
};

},{"../Data.BooleanAlgebra/index.js":9,"../Data.CommutativeRing/index.js":13,"../Data.Eq/index.js":16,"../Data.HeytingAlgebra/index.js":24,"../Data.Ring/index.js":33,"../Data.Semiring/index.js":37,"./foreign.js":17}],19:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");
var Data_DivisionRing = require("../Data.DivisionRing/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Field = function (DivisionRing1, EuclideanRing0) {
    this.DivisionRing1 = DivisionRing1;
    this.EuclideanRing0 = EuclideanRing0;
};
var field = function (dictEuclideanRing) {
    return function (dictDivisionRing) {
        return new Field(function () {
            return dictDivisionRing;
        }, function () {
            return dictEuclideanRing;
        });
    };
};
module.exports = {
    Field: Field,
    field: field
};

},{"../Data.CommutativeRing/index.js":13,"../Data.DivisionRing/index.js":14,"../Data.EuclideanRing/index.js":18,"../Data.Ring/index.js":33,"../Data.Semiring/index.js":37}],20:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var Control_Category = require("../Control.Category/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var on = function (f) {
    return function (g) {
        return function (x) {
            return function (y) {
                return f(g(x))(g(y));
            };
        };
    };
};
var flip = function (f) {
    return function (b) {
        return function (a) {
            return f(a)(b);
        };
    };
};
var $$const = function (a) {
    return function (v) {
        return a;
    };
};
var applyN = function (f) {
    var go = function ($copy_n) {
        return function ($copy_acc) {
            var $tco_var_n = $copy_n;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(n, acc) {
                if (n <= 0) {
                    $tco_done = true;
                    return acc;
                };
                if (Data_Boolean.otherwise) {
                    $tco_var_n = n - 1 | 0;
                    $copy_acc = f(acc);
                    return;
                };
                throw new Error("Failed pattern match at Data.Function line 94, column 3 - line 96, column 37: " + [ n.constructor.name, acc.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_n, $copy_acc);
            };
            return $tco_result;
        };
    };
    return go;
};
var applyFlipped = function (x) {
    return function (f) {
        return f(x);
    };
};
var apply = function (f) {
    return function (x) {
        return f(x);
    };
};
module.exports = {
    flip: flip,
    "const": $$const,
    apply: apply,
    applyFlipped: applyFlipped,
    applyN: applyN,
    on: on
};

},{"../Control.Category/index.js":6,"../Data.Boolean/index.js":10,"../Data.Ord/index.js":30,"../Data.Ring/index.js":33}],21:[function(require,module,exports){
"use strict";

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }
    return result;
  };
};

},{}],22:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var $foreign = require("./foreign.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Functor = function (map) {
    this.map = map;
};
var map = function (dict) {
    return dict.map;
};
var mapFlipped = function (dictFunctor) {
    return function (fa) {
        return function (f) {
            return map(dictFunctor)(f)(fa);
        };
    };
};
var $$void = function (dictFunctor) {
    return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
};
var voidLeft = function (dictFunctor) {
    return function (f) {
        return function (x) {
            return map(dictFunctor)(Data_Function["const"](x))(f);
        };
    };
};
var voidRight = function (dictFunctor) {
    return function (x) {
        return map(dictFunctor)(Data_Function["const"](x));
    };
};
var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
var functorArray = new Functor($foreign.arrayMap);
var flap = function (dictFunctor) {
    return function (ff) {
        return function (x) {
            return map(dictFunctor)(function (f) {
                return f(x);
            })(ff);
        };
    };
};
module.exports = {
    Functor: Functor,
    map: map,
    mapFlipped: mapFlipped,
    "void": $$void,
    voidRight: voidRight,
    voidLeft: voidLeft,
    flap: flap,
    functorFn: functorFn,
    functorArray: functorArray
};

},{"../Control.Semigroupoid/index.js":8,"../Data.Function/index.js":20,"../Data.Unit/index.js":43,"./foreign.js":21}],23:[function(require,module,exports){
"use strict";

exports.boolConj = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

exports.boolDisj = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolNot = function (b) {
  return !b;
};

},{}],24:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var $foreign = require("./foreign.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Data_Row = require("../Type.Data.Row/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
    this.conj = conj;
    this.disj = disj;
    this.ff = ff;
    this.implies = implies;
    this.not = not;
    this.tt = tt;
};
var HeytingAlgebraRecord = function (conjRecord, disjRecord, ffRecord, impliesRecord, notRecord, ttRecord) {
    this.conjRecord = conjRecord;
    this.disjRecord = disjRecord;
    this.ffRecord = ffRecord;
    this.impliesRecord = impliesRecord;
    this.notRecord = notRecord;
    this.ttRecord = ttRecord;
};
var ttRecord = function (dict) {
    return dict.ttRecord;
};
var tt = function (dict) {
    return dict.tt;
};
var notRecord = function (dict) {
    return dict.notRecord;
};
var not = function (dict) {
    return dict.not;
};
var impliesRecord = function (dict) {
    return dict.impliesRecord;
};
var implies = function (dict) {
    return dict.implies;
};
var heytingAlgebraUnit = new HeytingAlgebra(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, Data_Unit.unit, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return Data_Unit.unit;
}, Data_Unit.unit);
var heytingAlgebraRecordNil = new HeytingAlgebraRecord(function (v) {
    return function (v1) {
        return function (v2) {
            return {};
        };
    };
}, function (v) {
    return function (v1) {
        return function (v2) {
            return {};
        };
    };
}, function (v) {
    return function (v1) {
        return {};
    };
}, function (v) {
    return function (v1) {
        return function (v2) {
            return {};
        };
    };
}, function (v) {
    return function (v1) {
        return {};
    };
}, function (v) {
    return function (v1) {
        return {};
    };
});
var ffRecord = function (dict) {
    return dict.ffRecord;
};
var ff = function (dict) {
    return dict.ff;
};
var disjRecord = function (dict) {
    return dict.disjRecord;
};
var disj = function (dict) {
    return dict.disj;
};
var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
    return function (b) {
        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
    };
}, $foreign.boolNot, true);
var conjRecord = function (dict) {
    return dict.conjRecord;
};
var heytingAlgebraRecord = function (dictRowToList) {
    return function (dictHeytingAlgebraRecord) {
        return new HeytingAlgebra(conjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), disjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), ffRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value), impliesRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), notRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value), ttRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value));
    };
};
var conj = function (dict) {
    return dict.conj;
};
var heytingAlgebraFunction = function (dictHeytingAlgebra) {
    return new HeytingAlgebra(function (f) {
        return function (g) {
            return function (a) {
                return conj(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (f) {
        return function (g) {
            return function (a) {
                return disj(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (v) {
        return ff(dictHeytingAlgebra);
    }, function (f) {
        return function (g) {
            return function (a) {
                return implies(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (f) {
        return function (a) {
            return not(dictHeytingAlgebra)(f(a));
        };
    }, function (v) {
        return tt(dictHeytingAlgebra);
    });
};
var heytingAlgebraRecordCons = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictHeytingAlgebraRecord) {
            return function (dictHeytingAlgebra) {
                return new HeytingAlgebraRecord(function (v) {
                    return function (ra) {
                        return function (rb) {
                            var tail = conjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(conj(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
                        };
                    };
                }, function (v) {
                    return function (ra) {
                        return function (rb) {
                            var tail = disjRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(disj(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
                        };
                    };
                }, function (v) {
                    return function (row) {
                        var tail = ffRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(row);
                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                        var insert = Record_Unsafe.unsafeSet(key);
                        return insert(ff(dictHeytingAlgebra))(tail);
                    };
                }, function (v) {
                    return function (ra) {
                        return function (rb) {
                            var tail = impliesRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(implies(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
                        };
                    };
                }, function (v) {
                    return function (row) {
                        var tail = notRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(row);
                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                        var insert = Record_Unsafe.unsafeSet(key);
                        var get = Record_Unsafe.unsafeGet(key);
                        return insert(not(dictHeytingAlgebra)(get(row)))(tail);
                    };
                }, function (v) {
                    return function (row) {
                        var tail = ttRecord(dictHeytingAlgebraRecord)(Type_Data_RowList.RLProxy.value)(row);
                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                        var insert = Record_Unsafe.unsafeSet(key);
                        return insert(tt(dictHeytingAlgebra))(tail);
                    };
                });
            };
        };
    };
};
module.exports = {
    HeytingAlgebra: HeytingAlgebra,
    tt: tt,
    ff: ff,
    implies: implies,
    conj: conj,
    disj: disj,
    not: not,
    HeytingAlgebraRecord: HeytingAlgebraRecord,
    ffRecord: ffRecord,
    ttRecord: ttRecord,
    impliesRecord: impliesRecord,
    conjRecord: conjRecord,
    disjRecord: disjRecord,
    notRecord: notRecord,
    heytingAlgebraBoolean: heytingAlgebraBoolean,
    heytingAlgebraUnit: heytingAlgebraUnit,
    heytingAlgebraFunction: heytingAlgebraFunction,
    heytingAlgebraRecord: heytingAlgebraRecord,
    heytingAlgebraRecordNil: heytingAlgebraRecordNil,
    heytingAlgebraRecordCons: heytingAlgebraRecordCons
};

},{"../Data.Symbol/index.js":41,"../Data.Unit/index.js":43,"../Record.Unsafe/index.js":52,"../Type.Data.Row/index.js":54,"../Type.Data.RowList/index.js":53,"./foreign.js":23}],25:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var Monoid = function (Semigroup0, mempty) {
    this.Semigroup0 = Semigroup0;
    this.mempty = mempty;
};
var MonoidRecord = function (SemigroupRecord0, memptyRecord) {
    this.SemigroupRecord0 = SemigroupRecord0;
    this.memptyRecord = memptyRecord;
};
var monoidUnit = new Monoid(function () {
    return Data_Semigroup.semigroupUnit;
}, Data_Unit.unit);
var monoidString = new Monoid(function () {
    return Data_Semigroup.semigroupString;
}, "");
var monoidRecordNil = new MonoidRecord(function () {
    return Data_Semigroup.semigroupRecordNil;
}, function (v) {
    return {};
});
var monoidOrdering = new Monoid(function () {
    return Data_Ordering.semigroupOrdering;
}, Data_Ordering.EQ.value);
var monoidArray = new Monoid(function () {
    return Data_Semigroup.semigroupArray;
}, [  ]);
var memptyRecord = function (dict) {
    return dict.memptyRecord;
};
var monoidRecord = function (dictRowToList) {
    return function (dictMonoidRecord) {
        return new Monoid(function () {
            return Data_Semigroup.semigroupRecord(dictRowToList)(dictMonoidRecord.SemigroupRecord0());
        }, memptyRecord(dictMonoidRecord)(Type_Data_RowList.RLProxy.value));
    };
};
var mempty = function (dict) {
    return dict.mempty;
};
var monoidFn = function (dictMonoid) {
    return new Monoid(function () {
        return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
    }, function (v) {
        return mempty(dictMonoid);
    });
};
var monoidRecordCons = function (dictIsSymbol) {
    return function (dictMonoid) {
        return function (dictCons) {
            return function (dictMonoidRecord) {
                return new MonoidRecord(function () {
                    return Data_Semigroup.semigroupRecordCons(dictIsSymbol)(dictCons)(dictMonoidRecord.SemigroupRecord0())(dictMonoid.Semigroup0());
                }, function (v) {
                    var tail = memptyRecord(dictMonoidRecord)(Type_Data_RowList.RLProxy.value);
                    var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                    var insert = Record_Unsafe.unsafeSet(key);
                    return insert(mempty(dictMonoid))(tail);
                });
            };
        };
    };
};
var power = function (dictMonoid) {
    return function (x) {
        var go = function (p) {
            if (p <= 0) {
                return mempty(dictMonoid);
            };
            if (p === 1) {
                return x;
            };
            if (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(p)(2) === 0) {
                var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));
                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x$prime);
            };
            if (Data_Boolean.otherwise) {
                var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));
                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x));
            };
            throw new Error("Failed pattern match at Data.Monoid line 66, column 3 - line 66, column 17: " + [ p.constructor.name ]);
        };
        return go;
    };
};
var guard = function (dictMonoid) {
    return function (v) {
        return function (v1) {
            if (v) {
                return v1;
            };
            if (!v) {
                return mempty(dictMonoid);
            };
            throw new Error("Failed pattern match at Data.Monoid line 74, column 1 - line 74, column 49: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
module.exports = {
    Monoid: Monoid,
    mempty: mempty,
    power: power,
    guard: guard,
    MonoidRecord: MonoidRecord,
    memptyRecord: memptyRecord,
    monoidUnit: monoidUnit,
    monoidOrdering: monoidOrdering,
    monoidFn: monoidFn,
    monoidString: monoidString,
    monoidArray: monoidArray,
    monoidRecord: monoidRecord,
    monoidRecordNil: monoidRecordNil,
    monoidRecordCons: monoidRecordCons
};

},{"../Data.Boolean/index.js":10,"../Data.Eq/index.js":16,"../Data.EuclideanRing/index.js":18,"../Data.Ord/index.js":30,"../Data.Ordering/index.js":31,"../Data.Semigroup/index.js":35,"../Data.Symbol/index.js":41,"../Data.Unit/index.js":43,"../Record.Unsafe/index.js":52,"../Type.Data.RowList/index.js":53}],26:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
module.exports = {};

},{}],27:[function(require,module,exports){
"use strict";

exports.unsafeCompareImpl = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x === y ? eq : gt;
        };
      };
    };
  };
};

},{}],28:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var $foreign = require("./foreign.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
module.exports = {
    unsafeCompare: unsafeCompare
};

},{"../Data.Ordering/index.js":31,"./foreign.js":27}],29:[function(require,module,exports){
"use strict";

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

},{}],30:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var $foreign = require("./foreign.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Ord_Unsafe = require("../Data.Ord.Unsafe/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Data_Void = require("../Data.Void/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var Ord = function (Eq0, compare) {
    this.Eq0 = Eq0;
    this.compare = compare;
};
var Ord1 = function (Eq10, compare1) {
    this.Eq10 = Eq10;
    this.compare1 = compare1;
};
var OrdRecord = function (EqRecord0, compareRecord) {
    this.EqRecord0 = EqRecord0;
    this.compareRecord = compareRecord;
};
var ordVoid = new Ord(function () {
    return Data_Eq.eqVoid;
}, function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var ordUnit = new Ord(function () {
    return Data_Eq.eqUnit;
}, function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var ordString = new Ord(function () {
    return Data_Eq.eqString;
}, Data_Ord_Unsafe.unsafeCompare);
var ordRecordNil = new OrdRecord(function () {
    return Data_Eq.eqRowNil;
}, function (v) {
    return function (v1) {
        return function (v2) {
            return Data_Ordering.EQ.value;
        };
    };
});
var ordOrdering = new Ord(function () {
    return Data_Ordering.eqOrdering;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        throw new Error("Failed pattern match at Data.Ord line 73, column 1 - line 73, column 37: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var ordNumber = new Ord(function () {
    return Data_Eq.eqNumber;
}, Data_Ord_Unsafe.unsafeCompare);
var ordInt = new Ord(function () {
    return Data_Eq.eqInt;
}, Data_Ord_Unsafe.unsafeCompare);
var ordChar = new Ord(function () {
    return Data_Eq.eqChar;
}, Data_Ord_Unsafe.unsafeCompare);
var ordBoolean = new Ord(function () {
    return Data_Eq.eqBoolean;
}, Data_Ord_Unsafe.unsafeCompare);
var compareRecord = function (dict) {
    return dict.compareRecord;
};
var ordRecord = function (dictRowToList) {
    return function (dictOrdRecord) {
        return new Ord(function () {
            return Data_Eq.eqRec(dictRowToList)(dictOrdRecord.EqRecord0());
        }, compareRecord(dictOrdRecord)(Type_Data_RowList.RLProxy.value));
    };
};
var compare1 = function (dict) {
    return dict.compare1;
};
var compare = function (dict) {
    return dict.compare;
};
var comparing = function (dictOrd) {
    return function (f) {
        return function (x) {
            return function (y) {
                return compare(dictOrd)(f(x))(f(y));
            };
        };
    };
};
var greaterThan = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.GT) {
                return true;
            };
            return false;
        };
    };
};
var greaterThanOrEq = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.LT) {
                return false;
            };
            return true;
        };
    };
};
var signum = function (dictOrd) {
    return function (dictRing) {
        return function (x) {
            var $43 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
            if ($43) {
                return Data_Semiring.one(dictRing.Semiring0());
            };
            return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing.Semiring0()));
        };
    };
};
var lessThan = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.LT) {
                return true;
            };
            return false;
        };
    };
};
var lessThanOrEq = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.GT) {
                return false;
            };
            return true;
        };
    };
};
var max = function (dictOrd) {
    return function (x) {
        return function (y) {
            var v = compare(dictOrd)(x)(y);
            if (v instanceof Data_Ordering.LT) {
                return y;
            };
            if (v instanceof Data_Ordering.EQ) {
                return x;
            };
            if (v instanceof Data_Ordering.GT) {
                return x;
            };
            throw new Error("Failed pattern match at Data.Ord line 128, column 3 - line 131, column 12: " + [ v.constructor.name ]);
        };
    };
};
var min = function (dictOrd) {
    return function (x) {
        return function (y) {
            var v = compare(dictOrd)(x)(y);
            if (v instanceof Data_Ordering.LT) {
                return x;
            };
            if (v instanceof Data_Ordering.EQ) {
                return x;
            };
            if (v instanceof Data_Ordering.GT) {
                return y;
            };
            throw new Error("Failed pattern match at Data.Ord line 119, column 3 - line 122, column 12: " + [ v.constructor.name ]);
        };
    };
};
var ordArray = function (dictOrd) {
    return new Ord(function () {
        return Data_Eq.eqArray(dictOrd.Eq0());
    }, (function () {
        var toDelta = function (x) {
            return function (y) {
                var v = compare(dictOrd)(x)(y);
                if (v instanceof Data_Ordering.EQ) {
                    return 0;
                };
                if (v instanceof Data_Ordering.LT) {
                    return 1;
                };
                if (v instanceof Data_Ordering.GT) {
                    return -1 | 0;
                };
                throw new Error("Failed pattern match at Data.Ord line 66, column 7 - line 71, column 1: " + [ v.constructor.name ]);
            };
        };
        return function (xs) {
            return function (ys) {
                return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
            };
        };
    })());
};
var ord1Array = new Ord1(function () {
    return Data_Eq.eq1Array;
}, function (dictOrd) {
    return compare(ordArray(dictOrd));
});
var ordRecordCons = function (dictOrdRecord) {
    return function (dictCons) {
        return function (dictIsSymbol) {
            return function (dictOrd) {
                return new OrdRecord(function () {
                    return Data_Eq.eqRowCons(dictOrdRecord.EqRecord0())(dictCons)(dictIsSymbol)(dictOrd.Eq0());
                }, function (v) {
                    return function (ra) {
                        return function (rb) {
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            var left = compare(dictOrd)(Record_Unsafe.unsafeGet(key)(ra))(Record_Unsafe.unsafeGet(key)(rb));
                            var $49 = Data_Eq.notEq(Data_Ordering.eqOrdering)(left)(Data_Ordering.EQ.value);
                            if ($49) {
                                return left;
                            };
                            return compareRecord(dictOrdRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                        };
                    };
                });
            };
        };
    };
};
var clamp = function (dictOrd) {
    return function (low) {
        return function (hi) {
            return function (x) {
                return min(dictOrd)(hi)(max(dictOrd)(low)(x));
            };
        };
    };
};
var between = function (dictOrd) {
    return function (low) {
        return function (hi) {
            return function (x) {
                if (lessThan(dictOrd)(x)(low)) {
                    return false;
                };
                if (greaterThan(dictOrd)(x)(hi)) {
                    return false;
                };
                return true;
            };
        };
    };
};
var abs = function (dictOrd) {
    return function (dictRing) {
        return function (x) {
            var $53 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
            if ($53) {
                return x;
            };
            return Data_Ring.negate(dictRing)(x);
        };
    };
};
module.exports = {
    Ord: Ord,
    compare: compare,
    Ord1: Ord1,
    compare1: compare1,
    lessThan: lessThan,
    lessThanOrEq: lessThanOrEq,
    greaterThan: greaterThan,
    greaterThanOrEq: greaterThanOrEq,
    comparing: comparing,
    min: min,
    max: max,
    clamp: clamp,
    between: between,
    abs: abs,
    signum: signum,
    OrdRecord: OrdRecord,
    compareRecord: compareRecord,
    ordBoolean: ordBoolean,
    ordInt: ordInt,
    ordNumber: ordNumber,
    ordString: ordString,
    ordChar: ordChar,
    ordUnit: ordUnit,
    ordVoid: ordVoid,
    ordArray: ordArray,
    ordOrdering: ordOrdering,
    ord1Array: ord1Array,
    ordRecordNil: ordRecordNil,
    ordRecordCons: ordRecordCons,
    ordRecord: ordRecord
};

},{"../Data.Eq/index.js":16,"../Data.Ord.Unsafe/index.js":28,"../Data.Ordering/index.js":31,"../Data.Ring/index.js":33,"../Data.Semiring/index.js":37,"../Data.Symbol/index.js":41,"../Data.Unit/index.js":43,"../Data.Void/index.js":44,"../Record.Unsafe/index.js":52,"../Type.Data.RowList/index.js":53,"./foreign.js":29}],31:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var LT = (function () {
    function LT() {

    };
    LT.value = new LT();
    return LT;
})();
var GT = (function () {
    function GT() {

    };
    GT.value = new GT();
    return GT;
})();
var EQ = (function () {
    function EQ() {

    };
    EQ.value = new EQ();
    return EQ;
})();
var showOrdering = new Data_Show.Show(function (v) {
    if (v instanceof LT) {
        return "LT";
    };
    if (v instanceof GT) {
        return "GT";
    };
    if (v instanceof EQ) {
        return "EQ";
    };
    throw new Error("Failed pattern match at Data.Ordering line 26, column 1 - line 26, column 39: " + [ v.constructor.name ]);
});
var semigroupOrdering = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v instanceof LT) {
            return LT.value;
        };
        if (v instanceof GT) {
            return GT.value;
        };
        if (v instanceof EQ) {
            return v1;
        };
        throw new Error("Failed pattern match at Data.Ordering line 21, column 1 - line 21, column 49: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var invert = function (v) {
    if (v instanceof GT) {
        return LT.value;
    };
    if (v instanceof EQ) {
        return EQ.value;
    };
    if (v instanceof LT) {
        return GT.value;
    };
    throw new Error("Failed pattern match at Data.Ordering line 33, column 1 - line 33, column 31: " + [ v.constructor.name ]);
};
var eqOrdering = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof LT && v1 instanceof LT) {
            return true;
        };
        if (v instanceof GT && v1 instanceof GT) {
            return true;
        };
        if (v instanceof EQ && v1 instanceof EQ) {
            return true;
        };
        return false;
    };
});
module.exports = {
    LT: LT,
    GT: GT,
    EQ: EQ,
    invert: invert,
    eqOrdering: eqOrdering,
    semigroupOrdering: semigroupOrdering,
    showOrdering: showOrdering
};

},{"../Data.Eq/index.js":16,"../Data.Semigroup/index.js":35,"../Data.Show/index.js":39}],32:[function(require,module,exports){
"use strict";

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};

},{}],33:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var $foreign = require("./foreign.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var Ring = function (Semiring0, sub) {
    this.Semiring0 = Semiring0;
    this.sub = sub;
};
var RingRecord = function (SemiringRecord0, subRecord) {
    this.SemiringRecord0 = SemiringRecord0;
    this.subRecord = subRecord;
};
var subRecord = function (dict) {
    return dict.subRecord;
};
var sub = function (dict) {
    return dict.sub;
};
var ringUnit = new Ring(function () {
    return Data_Semiring.semiringUnit;
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
});
var ringRecordNil = new RingRecord(function () {
    return Data_Semiring.semiringRecordNil;
}, function (v) {
    return function (v1) {
        return function (v2) {
            return {};
        };
    };
});
var ringRecordCons = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictRingRecord) {
            return function (dictRing) {
                return new RingRecord(function () {
                    return Data_Semiring.semiringRecordCons(dictIsSymbol)(dictCons)(dictRingRecord.SemiringRecord0())(dictRing.Semiring0());
                }, function (v) {
                    return function (ra) {
                        return function (rb) {
                            var tail = subRecord(dictRingRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(sub(dictRing)(get(ra))(get(rb)))(tail);
                        };
                    };
                });
            };
        };
    };
};
var ringRecord = function (dictRowToList) {
    return function (dictRingRecord) {
        return new Ring(function () {
            return Data_Semiring.semiringRecord(dictRowToList)(dictRingRecord.SemiringRecord0());
        }, subRecord(dictRingRecord)(Type_Data_RowList.RLProxy.value));
    };
};
var ringNumber = new Ring(function () {
    return Data_Semiring.semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function () {
    return Data_Semiring.semiringInt;
}, $foreign.intSub);
var ringFn = function (dictRing) {
    return new Ring(function () {
        return Data_Semiring.semiringFn(dictRing.Semiring0());
    }, function (f) {
        return function (g) {
            return function (x) {
                return sub(dictRing)(f(x))(g(x));
            };
        };
    });
};
var negate = function (dictRing) {
    return function (a) {
        return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
    };
};
module.exports = {
    Ring: Ring,
    sub: sub,
    negate: negate,
    RingRecord: RingRecord,
    subRecord: subRecord,
    ringInt: ringInt,
    ringNumber: ringNumber,
    ringUnit: ringUnit,
    ringFn: ringFn,
    ringRecord: ringRecord,
    ringRecordNil: ringRecordNil,
    ringRecordCons: ringRecordCons
};

},{"../Data.Semiring/index.js":37,"../Data.Symbol/index.js":41,"../Data.Unit/index.js":43,"../Record.Unsafe/index.js":52,"../Type.Data.RowList/index.js":53,"./foreign.js":32}],34:[function(require,module,exports){
"use strict";

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    if (xs.length === 0) return ys;
    if (ys.length === 0) return xs;
    return xs.concat(ys);
  };
};

},{}],35:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var $foreign = require("./foreign.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Data_Void = require("../Data.Void/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var Semigroup = function (append) {
    this.append = append;
};
var SemigroupRecord = function (appendRecord) {
    this.appendRecord = appendRecord;
};
var semigroupVoid = new Semigroup(function (v) {
    return Data_Void.absurd;
});
var semigroupUnit = new Semigroup(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupRecordNil = new SemigroupRecord(function (v) {
    return function (v1) {
        return function (v2) {
            return {};
        };
    };
});
var semigroupArray = new Semigroup($foreign.concatArray);
var appendRecord = function (dict) {
    return dict.appendRecord;
};
var semigroupRecord = function (dictRowToList) {
    return function (dictSemigroupRecord) {
        return new Semigroup(appendRecord(dictSemigroupRecord)(Type_Data_RowList.RLProxy.value));
    };
};
var append = function (dict) {
    return dict.append;
};
var semigroupFn = function (dictSemigroup) {
    return new Semigroup(function (f) {
        return function (g) {
            return function (x) {
                return append(dictSemigroup)(f(x))(g(x));
            };
        };
    });
};
var semigroupRecordCons = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictSemigroupRecord) {
            return function (dictSemigroup) {
                return new SemigroupRecord(function (v) {
                    return function (ra) {
                        return function (rb) {
                            var tail = appendRecord(dictSemigroupRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(append(dictSemigroup)(get(ra))(get(rb)))(tail);
                        };
                    };
                });
            };
        };
    };
};
module.exports = {
    Semigroup: Semigroup,
    append: append,
    SemigroupRecord: SemigroupRecord,
    appendRecord: appendRecord,
    semigroupString: semigroupString,
    semigroupUnit: semigroupUnit,
    semigroupVoid: semigroupVoid,
    semigroupFn: semigroupFn,
    semigroupArray: semigroupArray,
    semigroupRecord: semigroupRecord,
    semigroupRecordNil: semigroupRecordNil,
    semigroupRecordCons: semigroupRecordCons
};

},{"../Data.Symbol/index.js":41,"../Data.Unit/index.js":43,"../Data.Void/index.js":44,"../Record.Unsafe/index.js":52,"../Type.Data.RowList/index.js":53,"./foreign.js":34}],36:[function(require,module,exports){
"use strict";

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};

},{}],37:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var $foreign = require("./foreign.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Data_Row = require("../Type.Data.Row/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var Semiring = function (add, mul, one, zero) {
    this.add = add;
    this.mul = mul;
    this.one = one;
    this.zero = zero;
};
var SemiringRecord = function (addRecord, mulRecord, oneRecord, zeroRecord) {
    this.addRecord = addRecord;
    this.mulRecord = mulRecord;
    this.oneRecord = oneRecord;
    this.zeroRecord = zeroRecord;
};
var zeroRecord = function (dict) {
    return dict.zeroRecord;
};
var zero = function (dict) {
    return dict.zero;
};
var semiringUnit = new Semiring(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, Data_Unit.unit, Data_Unit.unit);
var semiringRecordNil = new SemiringRecord(function (v) {
    return function (v1) {
        return function (v2) {
            return {};
        };
    };
}, function (v) {
    return function (v1) {
        return function (v2) {
            return {};
        };
    };
}, function (v) {
    return function (v1) {
        return {};
    };
}, function (v) {
    return function (v1) {
        return {};
    };
});
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
var oneRecord = function (dict) {
    return dict.oneRecord;
};
var one = function (dict) {
    return dict.one;
};
var mulRecord = function (dict) {
    return dict.mulRecord;
};
var mul = function (dict) {
    return dict.mul;
};
var addRecord = function (dict) {
    return dict.addRecord;
};
var semiringRecord = function (dictRowToList) {
    return function (dictSemiringRecord) {
        return new Semiring(addRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value), mulRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value), oneRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value), zeroRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value));
    };
};
var add = function (dict) {
    return dict.add;
};
var semiringFn = function (dictSemiring) {
    return new Semiring(function (f) {
        return function (g) {
            return function (x) {
                return add(dictSemiring)(f(x))(g(x));
            };
        };
    }, function (f) {
        return function (g) {
            return function (x) {
                return mul(dictSemiring)(f(x))(g(x));
            };
        };
    }, function (v) {
        return one(dictSemiring);
    }, function (v) {
        return zero(dictSemiring);
    });
};
var semiringRecordCons = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictSemiringRecord) {
            return function (dictSemiring) {
                return new SemiringRecord(function (v) {
                    return function (ra) {
                        return function (rb) {
                            var tail = addRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(add(dictSemiring)(get(ra))(get(rb)))(tail);
                        };
                    };
                }, function (v) {
                    return function (ra) {
                        return function (rb) {
                            var tail = mulRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            var get = Record_Unsafe.unsafeGet(key);
                            return insert(mul(dictSemiring)(get(ra))(get(rb)))(tail);
                        };
                    };
                }, function (v) {
                    return function (v1) {
                        var tail = oneRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value);
                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                        var insert = Record_Unsafe.unsafeSet(key);
                        return insert(one(dictSemiring))(tail);
                    };
                }, function (v) {
                    return function (v1) {
                        var tail = zeroRecord(dictSemiringRecord)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value);
                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                        var insert = Record_Unsafe.unsafeSet(key);
                        return insert(zero(dictSemiring))(tail);
                    };
                });
            };
        };
    };
};
module.exports = {
    Semiring: Semiring,
    add: add,
    zero: zero,
    mul: mul,
    one: one,
    SemiringRecord: SemiringRecord,
    addRecord: addRecord,
    mulRecord: mulRecord,
    oneRecord: oneRecord,
    zeroRecord: zeroRecord,
    semiringInt: semiringInt,
    semiringNumber: semiringNumber,
    semiringFn: semiringFn,
    semiringUnit: semiringUnit,
    semiringRecord: semiringRecord,
    semiringRecordNil: semiringRecordNil,
    semiringRecordCons: semiringRecordCons
};

},{"../Data.Symbol/index.js":41,"../Data.Unit/index.js":43,"../Record.Unsafe/index.js":52,"../Type.Data.Row/index.js":54,"../Type.Data.RowList/index.js":53,"./foreign.js":36}],38:[function(require,module,exports){
"use strict";

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  var str = n.toString();
  return isNaN(str + ".0") ? str : str + ".0";
};

exports.showCharImpl = function (c) {
  var code = c.charCodeAt(0);
  if (code < 0x20 || code === 0x7F) {
    switch (c) {
      case "\x07": return "'\\a'";
      case "\b": return "'\\b'";
      case "\f": return "'\\f'";
      case "\n": return "'\\n'";
      case "\r": return "'\\r'";
      case "\t": return "'\\t'";
      case "\v": return "'\\v'";
    }
    return "'\\" + code.toString(10) + "'";
  }
  return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  var l = s.length;
  return "\"" + s.replace(
    /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
    function (c, i) {
      switch (c) {
        case "\"":
        case "\\":
          return "\\" + c;
        case "\x07": return "\\a";
        case "\b": return "\\b";
        case "\f": return "\\f";
        case "\n": return "\\n";
        case "\r": return "\\r";
        case "\t": return "\\t";
        case "\v": return "\\v";
      }
      var k = i + 1;
      var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
      return "\\" + c.charCodeAt(0).toString(10) + empty;
    }
  ) + "\"";
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];
    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }
    return "[" + ss.join(",") + "]";
  };
};

exports.cons = function (head) {
  return function (tail) {
    return [head].concat(tail);
  };
};

exports.join = function (separator) {
  return function (xs) {
    return xs.join(separator);
  };
};

},{}],39:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var $foreign = require("./foreign.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var Show = function (show) {
    this.show = show;
};
var ShowRecordFields = function (showRecordFields) {
    this.showRecordFields = showRecordFields;
};
var showString = new Show($foreign.showStringImpl);
var showRecordFieldsNil = new ShowRecordFields(function (v) {
    return function (v1) {
        return [  ];
    };
});
var showRecordFields = function (dict) {
    return dict.showRecordFields;
};
var showRecord = function (dictRowToList) {
    return function (dictShowRecordFields) {
        return new Show(function (record) {
            var v = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);
            if (v.length === 0) {
                return "{}";
            };
            return $foreign.join(" ")([ "{", $foreign.join(", ")(v), "}" ]);
        });
    };
};
var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function (v) {
    if (v) {
        return "true";
    };
    if (!v) {
        return "false";
    };
    throw new Error("Failed pattern match at Data.Show line 20, column 1 - line 20, column 37: " + [ v.constructor.name ]);
});
var show = function (dict) {
    return dict.show;
};
var showArray = function (dictShow) {
    return new Show($foreign.showArrayImpl(show(dictShow)));
};
var showRecordFieldsCons = function (dictIsSymbol) {
    return function (dictShowRecordFields) {
        return function (dictShow) {
            return new ShowRecordFields(function (v) {
                return function (record) {
                    var tail = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);
                    var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                    var focus = Record_Unsafe.unsafeGet(key)(record);
                    return $foreign.cons($foreign.join(": ")([ key, show(dictShow)(focus) ]))(tail);
                };
            });
        };
    };
};
module.exports = {
    Show: Show,
    show: show,
    ShowRecordFields: ShowRecordFields,
    showRecordFields: showRecordFields,
    showBoolean: showBoolean,
    showInt: showInt,
    showNumber: showNumber,
    showChar: showChar,
    showString: showString,
    showArray: showArray,
    showRecord: showRecord,
    showRecordFieldsNil: showRecordFieldsNil,
    showRecordFieldsCons: showRecordFieldsCons
};

},{"../Data.Symbol/index.js":41,"../Record.Unsafe/index.js":52,"../Type.Data.RowList/index.js":53,"./foreign.js":38}],40:[function(require,module,exports){
"use strict";

// module Data.Symbol

exports.unsafeCoerce = function (arg) {
  return arg;
};


},{}],41:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var $foreign = require("./foreign.js");
var SProxy = (function () {
    function SProxy() {

    };
    SProxy.value = new SProxy();
    return SProxy;
})();
var IsSymbol = function (reflectSymbol) {
    this.reflectSymbol = reflectSymbol;
};
var reifySymbol = function (s) {
    return function (f) {
        return $foreign.unsafeCoerce(function (dictIsSymbol) {
            return f(dictIsSymbol);
        })({
            reflectSymbol: function (v) {
                return s;
            }
        })(SProxy.value);
    };
};
var reflectSymbol = function (dict) {
    return dict.reflectSymbol;
};
module.exports = {
    IsSymbol: IsSymbol,
    reflectSymbol: reflectSymbol,
    reifySymbol: reifySymbol,
    SProxy: SProxy
};

},{"./foreign.js":40}],42:[function(require,module,exports){
"use strict";

exports.unit = {};

},{}],43:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var $foreign = require("./foreign.js");
var Data_Show = require("../Data.Show/index.js");
var showUnit = new Data_Show.Show(function (v) {
    return "unit";
});
module.exports = {
    showUnit: showUnit,
    unit: $foreign.unit
};

},{"../Data.Show/index.js":39,"./foreign.js":42}],44:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var Data_Show = require("../Data.Show/index.js");
var Void = function (x) {
    return x;
};
var absurd = function (a) {
    var spin = function ($copy_v) {
        var $tco_result;
        function $tco_loop(v) {
            $copy_v = v;
            return;
        };
        while (!false) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return spin(a);
};
var showVoid = new Data_Show.Show(absurd);
module.exports = {
    absurd: absurd,
    showVoid: showVoid
};

},{"../Data.Show/index.js":39}],45:[function(require,module,exports){
"use strict";

exports.log = function (s) {
  return function () {
    console.log(s);
    return {};
  };
};

exports.warn = function (s) {
  return function () {
    console.warn(s);
    return {};
  };
};

exports.error = function (s) {
  return function () {
    console.error(s);
    return {};
  };
};

exports.info = function (s) {
  return function () {
    console.info(s);
    return {};
  };
};

exports.time = function (s) {
  return function () {
    console.time(s);
    return {};
  };
};

exports.timeEnd = function (s) {
  return function () {
    console.timeEnd(s);
    return {};
  };
};

},{}],46:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var $foreign = require("./foreign.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var warnShow = function (dictShow) {
    return function (a) {
        return $foreign.warn(Data_Show.show(dictShow)(a));
    };
};
var logShow = function (dictShow) {
    return function (a) {
        return $foreign.log(Data_Show.show(dictShow)(a));
    };
};
var infoShow = function (dictShow) {
    return function (a) {
        return $foreign.info(Data_Show.show(dictShow)(a));
    };
};
var errorShow = function (dictShow) {
    return function (a) {
        return $foreign.error(Data_Show.show(dictShow)(a));
    };
};
module.exports = {
    logShow: logShow,
    warnShow: warnShow,
    errorShow: errorShow,
    infoShow: infoShow,
    log: $foreign.log,
    warn: $foreign.warn,
    error: $foreign.error,
    info: $foreign.info,
    time: $foreign.time,
    timeEnd: $foreign.timeEnd
};

},{"../Data.Show/index.js":39,"../Data.Unit/index.js":43,"../Effect/index.js":48,"./foreign.js":45}],47:[function(require,module,exports){
"use strict";

exports.pureE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.untilE = function (f) {
  return function () {
    while (!f());
    return {};
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
      return {};
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

},{}],48:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Prelude = require("../Prelude/index.js");
var monadEffect = new Control_Monad.Monad(function () {
    return applicativeEffect;
}, function () {
    return bindEffect;
});
var bindEffect = new Control_Bind.Bind(function () {
    return applyEffect;
}, $foreign.bindE);
var applyEffect = new Control_Apply.Apply(function () {
    return functorEffect;
}, Control_Monad.ap(monadEffect));
var applicativeEffect = new Control_Applicative.Applicative(function () {
    return applyEffect;
}, $foreign.pureE);
var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
var semigroupEffect = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyEffect)(Data_Semigroup.append(dictSemigroup)));
};
var monoidEffect = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupEffect(dictMonoid.Semigroup0());
    }, $foreign.pureE(Data_Monoid.mempty(dictMonoid)));
};
module.exports = {
    functorEffect: functorEffect,
    applyEffect: applyEffect,
    applicativeEffect: applicativeEffect,
    bindEffect: bindEffect,
    monadEffect: monadEffect,
    semigroupEffect: semigroupEffect,
    monoidEffect: monoidEffect,
    untilE: $foreign.untilE,
    whileE: $foreign.whileE,
    forE: $foreign.forE,
    foreachE: $foreign.foreachE
};

},{"../Control.Applicative/index.js":1,"../Control.Apply/index.js":3,"../Control.Bind/index.js":5,"../Control.Monad/index.js":7,"../Data.Functor/index.js":22,"../Data.Monoid/index.js":25,"../Data.Semigroup/index.js":35,"../Prelude/index.js":50,"./foreign.js":47}],49:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var Effect = require("../Effect/index.js");
var Effect_Console = require("../Effect.Console/index.js");
var Prelude = require("../Prelude/index.js");
var main = Effect_Console.log("Hello sailor!");
module.exports = {
    main: main
};

},{"../Effect.Console/index.js":46,"../Effect/index.js":48,"../Prelude/index.js":50}],50:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");
var Data_DivisionRing = require("../Data.DivisionRing/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Field = require("../Data.Field/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_NaturalTransformation = require("../Data.NaturalTransformation/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ring = require("../Data.Ring/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Data_Void = require("../Data.Void/index.js");
module.exports = {};

},{"../Control.Applicative/index.js":1,"../Control.Apply/index.js":3,"../Control.Bind/index.js":5,"../Control.Category/index.js":6,"../Control.Monad/index.js":7,"../Control.Semigroupoid/index.js":8,"../Data.Boolean/index.js":10,"../Data.BooleanAlgebra/index.js":9,"../Data.Bounded/index.js":12,"../Data.CommutativeRing/index.js":13,"../Data.DivisionRing/index.js":14,"../Data.Eq/index.js":16,"../Data.EuclideanRing/index.js":18,"../Data.Field/index.js":19,"../Data.Function/index.js":20,"../Data.Functor/index.js":22,"../Data.HeytingAlgebra/index.js":24,"../Data.Monoid/index.js":25,"../Data.NaturalTransformation/index.js":26,"../Data.Ord/index.js":30,"../Data.Ordering/index.js":31,"../Data.Ring/index.js":33,"../Data.Semigroup/index.js":35,"../Data.Semiring/index.js":37,"../Data.Show/index.js":39,"../Data.Unit/index.js":43,"../Data.Void/index.js":44}],51:[function(require,module,exports){
"use strict";

exports.unsafeHas = function (label) {
  return function (rec) {
    return {}.hasOwnProperty.call(rec, label);
  };
};

exports.unsafeGet = function (label) {
  return function (rec) {
    return rec[label];
  };
};

exports.unsafeSet = function (label) {
  return function (value) {
    return function (rec) {
      var copy = {};
      for (var key in rec) {
        if ({}.hasOwnProperty.call(rec, key)) {
          copy[key] = rec[key];
        }
      }
      copy[label] = value;
      return copy;
    };
  };
};

exports.unsafeDelete = function (label) {
  return function (rec) {
    var copy = {};
    for (var key in rec) {
      if (key !== label && {}.hasOwnProperty.call(rec, key)) {
        copy[key] = rec[key];
      }
    }
    return copy;
  };
};

},{}],52:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var $foreign = require("./foreign.js");
module.exports = {
    unsafeHas: $foreign.unsafeHas,
    unsafeGet: $foreign.unsafeGet,
    unsafeSet: $foreign.unsafeSet,
    unsafeDelete: $foreign.unsafeDelete
};

},{"./foreign.js":51}],53:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var RLProxy = (function () {
    function RLProxy() {

    };
    RLProxy.value = new RLProxy();
    return RLProxy;
})();
module.exports = {
    RLProxy: RLProxy
};

},{}],54:[function(require,module,exports){
// Generated by purs version 0.12.1
"use strict";
var RProxy = (function () {
    function RProxy() {

    };
    RProxy.value = new RProxy();
    return RProxy;
})();
module.exports = {
    RProxy: RProxy
};

},{}],55:[function(require,module,exports){
require('Main').main();

},{"Main":49}]},{},[55]);
( f u n c t i o n ( ) { f u n c t i o n   r ( e , n , t ) { f u n c t i o n   o ( i , f ) { i f ( ! n [ i ] ) { i f ( ! e [ i ] ) { v a r   c = " f u n c t i o n " = = t y p e o f   r e q u i r e & & r e q u i r e ; i f ( ! f & & c ) r e t u r n   c ( i , ! 0 ) ; i f ( u ) r e t u r n   u ( i , ! 0 ) ; v a r   a = n e w   E r r o r ( " C a n n o t   f i n d   m o d u l e   ' " + i + " ' " ) ; t h r o w   a . c o d e = " M O D U L E _ N O T _ F O U N D " , a } v a r   p = n [ i ] = { e x p o r t s : { } } ; e [ i ] [ 0 ] . c a l l ( p . e x p o r t s , f u n c t i o n ( r ) { v a r   n = e [ i ] [ 1 ] [ r ] ; r e t u r n   o ( n | | r ) } , p , p . e x p o r t s , r , e , n , t ) } r e t u r n   n [ i ] . e x p o r t s } f o r ( v a r   u = " f u n c t i o n " = = t y p e o f   r e q u i r e & & r e q u i r e , i = 0 ; i < t . l e n g t h ; i + + ) o ( t [ i ] ) ; r e t u r n   o } r e t u r n   r } ) ( ) ( { 1 : [ f u n c t i o n ( r e q u i r e , m o d u l e , e x p o r t s ) {  
 / /   s h i m   f o r   u s i n g   p r o c e s s   i n   b r o w s e r  
 v a r   p r o c e s s   =   m o d u l e . e x p o r t s   =   { } ;  
  
 / /   c a c h e d   f r o m   w h a t e v e r   g l o b a l   i s   p r e s e n t   s o   t h a t   t e s t   r u n n e r s   t h a t   s t u b   i t  
 / /   d o n ' t   b r e a k   t h i n g s .     B u t   w e   n e e d   t o   w r a p   i t   i n   a   t r y   c a t c h   i n   c a s e   i t   i s  
 / /   w r a p p e d   i n   s t r i c t   m o d e   c o d e   w h i c h   d o e s n ' t   d e f i n e   a n y   g l o b a l s .     I t ' s   i n s i d e   a  
 / /   f u n c t i o n   b e c a u s e   t r y / c a t c h e s   d e o p t i m i z e   i n   c e r t a i n   e n g i n e s .  
  
 v a r   c a c h e d S e t T i m e o u t ;  
 v a r   c a c h e d C l e a r T i m e o u t ;  
  
 f u n c t i o n   d e f a u l t S e t T i m o u t ( )   {  
         t h r o w   n e w   E r r o r ( ' s e t T i m e o u t   h a s   n o t   b e e n   d e f i n e d ' ) ;  
 }  
 f u n c t i o n   d e f a u l t C l e a r T i m e o u t   ( )   {  
         t h r o w   n e w   E r r o r ( ' c l e a r T i m e o u t   h a s   n o t   b e e n   d e f i n e d ' ) ;  
 }  
 ( f u n c t i o n   ( )   {  
         t r y   {  
                 i f   ( t y p e o f   s e t T i m e o u t   = = =   ' f u n c t i o n ' )   {  
                         c a c h e d S e t T i m e o u t   =   s e t T i m e o u t ;  
                 }   e l s e   {  
                         c a c h e d S e t T i m e o u t   =   d e f a u l t S e t T i m o u t ;  
                 }  
         }   c a t c h   ( e )   {  
                 c a c h e d S e t T i m e o u t   =   d e f a u l t S e t T i m o u t ;  
         }  
         t r y   {  
                 i f   ( t y p e o f   c l e a r T i m e o u t   = = =   ' f u n c t i o n ' )   {  
                         c a c h e d C l e a r T i m e o u t   =   c l e a r T i m e o u t ;  
                 }   e l s e   {  
                         c a c h e d C l e a r T i m e o u t   =   d e f a u l t C l e a r T i m e o u t ;  
                 }  
         }   c a t c h   ( e )   {  
                 c a c h e d C l e a r T i m e o u t   =   d e f a u l t C l e a r T i m e o u t ;  
         }  
 }   ( ) )  
 f u n c t i o n   r u n T i m e o u t ( f u n )   {  
         i f   ( c a c h e d S e t T i m e o u t   = = =   s e t T i m e o u t )   {  
                 / / n o r m a l   e n v i r o m e n t s   i n   s a n e   s i t u a t i o n s  
                 r e t u r n   s e t T i m e o u t ( f u n ,   0 ) ;  
         }  
         / /   i f   s e t T i m e o u t   w a s n ' t   a v a i l a b l e   b u t   w a s   l a t t e r   d e f i n e d  
         i f   ( ( c a c h e d S e t T i m e o u t   = = =   d e f a u l t S e t T i m o u t   | |   ! c a c h e d S e t T i m e o u t )   & &   s e t T i m e o u t )   {  
                 c a c h e d S e t T i m e o u t   =   s e t T i m e o u t ;  
                 r e t u r n   s e t T i m e o u t ( f u n ,   0 ) ;  
         }  
         t r y   {  
                 / /   w h e n   w h e n   s o m e b o d y   h a s   s c r e w e d   w i t h   s e t T i m e o u t   b u t   n o   I . E .   m a d d n e s s  
                 r e t u r n   c a c h e d S e t T i m e o u t ( f u n ,   0 ) ;  
         }   c a t c h ( e ) {  
                 t r y   {  
                         / /   W h e n   w e   a r e   i n   I . E .   b u t   t h e   s c r i p t   h a s   b e e n   e v a l e d   s o   I . E .   d o e s n ' t   t r u s t   t h e   g l o b a l   o b j e c t   w h e n   c a l l e d   n o r m a l l y  
                         r e t u r n   c a c h e d S e t T i m e o u t . c a l l ( n u l l ,   f u n ,   0 ) ;  
                 }   c a t c h ( e ) {  
                         / /   s a m e   a s   a b o v e   b u t   w h e n   i t ' s   a   v e r s i o n   o f   I . E .   t h a t   m u s t   h a v e   t h e   g l o b a l   o b j e c t   f o r   ' t h i s ' ,   h o p f u l l y   o u r   c o n t e x t   c o r r e c t   o t h e r w i s e   i t   w i l l   t h r o w   a   g l o b a l   e r r o r  
                         r e t u r n   c a c h e d S e t T i m e o u t . c a l l ( t h i s ,   f u n ,   0 ) ;  
                 }  
         }  
  
  
 }  
 f u n c t i o n   r u n C l e a r T i m e o u t ( m a r k e r )   {  
         i f   ( c a c h e d C l e a r T i m e o u t   = = =   c l e a r T i m e o u t )   {  
                 / / n o r m a l   e n v i r o m e n t s   i n   s a n e   s i t u a t i o n s  
                 r e t u r n   c l e a r T i m e o u t ( m a r k e r ) ;  
         }  
         / /   i f   c l e a r T i m e o u t   w a s n ' t   a v a i l a b l e   b u t   w a s   l a t t e r   d e f i n e d  
         i f   ( ( c a c h e d C l e a r T i m e o u t   = = =   d e f a u l t C l e a r T i m e o u t   | |   ! c a c h e d C l e a r T i m e o u t )   & &   c l e a r T i m e o u t )   {  
                 c a c h e d C l e a r T i m e o u t   =   c l e a r T i m e o u t ;  
                 r e t u r n   c l e a r T i m e o u t ( m a r k e r ) ;  
         }  
         t r y   {  
                 / /   w h e n   w h e n   s o m e b o d y   h a s   s c r e w e d   w i t h   s e t T i m e o u t   b u t   n o   I . E .   m a d d n e s s  
                 r e t u r n   c a c h e d C l e a r T i m e o u t ( m a r k e r ) ;  
         }   c a t c h   ( e ) {  
                 t r y   {  
                         / /   W h e n   w e   a r e   i n   I . E .   b u t   t h e   s c r i p t   h a s   b e e n   e v a l e d   s o   I . E .   d o e s n ' t     t r u s t   t h e   g l o b a l   o b j e c t   w h e n   c a l l e d   n o r m a l l y  
                         r e t u r n   c a c h e d C l e a r T i m e o u t . c a l l ( n u l l ,   m a r k e r ) ;  
                 }   c a t c h   ( e ) {  
                         / /   s a m e   a s   a b o v e   b u t   w h e n   i t ' s   a   v e r s i o n   o f   I . E .   t h a t   m u s t   h a v e   t h e   g l o b a l   o b j e c t   f o r   ' t h i s ' ,   h o p f u l l y   o u r   c o n t e x t   c o r r e c t   o t h e r w i s e   i t   w i l l   t h r o w   a   g l o b a l   e r r o r .  
                         / /   S o m e   v e r s i o n s   o f   I . E .   h a v e   d i f f e r e n t   r u l e s   f o r   c l e a r T i m e o u t   v s   s e t T i m e o u t  
                         r e t u r n   c a c h e d C l e a r T i m e o u t . c a l l ( t h i s ,   m a r k e r ) ;  
                 }  
         }  
  
  
  
 }  
 v a r   q u e u e   =   [ ] ;  
 v a r   d r a i n i n g   =   f a l s e ;  
 v a r   c u r r e n t Q u e u e ;  
 v a r   q u e u e I n d e x   =   - 1 ;  
  
 f u n c t i o n   c l e a n U p N e x t T i c k ( )   {  
         i f   ( ! d r a i n i n g   | |   ! c u r r e n t Q u e u e )   {  
                 r e t u r n ;  
         }  
         d r a i n i n g   =   f a l s e ;  
         i f   ( c u r r e n t Q u e u e . l e n g t h )   {  
                 q u e u e   =   c u r r e n t Q u e u e . c o n c a t ( q u e u e ) ;  
         }   e l s e   {  
                 q u e u e I n d e x   =   - 1 ;  
         }  
         i f   ( q u e u e . l e n g t h )   {  
                 d r a i n Q u e u e ( ) ;  
         }  
 }  
  
 f u n c t i o n   d r a i n Q u e u e ( )   {  
         i f   ( d r a i n i n g )   {  
                 r e t u r n ;  
         }  
         v a r   t i m e o u t   =   r u n T i m e o u t ( c l e a n U p N e x t T i c k ) ;  
         d r a i n i n g   =   t r u e ;  
  
         v a r   l e n   =   q u e u e . l e n g t h ;  
         w h i l e ( l e n )   {  
                 c u r r e n t Q u e u e   =   q u e u e ;  
                 q u e u e   =   [ ] ;  
                 w h i l e   ( + + q u e u e I n d e x   <   l e n )   {  
                         i f   ( c u r r e n t Q u e u e )   {  
                                 c u r r e n t Q u e u e [ q u e u e I n d e x ] . r u n ( ) ;  
                         }  
                 }  
                 q u e u e I n d e x   =   - 1 ;  
                 l e n   =   q u e u e . l e n g t h ;  
         }  
         c u r r e n t Q u e u e   =   n u l l ;  
         d r a i n i n g   =   f a l s e ;  
         r u n C l e a r T i m e o u t ( t i m e o u t ) ;  
 }  
  
 p r o c e s s . n e x t T i c k   =   f u n c t i o n   ( f u n )   {  
         v a r   a r g s   =   n e w   A r r a y ( a r g u m e n t s . l e n g t h   -   1 ) ;  
         i f   ( a r g u m e n t s . l e n g t h   >   1 )   {  
                 f o r   ( v a r   i   =   1 ;   i   <   a r g u m e n t s . l e n g t h ;   i + + )   {  
                         a r g s [ i   -   1 ]   =   a r g u m e n t s [ i ] ;  
                 }  
         }  
         q u e u e . p u s h ( n e w   I t e m ( f u n ,   a r g s ) ) ;  
         i f   ( q u e u e . l e n g t h   = = =   1   & &   ! d r a i n i n g )   {  
                 r u n T i m e o u t ( d r a i n Q u e u e ) ;  
         }  
 } ;  
  
 / /   v 8   l i k e s   p r e d i c t i b l e   o b j e c t s  
 f u n c t i o n   I t e m ( f u n ,   a r r a y )   {  
         t h i s . f u n   =   f u n ;  
         t h i s . a r r a y   =   a r r a y ;  
 }  
 I t e m . p r o t o t y p e . r u n   =   f u n c t i o n   ( )   {  
         t h i s . f u n . a p p l y ( n u l l ,   t h i s . a r r a y ) ;  
 } ;  
 p r o c e s s . t i t l e   =   ' b r o w s e r ' ;  
 p r o c e s s . b r o w s e r   =   t r u e ;  
 p r o c e s s . e n v   =   { } ;  
 p r o c e s s . a r g v   =   [ ] ;  
 p r o c e s s . v e r s i o n   =   ' ' ;   / /   e m p t y   s t r i n g   t o   a v o i d   r e g e x p   i s s u e s  
 p r o c e s s . v e r s i o n s   =   { } ;  
  
 f u n c t i o n   n o o p ( )   { }  
  
 p r o c e s s . o n   =   n o o p ;  
 p r o c e s s . a d d L i s t e n e r   =   n o o p ;  
 p r o c e s s . o n c e   =   n o o p ;  
 p r o c e s s . o f f   =   n o o p ;  
 p r o c e s s . r e m o v e L i s t e n e r   =   n o o p ;  
 p r o c e s s . r e m o v e A l l L i s t e n e r s   =   n o o p ;  
 p r o c e s s . e m i t   =   n o o p ;  
 p r o c e s s . p r e p e n d L i s t e n e r   =   n o o p ;  
 p r o c e s s . p r e p e n d O n c e L i s t e n e r   =   n o o p ;  
  
 p r o c e s s . l i s t e n e r s   =   f u n c t i o n   ( n a m e )   {   r e t u r n   [ ]   }  
  
 p r o c e s s . b i n d i n g   =   f u n c t i o n   ( n a m e )   {  
         t h r o w   n e w   E r r o r ( ' p r o c e s s . b i n d i n g   i s   n o t   s u p p o r t e d ' ) ;  
 } ;  
  
 p r o c e s s . c w d   =   f u n c t i o n   ( )   {   r e t u r n   ' / '   } ;  
 p r o c e s s . c h d i r   =   f u n c t i o n   ( d i r )   {  
         t h r o w   n e w   E r r o r ( ' p r o c e s s . c h d i r   i s   n o t   s u p p o r t e d ' ) ;  
 } ;  
 p r o c e s s . u m a s k   =   f u n c t i o n ( )   {   r e t u r n   0 ;   } ;  
  
 } , { } ] , 2 : [ f u n c t i o n ( r e q u i r e , m o d u l e , e x p o r t s ) {  
 ( f u n c t i o n   ( p r o c e s s ) {  
 / /   G e n e r a t e d   b y   p u r s   b u n d l e   0 . 1 2 . 1  
 v a r   P S   =   { } ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   S e m i g r o u p o i d   =   f u n c t i o n   ( c o m p o s e )   {  
             t h i s . c o m p o s e   =   c o m p o s e ;  
     } ;  
     v a r   s e m i g r o u p o i d F n   =   n e w   S e m i g r o u p o i d ( f u n c t i o n   ( f )   {  
             r e t u r n   f u n c t i o n   ( g )   {  
                     r e t u r n   f u n c t i o n   ( x )   {  
                             r e t u r n   f ( g ( x ) ) ;  
                     } ;  
             } ;  
     } ) ;  
     v a r   c o m p o s e   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . c o m p o s e ;  
     } ;  
     e x p o r t s [ " c o m p o s e " ]   =   c o m p o s e ;  
     e x p o r t s [ " S e m i g r o u p o i d " ]   =   S e m i g r o u p o i d ;  
     e x p o r t s [ " s e m i g r o u p o i d F n " ]   =   s e m i g r o u p o i d F n ;  
 } ) ( P S [ " C o n t r o l . S e m i g r o u p o i d " ]   =   P S [ " C o n t r o l . S e m i g r o u p o i d " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   C o n t r o l _ S e m i g r o u p o i d   =   P S [ " C o n t r o l . S e m i g r o u p o i d " ] ;                                    
     v a r   C a t e g o r y   =   f u n c t i o n   ( S e m i g r o u p o i d 0 ,   i d e n t i t y )   {  
             t h i s . S e m i g r o u p o i d 0   =   S e m i g r o u p o i d 0 ;  
             t h i s . i d e n t i t y   =   i d e n t i t y ;  
     } ;  
     v a r   i d e n t i t y   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . i d e n t i t y ;  
     } ;  
     v a r   c a t e g o r y F n   =   n e w   C a t e g o r y ( f u n c t i o n   ( )   {  
             r e t u r n   C o n t r o l _ S e m i g r o u p o i d . s e m i g r o u p o i d F n ;  
     } ,   f u n c t i o n   ( x )   {  
             r e t u r n   x ;  
     } ) ;  
     e x p o r t s [ " C a t e g o r y " ]   =   C a t e g o r y ;  
     e x p o r t s [ " i d e n t i t y " ]   =   i d e n t i t y ;  
     e x p o r t s [ " c a t e g o r y F n " ]   =   c a t e g o r y F n ;  
 } ) ( P S [ " C o n t r o l . C a t e g o r y " ]   =   P S [ " C o n t r o l . C a t e g o r y " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   o t h e r w i s e   =   t r u e ;  
     e x p o r t s [ " o t h e r w i s e " ]   =   o t h e r w i s e ;  
 } ) ( P S [ " D a t a . B o o l e a n " ]   =   P S [ " D a t a . B o o l e a n " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
         " u s e   s t r i c t " ;  
  
     e x p o r t s . r e f E q   =   f u n c t i o n   ( r 1 )   {  
         r e t u r n   f u n c t i o n   ( r 2 )   {  
             r e t u r n   r 1   = = =   r 2 ;  
         } ;  
     } ;  
 } ) ( P S [ " D a t a . E q " ]   =   P S [ " D a t a . E q " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
         " u s e   s t r i c t " ;  
  
     e x p o r t s . b o o l C o n j   =   f u n c t i o n   ( b 1 )   {  
         r e t u r n   f u n c t i o n   ( b 2 )   {  
             r e t u r n   b 1   & &   b 2 ;  
         } ;  
     } ;  
  
     e x p o r t s . b o o l D i s j   =   f u n c t i o n   ( b 1 )   {  
         r e t u r n   f u n c t i o n   ( b 2 )   {  
             r e t u r n   b 1   | |   b 2 ;  
         } ;  
     } ;  
  
     e x p o r t s . b o o l N o t   =   f u n c t i o n   ( b )   {  
         r e t u r n   ! b ;  
     } ;  
 } ) ( P S [ " D a t a . H e y t i n g A l g e b r a " ]   =   P S [ " D a t a . H e y t i n g A l g e b r a " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
         " u s e   s t r i c t " ;  
  
     e x p o r t s . u n i t   =   { } ;  
 } ) ( P S [ " D a t a . U n i t " ]   =   P S [ " D a t a . U n i t " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " D a t a . U n i t " ] ;  
     v a r   D a t a _ S h o w   =   P S [ " D a t a . S h o w " ] ;  
     e x p o r t s [ " u n i t " ]   =   $ f o r e i g n . u n i t ;  
 } ) ( P S [ " D a t a . U n i t " ]   =   P S [ " D a t a . U n i t " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " D a t a . H e y t i n g A l g e b r a " ] ;  
     v a r   D a t a _ S y m b o l   =   P S [ " D a t a . S y m b o l " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;  
     v a r   R e c o r d _ U n s a f e   =   P S [ " R e c o r d . U n s a f e " ] ;  
     v a r   T y p e _ D a t a _ R o w   =   P S [ " T y p e . D a t a . R o w " ] ;  
     v a r   T y p e _ D a t a _ R o w L i s t   =   P S [ " T y p e . D a t a . R o w L i s t " ] ;                                    
     v a r   H e y t i n g A l g e b r a   =   f u n c t i o n   ( c o n j ,   d i s j ,   f f ,   i m p l i e s ,   n o t ,   t t )   {  
             t h i s . c o n j   =   c o n j ;  
             t h i s . d i s j   =   d i s j ;  
             t h i s . f f   =   f f ;  
             t h i s . i m p l i e s   =   i m p l i e s ;  
             t h i s . n o t   =   n o t ;  
             t h i s . t t   =   t t ;  
     } ;  
     v a r   t t   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . t t ;  
     } ;  
     v a r   n o t   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . n o t ;  
     } ;  
     v a r   i m p l i e s   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . i m p l i e s ;  
     } ;  
     v a r   f f   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . f f ;  
     } ;  
     v a r   d i s j   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . d i s j ;  
     } ;  
     v a r   h e y t i n g A l g e b r a B o o l e a n   =   n e w   H e y t i n g A l g e b r a ( $ f o r e i g n . b o o l C o n j ,   $ f o r e i g n . b o o l D i s j ,   f a l s e ,   f u n c t i o n   ( a )   {  
             r e t u r n   f u n c t i o n   ( b )   {  
                     r e t u r n   d i s j ( h e y t i n g A l g e b r a B o o l e a n ) ( n o t ( h e y t i n g A l g e b r a B o o l e a n ) ( a ) ) ( b ) ;  
             } ;  
     } ,   $ f o r e i g n . b o o l N o t ,   t r u e ) ;  
     v a r   c o n j   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . c o n j ;  
     } ;  
     e x p o r t s [ " H e y t i n g A l g e b r a " ]   =   H e y t i n g A l g e b r a ;  
     e x p o r t s [ " t t " ]   =   t t ;  
     e x p o r t s [ " f f " ]   =   f f ;  
     e x p o r t s [ " i m p l i e s " ]   =   i m p l i e s ;  
     e x p o r t s [ " c o n j " ]   =   c o n j ;  
     e x p o r t s [ " d i s j " ]   =   d i s j ;  
     e x p o r t s [ " n o t " ]   =   n o t ;  
     e x p o r t s [ " h e y t i n g A l g e b r a B o o l e a n " ]   =   h e y t i n g A l g e b r a B o o l e a n ;  
 } ) ( P S [ " D a t a . H e y t i n g A l g e b r a " ]   =   P S [ " D a t a . H e y t i n g A l g e b r a " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " D a t a . E q " ] ;  
     v a r   D a t a _ H e y t i n g A l g e b r a   =   P S [ " D a t a . H e y t i n g A l g e b r a " ] ;  
     v a r   D a t a _ S y m b o l   =   P S [ " D a t a . S y m b o l " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;  
     v a r   D a t a _ V o i d   =   P S [ " D a t a . V o i d " ] ;  
     v a r   R e c o r d _ U n s a f e   =   P S [ " R e c o r d . U n s a f e " ] ;  
     v a r   T y p e _ D a t a _ R o w L i s t   =   P S [ " T y p e . D a t a . R o w L i s t " ] ;                                    
     v a r   E q   =   f u n c t i o n   ( e q )   {  
             t h i s . e q   =   e q ;  
     } ;                                                                          
     v a r   e q I n t   =   n e w   E q ( $ f o r e i g n . r e f E q ) ;    
     v a r   e q B o o l e a n   =   n e w   E q ( $ f o r e i g n . r e f E q ) ;  
     v a r   e q   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . e q ;  
     } ;  
     v a r   n o t E q   =   f u n c t i o n   ( d i c t E q )   {  
             r e t u r n   f u n c t i o n   ( x )   {  
                     r e t u r n   f u n c t i o n   ( y )   {  
                             r e t u r n   e q ( e q B o o l e a n ) ( e q ( d i c t E q ) ( x ) ( y ) ) ( f a l s e ) ;  
                     } ;  
             } ;  
     } ;  
     e x p o r t s [ " E q " ]   =   E q ;  
     e x p o r t s [ " e q " ]   =   e q ;  
     e x p o r t s [ " n o t E q " ]   =   n o t E q ;  
     e x p o r t s [ " e q B o o l e a n " ]   =   e q B o o l e a n ;  
     e x p o r t s [ " e q I n t " ]   =   e q I n t ;  
 } ) ( P S [ " D a t a . E q " ]   =   P S [ " D a t a . E q " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
         " u s e   s t r i c t " ;  
  
     e x p o r t s . u n s a f e C o m p a r e I m p l   =   f u n c t i o n   ( l t )   {  
         r e t u r n   f u n c t i o n   ( e q )   {  
             r e t u r n   f u n c t i o n   ( g t )   {  
                 r e t u r n   f u n c t i o n   ( x )   {  
                     r e t u r n   f u n c t i o n   ( y )   {  
                         r e t u r n   x   <   y   ?   l t   :   x   = = =   y   ?   e q   :   g t ;  
                     } ;  
                 } ;  
             } ;  
         } ;  
     } ;  
 } ) ( P S [ " D a t a . O r d . U n s a f e " ]   =   P S [ " D a t a . O r d . U n s a f e " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " D a t a . S e m i g r o u p " ] ;  
     v a r   D a t a _ S y m b o l   =   P S [ " D a t a . S y m b o l " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;  
     v a r   D a t a _ V o i d   =   P S [ " D a t a . V o i d " ] ;  
     v a r   R e c o r d _ U n s a f e   =   P S [ " R e c o r d . U n s a f e " ] ;  
     v a r   T y p e _ D a t a _ R o w L i s t   =   P S [ " T y p e . D a t a . R o w L i s t " ] ;                                    
     v a r   S e m i g r o u p   =   f u n c t i o n   ( a p p e n d )   {  
             t h i s . a p p e n d   =   a p p e n d ;  
     } ;  
     v a r   a p p e n d   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . a p p e n d ;  
     } ;  
     e x p o r t s [ " S e m i g r o u p " ]   =   S e m i g r o u p ;  
     e x p o r t s [ " a p p e n d " ]   =   a p p e n d ;  
 } ) ( P S [ " D a t a . S e m i g r o u p " ]   =   P S [ " D a t a . S e m i g r o u p " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   D a t a _ E q   =   P S [ " D a t a . E q " ] ;  
     v a r   D a t a _ S e m i g r o u p   =   P S [ " D a t a . S e m i g r o u p " ] ;  
     v a r   D a t a _ S h o w   =   P S [ " D a t a . S h o w " ] ;                                    
     v a r   L T   =   ( f u n c t i o n   ( )   {  
             f u n c t i o n   L T ( )   {  
  
             } ;  
             L T . v a l u e   =   n e w   L T ( ) ;  
             r e t u r n   L T ;  
     } ) ( ) ;  
     v a r   G T   =   ( f u n c t i o n   ( )   {  
             f u n c t i o n   G T ( )   {  
  
             } ;  
             G T . v a l u e   =   n e w   G T ( ) ;  
             r e t u r n   G T ;  
     } ) ( ) ;  
     v a r   E Q   =   ( f u n c t i o n   ( )   {  
             f u n c t i o n   E Q ( )   {  
  
             } ;  
             E Q . v a l u e   =   n e w   E Q ( ) ;  
             r e t u r n   E Q ;  
     } ) ( ) ;  
     e x p o r t s [ " L T " ]   =   L T ;  
     e x p o r t s [ " G T " ]   =   G T ;  
     e x p o r t s [ " E Q " ]   =   E Q ;  
 } ) ( P S [ " D a t a . O r d e r i n g " ]   =   P S [ " D a t a . O r d e r i n g " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " D a t a . O r d . U n s a f e " ] ;  
     v a r   D a t a _ O r d e r i n g   =   P S [ " D a t a . O r d e r i n g " ] ;                                    
     v a r   u n s a f e C o m p a r e   =   $ f o r e i g n . u n s a f e C o m p a r e I m p l ( D a t a _ O r d e r i n g . L T . v a l u e ) ( D a t a _ O r d e r i n g . E Q . v a l u e ) ( D a t a _ O r d e r i n g . G T . v a l u e ) ;  
     e x p o r t s [ " u n s a f e C o m p a r e " ]   =   u n s a f e C o m p a r e ;  
 } ) ( P S [ " D a t a . O r d . U n s a f e " ]   =   P S [ " D a t a . O r d . U n s a f e " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
         " u s e   s t r i c t " ;  
  
     e x p o r t s . i n t S u b   =   f u n c t i o n   ( x )   {  
         r e t u r n   f u n c t i o n   ( y )   {  
             / *   j s h i n t   b i t w i s e :   f a l s e   * /  
             r e t u r n   x   -   y   |   0 ;  
         } ;  
     } ;  
 } ) ( P S [ " D a t a . R i n g " ]   =   P S [ " D a t a . R i n g " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
         " u s e   s t r i c t " ;  
  
     e x p o r t s . i n t A d d   =   f u n c t i o n   ( x )   {  
         r e t u r n   f u n c t i o n   ( y )   {  
             / *   j s h i n t   b i t w i s e :   f a l s e   * /  
             r e t u r n   x   +   y   |   0 ;  
         } ;  
     } ;  
  
     e x p o r t s . i n t M u l   =   f u n c t i o n   ( x )   {  
         r e t u r n   f u n c t i o n   ( y )   {  
             / *   j s h i n t   b i t w i s e :   f a l s e   * /  
             r e t u r n   x   *   y   |   0 ;  
         } ;  
     } ;  
  
     e x p o r t s . n u m A d d   =   f u n c t i o n   ( n 1 )   {  
         r e t u r n   f u n c t i o n   ( n 2 )   {  
             r e t u r n   n 1   +   n 2 ;  
         } ;  
     } ;  
  
     e x p o r t s . n u m M u l   =   f u n c t i o n   ( n 1 )   {  
         r e t u r n   f u n c t i o n   ( n 2 )   {  
             r e t u r n   n 1   *   n 2 ;  
         } ;  
     } ;  
 } ) ( P S [ " D a t a . S e m i r i n g " ]   =   P S [ " D a t a . S e m i r i n g " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " D a t a . S e m i r i n g " ] ;  
     v a r   D a t a _ S y m b o l   =   P S [ " D a t a . S y m b o l " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;  
     v a r   R e c o r d _ U n s a f e   =   P S [ " R e c o r d . U n s a f e " ] ;  
     v a r   T y p e _ D a t a _ R o w   =   P S [ " T y p e . D a t a . R o w " ] ;  
     v a r   T y p e _ D a t a _ R o w L i s t   =   P S [ " T y p e . D a t a . R o w L i s t " ] ;                                    
     v a r   S e m i r i n g   =   f u n c t i o n   ( a d d ,   m u l ,   o n e ,   z e r o )   {  
             t h i s . a d d   =   a d d ;  
             t h i s . m u l   =   m u l ;  
             t h i s . o n e   =   o n e ;  
             t h i s . z e r o   =   z e r o ;  
     } ;  
     v a r   z e r o   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . z e r o ;  
     } ;    
     v a r   s e m i r i n g N u m b e r   =   n e w   S e m i r i n g ( $ f o r e i g n . n u m A d d ,   $ f o r e i g n . n u m M u l ,   1 . 0 ,   0 . 0 ) ;  
     v a r   s e m i r i n g I n t   =   n e w   S e m i r i n g ( $ f o r e i g n . i n t A d d ,   $ f o r e i g n . i n t M u l ,   1 ,   0 ) ;  
     v a r   o n e   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . o n e ;  
     } ;  
     v a r   m u l   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . m u l ;  
     } ;  
     v a r   a d d   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . a d d ;  
     } ;  
     e x p o r t s [ " S e m i r i n g " ]   =   S e m i r i n g ;  
     e x p o r t s [ " a d d " ]   =   a d d ;  
     e x p o r t s [ " z e r o " ]   =   z e r o ;  
     e x p o r t s [ " m u l " ]   =   m u l ;  
     e x p o r t s [ " o n e " ]   =   o n e ;  
     e x p o r t s [ " s e m i r i n g I n t " ]   =   s e m i r i n g I n t ;  
     e x p o r t s [ " s e m i r i n g N u m b e r " ]   =   s e m i r i n g N u m b e r ;  
 } ) ( P S [ " D a t a . S e m i r i n g " ]   =   P S [ " D a t a . S e m i r i n g " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " D a t a . R i n g " ] ;  
     v a r   D a t a _ S e m i r i n g   =   P S [ " D a t a . S e m i r i n g " ] ;  
     v a r   D a t a _ S y m b o l   =   P S [ " D a t a . S y m b o l " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;  
     v a r   R e c o r d _ U n s a f e   =   P S [ " R e c o r d . U n s a f e " ] ;  
     v a r   T y p e _ D a t a _ R o w L i s t   =   P S [ " T y p e . D a t a . R o w L i s t " ] ;                                    
     v a r   R i n g   =   f u n c t i o n   ( S e m i r i n g 0 ,   s u b )   {  
             t h i s . S e m i r i n g 0   =   S e m i r i n g 0 ;  
             t h i s . s u b   =   s u b ;  
     } ;  
     v a r   s u b   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . s u b ;  
     } ;                                      
     v a r   r i n g I n t   =   n e w   R i n g ( f u n c t i o n   ( )   {  
             r e t u r n   D a t a _ S e m i r i n g . s e m i r i n g I n t ;  
     } ,   $ f o r e i g n . i n t S u b ) ;  
     e x p o r t s [ " R i n g " ]   =   R i n g ;  
     e x p o r t s [ " s u b " ]   =   s u b ;  
     e x p o r t s [ " r i n g I n t " ]   =   r i n g I n t ;  
 } ) ( P S [ " D a t a . R i n g " ]   =   P S [ " D a t a . R i n g " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " D a t a . O r d " ] ;  
     v a r   D a t a _ E q   =   P S [ " D a t a . E q " ] ;  
     v a r   D a t a _ O r d _ U n s a f e   =   P S [ " D a t a . O r d . U n s a f e " ] ;  
     v a r   D a t a _ O r d e r i n g   =   P S [ " D a t a . O r d e r i n g " ] ;  
     v a r   D a t a _ R i n g   =   P S [ " D a t a . R i n g " ] ;  
     v a r   D a t a _ S e m i r i n g   =   P S [ " D a t a . S e m i r i n g " ] ;  
     v a r   D a t a _ S y m b o l   =   P S [ " D a t a . S y m b o l " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;  
     v a r   D a t a _ V o i d   =   P S [ " D a t a . V o i d " ] ;  
     v a r   R e c o r d _ U n s a f e   =   P S [ " R e c o r d . U n s a f e " ] ;  
     v a r   T y p e _ D a t a _ R o w L i s t   =   P S [ " T y p e . D a t a . R o w L i s t " ] ;                                    
     v a r   O r d   =   f u n c t i o n   ( E q 0 ,   c o m p a r e )   {  
             t h i s . E q 0   =   E q 0 ;  
             t h i s . c o m p a r e   =   c o m p a r e ;  
     } ;                                                                  
     v a r   o r d I n t   =   n e w   O r d ( f u n c t i o n   ( )   {  
             r e t u r n   D a t a _ E q . e q I n t ;  
     } ,   D a t a _ O r d _ U n s a f e . u n s a f e C o m p a r e ) ;  
     v a r   c o m p a r e   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . c o m p a r e ;  
     } ;  
     e x p o r t s [ " O r d " ]   =   O r d ;  
     e x p o r t s [ " c o m p a r e " ]   =   c o m p a r e ;  
     e x p o r t s [ " o r d I n t " ]   =   o r d I n t ;  
 } ) ( P S [ " D a t a . O r d " ]   =   P S [ " D a t a . O r d " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   C o n t r o l _ C a t e g o r y   =   P S [ " C o n t r o l . C a t e g o r y " ] ;  
     v a r   D a t a _ B o o l e a n   =   P S [ " D a t a . B o o l e a n " ] ;  
     v a r   D a t a _ O r d   =   P S [ " D a t a . O r d " ] ;  
     v a r   D a t a _ R i n g   =   P S [ " D a t a . R i n g " ] ;  
     v a r   $ $ c o n s t   =   f u n c t i o n   ( a )   {  
             r e t u r n   f u n c t i o n   ( v )   {  
                     r e t u r n   a ;  
             } ;  
     } ;  
     e x p o r t s [ " c o n s t " ]   =   $ $ c o n s t ;  
 } ) ( P S [ " D a t a . F u n c t i o n " ]   =   P S [ " D a t a . F u n c t i o n " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
         " u s e   s t r i c t " ;  
  
     e x p o r t s . a r r a y M a p   =   f u n c t i o n   ( f )   {  
         r e t u r n   f u n c t i o n   ( a r r )   {  
             v a r   l   =   a r r . l e n g t h ;  
             v a r   r e s u l t   =   n e w   A r r a y ( l ) ;  
             f o r   ( v a r   i   =   0 ;   i   <   l ;   i + + )   {  
                 r e s u l t [ i ]   =   f ( a r r [ i ] ) ;  
             }  
             r e t u r n   r e s u l t ;  
         } ;  
     } ;  
 } ) ( P S [ " D a t a . F u n c t o r " ]   =   P S [ " D a t a . F u n c t o r " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   C o n t r o l _ S e m i g r o u p o i d   =   P S [ " C o n t r o l . S e m i g r o u p o i d " ] ;  
     v a r   D a t a _ F u n c t i o n   =   P S [ " D a t a . F u n c t i o n " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;                                    
     v a r   F u n c t o r   =   f u n c t i o n   ( m a p )   {  
             t h i s . m a p   =   m a p ;  
     } ;  
     v a r   m a p   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . m a p ;  
     } ;  
     v a r   $ $ v o i d   =   f u n c t i o n   ( d i c t F u n c t o r )   {  
             r e t u r n   m a p ( d i c t F u n c t o r ) ( D a t a _ F u n c t i o n [ " c o n s t " ] ( D a t a _ U n i t . u n i t ) ) ;  
     } ;  
     v a r   f u n c t o r F n   =   n e w   F u n c t o r ( C o n t r o l _ S e m i g r o u p o i d . c o m p o s e ( C o n t r o l _ S e m i g r o u p o i d . s e m i g r o u p o i d F n ) ) ;  
     v a r   f u n c t o r A r r a y   =   n e w   F u n c t o r ( $ f o r e i g n . a r r a y M a p ) ;  
     e x p o r t s [ " F u n c t o r " ]   =   F u n c t o r ;  
     e x p o r t s [ " m a p " ]   =   m a p ;  
     e x p o r t s [ " v o i d " ]   =   $ $ v o i d ;  
     e x p o r t s [ " f u n c t o r F n " ]   =   f u n c t o r F n ;  
     e x p o r t s [ " f u n c t o r A r r a y " ]   =   f u n c t o r A r r a y ;  
 } ) ( P S [ " D a t a . F u n c t o r " ]   =   P S [ " D a t a . F u n c t o r " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " C o n t r o l . A p p l y " ] ;  
     v a r   C o n t r o l _ C a t e g o r y   =   P S [ " C o n t r o l . C a t e g o r y " ] ;  
     v a r   D a t a _ F u n c t i o n   =   P S [ " D a t a . F u n c t i o n " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;                                    
     v a r   A p p l y   =   f u n c t i o n   ( F u n c t o r 0 ,   a p p l y )   {  
             t h i s . F u n c t o r 0   =   F u n c t o r 0 ;  
             t h i s . a p p l y   =   a p p l y ;  
     } ;                                              
     v a r   a p p l y   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . a p p l y ;  
     } ;  
     e x p o r t s [ " A p p l y " ]   =   A p p l y ;  
     e x p o r t s [ " a p p l y " ]   =   a p p l y ;  
 } ) ( P S [ " C o n t r o l . A p p l y " ]   =   P S [ " C o n t r o l . A p p l y " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   C o n t r o l _ A p p l y   =   P S [ " C o n t r o l . A p p l y " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;                                    
     v a r   A p p l i c a t i v e   =   f u n c t i o n   ( A p p l y 0 ,   p u r e )   {  
             t h i s . A p p l y 0   =   A p p l y 0 ;  
             t h i s . p u r e   =   p u r e ;  
     } ;  
     v a r   p u r e   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . p u r e ;  
     } ;  
     v a r   l i f t A 1   =   f u n c t i o n   ( d i c t A p p l i c a t i v e )   {  
             r e t u r n   f u n c t i o n   ( f )   {  
                     r e t u r n   f u n c t i o n   ( a )   {  
                             r e t u r n   C o n t r o l _ A p p l y . a p p l y ( d i c t A p p l i c a t i v e . A p p l y 0 ( ) ) ( p u r e ( d i c t A p p l i c a t i v e ) ( f ) ) ( a ) ;  
                     } ;  
             } ;  
     } ;  
     e x p o r t s [ " A p p l i c a t i v e " ]   =   A p p l i c a t i v e ;  
     e x p o r t s [ " p u r e " ]   =   p u r e ;  
     e x p o r t s [ " l i f t A 1 " ]   =   l i f t A 1 ;  
 } ) ( P S [ " C o n t r o l . A p p l i c a t i v e " ]   =   P S [ " C o n t r o l . A p p l i c a t i v e " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " C o n t r o l . B i n d " ] ;  
     v a r   C o n t r o l _ A p p l i c a t i v e   =   P S [ " C o n t r o l . A p p l i c a t i v e " ] ;  
     v a r   C o n t r o l _ A p p l y   =   P S [ " C o n t r o l . A p p l y " ] ;  
     v a r   C o n t r o l _ C a t e g o r y   =   P S [ " C o n t r o l . C a t e g o r y " ] ;  
     v a r   D a t a _ F u n c t i o n   =   P S [ " D a t a . F u n c t i o n " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;                                    
     v a r   B i n d   =   f u n c t i o n   ( A p p l y 0 ,   b i n d )   {  
             t h i s . A p p l y 0   =   A p p l y 0 ;  
             t h i s . b i n d   =   b i n d ;  
     } ;                                            
     v a r   b i n d   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . b i n d ;  
     } ;  
     e x p o r t s [ " B i n d " ]   =   B i n d ;  
     e x p o r t s [ " b i n d " ]   =   b i n d ;  
 } ) ( P S [ " C o n t r o l . B i n d " ]   =   P S [ " C o n t r o l . B i n d " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   C o n t r o l _ A p p l i c a t i v e   =   P S [ " C o n t r o l . A p p l i c a t i v e " ] ;  
     v a r   C o n t r o l _ A p p l y   =   P S [ " C o n t r o l . A p p l y " ] ;  
     v a r   C o n t r o l _ B i n d   =   P S [ " C o n t r o l . B i n d " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;                                    
     v a r   M o n a d   =   f u n c t i o n   ( A p p l i c a t i v e 0 ,   B i n d 1 )   {  
             t h i s . A p p l i c a t i v e 0   =   A p p l i c a t i v e 0 ;  
             t h i s . B i n d 1   =   B i n d 1 ;  
     } ;  
     v a r   a p   =   f u n c t i o n   ( d i c t M o n a d )   {  
             r e t u r n   f u n c t i o n   ( f )   {  
                     r e t u r n   f u n c t i o n   ( a )   {  
                             r e t u r n   C o n t r o l _ B i n d . b i n d ( d i c t M o n a d . B i n d 1 ( ) ) ( f ) ( f u n c t i o n   ( v )   {  
                                     r e t u r n   C o n t r o l _ B i n d . b i n d ( d i c t M o n a d . B i n d 1 ( ) ) ( a ) ( f u n c t i o n   ( v 1 )   {  
                                             r e t u r n   C o n t r o l _ A p p l i c a t i v e . p u r e ( d i c t M o n a d . A p p l i c a t i v e 0 ( ) ) ( v ( v 1 ) ) ;  
                                     } ) ;  
                             } ) ;  
                     } ;  
             } ;  
     } ;  
     e x p o r t s [ " M o n a d " ]   =   M o n a d ;  
     e x p o r t s [ " a p " ]   =   a p ;  
 } ) ( P S [ " C o n t r o l . M o n a d " ]   =   P S [ " C o n t r o l . M o n a d " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
         " u s e   s t r i c t " ;  
  
     e x p o r t s . t o p I n t   =   2 1 4 7 4 8 3 6 4 7 ;  
     e x p o r t s . b o t t o m I n t   =   - 2 1 4 7 4 8 3 6 4 8 ;  
 } ) ( P S [ " D a t a . B o u n d e d " ]   =   P S [ " D a t a . B o u n d e d " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " D a t a . B o u n d e d " ] ;  
     v a r   D a t a _ O r d   =   P S [ " D a t a . O r d " ] ;  
     v a r   D a t a _ O r d e r i n g   =   P S [ " D a t a . O r d e r i n g " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;                                    
     v a r   B o u n d e d   =   f u n c t i o n   ( O r d 0 ,   b o t t o m ,   t o p )   {  
             t h i s . O r d 0   =   O r d 0 ;  
             t h i s . b o t t o m   =   b o t t o m ;  
             t h i s . t o p   =   t o p ;  
     } ;  
     v a r   t o p   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . t o p ;  
     } ;                                                                                          
     v a r   b o u n d e d I n t   =   n e w   B o u n d e d ( f u n c t i o n   ( )   {  
             r e t u r n   D a t a _ O r d . o r d I n t ;  
     } ,   $ f o r e i g n . b o t t o m I n t ,   $ f o r e i g n . t o p I n t ) ;  
     v a r   b o t t o m   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . b o t t o m ;  
     } ;  
     e x p o r t s [ " B o u n d e d " ]   =   B o u n d e d ;  
     e x p o r t s [ " b o t t o m " ]   =   b o t t o m ;  
     e x p o r t s [ " t o p " ]   =   t o p ;  
     e x p o r t s [ " b o u n d e d I n t " ]   =   b o u n d e d I n t ;  
 } ) ( P S [ " D a t a . B o u n d e d " ]   =   P S [ " D a t a . B o u n d e d " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   D a t a _ R i n g   =   P S [ " D a t a . R i n g " ] ;  
     v a r   D a t a _ S e m i r i n g   =   P S [ " D a t a . S e m i r i n g " ] ;  
     v a r   D a t a _ S y m b o l   =   P S [ " D a t a . S y m b o l " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;                                    
     v a r   C o m m u t a t i v e R i n g   =   f u n c t i o n   ( R i n g 0 )   {  
             t h i s . R i n g 0   =   R i n g 0 ;  
     } ;    
     v a r   c o m m u t a t i v e R i n g I n t   =   n e w   C o m m u t a t i v e R i n g ( f u n c t i o n   ( )   {  
             r e t u r n   D a t a _ R i n g . r i n g I n t ;  
     } ) ;  
     e x p o r t s [ " C o m m u t a t i v e R i n g " ]   =   C o m m u t a t i v e R i n g ;  
     e x p o r t s [ " c o m m u t a t i v e R i n g I n t " ]   =   c o m m u t a t i v e R i n g I n t ;  
 } ) ( P S [ " D a t a . C o m m u t a t i v e R i n g " ]   =   P S [ " D a t a . C o m m u t a t i v e R i n g " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
         " u s e   s t r i c t " ;  
  
     e x p o r t s . f o l d r A r r a y   =   f u n c t i o n   ( f )   {  
         r e t u r n   f u n c t i o n   ( i n i t )   {  
             r e t u r n   f u n c t i o n   ( x s )   {  
                 v a r   a c c   =   i n i t ;  
                 v a r   l e n   =   x s . l e n g t h ;  
                 f o r   ( v a r   i   =   l e n   -   1 ;   i   > =   0 ;   i - - )   {  
                     a c c   =   f ( x s [ i ] ) ( a c c ) ;  
                 }  
                 r e t u r n   a c c ;  
             } ;  
         } ;  
     } ;  
  
     e x p o r t s . f o l d l A r r a y   =   f u n c t i o n   ( f )   {  
         r e t u r n   f u n c t i o n   ( i n i t )   {  
             r e t u r n   f u n c t i o n   ( x s )   {  
                 v a r   a c c   =   i n i t ;  
                 v a r   l e n   =   x s . l e n g t h ;  
                 f o r   ( v a r   i   =   0 ;   i   <   l e n ;   i + + )   {  
                     a c c   =   f ( a c c ) ( x s [ i ] ) ;  
                 }  
                 r e t u r n   a c c ;  
             } ;  
         } ;  
     } ;  
 } ) ( P S [ " D a t a . F o l d a b l e " ]   =   P S [ " D a t a . F o l d a b l e " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
         " u s e   s t r i c t " ;  
  
     e x p o r t s . i n t D e g r e e   =   f u n c t i o n   ( x )   {  
         r e t u r n   M a t h . m i n ( M a t h . a b s ( x ) ,   2 1 4 7 4 8 3 6 4 7 ) ;  
     } ;  
  
     / /   S e e   t h e   E u c l i d e a n   d e f i n i t i o n   i n  
     / /   h t t p s : / / e n . m . w i k i p e d i a . o r g / w i k i / M o d u l o _ o p e r a t i o n .  
     e x p o r t s . i n t D i v   =   f u n c t i o n   ( x )   {  
         r e t u r n   f u n c t i o n   ( y )   {  
             i f   ( y   = = =   0 )   r e t u r n   0 ;  
             r e t u r n   y   >   0   ?   M a t h . f l o o r ( x   /   y )   :   - M a t h . f l o o r ( x   /   - y ) ;  
         } ;  
     } ;  
  
     e x p o r t s . i n t M o d   =   f u n c t i o n   ( x )   {  
         r e t u r n   f u n c t i o n   ( y )   {  
             i f   ( y   = = =   0 )   r e t u r n   0 ;  
             v a r   y y   =   M a t h . a b s ( y ) ;  
             r e t u r n   ( ( x   %   y y )   +   y y )   %   y y ;  
         } ;  
     } ;  
 } ) ( P S [ " D a t a . E u c l i d e a n R i n g " ]   =   P S [ " D a t a . E u c l i d e a n R i n g " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " D a t a . E u c l i d e a n R i n g " ] ;  
     v a r   D a t a _ B o o l e a n A l g e b r a   =   P S [ " D a t a . B o o l e a n A l g e b r a " ] ;  
     v a r   D a t a _ C o m m u t a t i v e R i n g   =   P S [ " D a t a . C o m m u t a t i v e R i n g " ] ;  
     v a r   D a t a _ E q   =   P S [ " D a t a . E q " ] ;  
     v a r   D a t a _ H e y t i n g A l g e b r a   =   P S [ " D a t a . H e y t i n g A l g e b r a " ] ;  
     v a r   D a t a _ R i n g   =   P S [ " D a t a . R i n g " ] ;  
     v a r   D a t a _ S e m i r i n g   =   P S [ " D a t a . S e m i r i n g " ] ;                                    
     v a r   E u c l i d e a n R i n g   =   f u n c t i o n   ( C o m m u t a t i v e R i n g 0 ,   d e g r e e ,   d i v ,   m o d )   {  
             t h i s . C o m m u t a t i v e R i n g 0   =   C o m m u t a t i v e R i n g 0 ;  
             t h i s . d e g r e e   =   d e g r e e ;  
             t h i s . d i v   =   d i v ;  
             t h i s . m o d   =   m o d ;  
     } ;  
     v a r   m o d   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . m o d ;  
     } ;    
     v a r   e u c l i d e a n R i n g I n t   =   n e w   E u c l i d e a n R i n g ( f u n c t i o n   ( )   {  
             r e t u r n   D a t a _ C o m m u t a t i v e R i n g . c o m m u t a t i v e R i n g I n t ;  
     } ,   $ f o r e i g n . i n t D e g r e e ,   $ f o r e i g n . i n t D i v ,   $ f o r e i g n . i n t M o d ) ;  
     v a r   d i v   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . d i v ;  
     } ;  
     v a r   d e g r e e   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . d e g r e e ;  
     } ;  
     e x p o r t s [ " E u c l i d e a n R i n g " ]   =   E u c l i d e a n R i n g ;  
     e x p o r t s [ " d e g r e e " ]   =   d e g r e e ;  
     e x p o r t s [ " d i v " ]   =   d i v ;  
     e x p o r t s [ " m o d " ]   =   m o d ;  
     e x p o r t s [ " e u c l i d e a n R i n g I n t " ]   =   e u c l i d e a n R i n g I n t ;  
 } ) ( P S [ " D a t a . E u c l i d e a n R i n g " ]   =   P S [ " D a t a . E u c l i d e a n R i n g " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   D a t a _ B o o l e a n   =   P S [ " D a t a . B o o l e a n " ] ;  
     v a r   D a t a _ E q   =   P S [ " D a t a . E q " ] ;  
     v a r   D a t a _ E u c l i d e a n R i n g   =   P S [ " D a t a . E u c l i d e a n R i n g " ] ;  
     v a r   D a t a _ O r d   =   P S [ " D a t a . O r d " ] ;  
     v a r   D a t a _ O r d e r i n g   =   P S [ " D a t a . O r d e r i n g " ] ;  
     v a r   D a t a _ S e m i g r o u p   =   P S [ " D a t a . S e m i g r o u p " ] ;  
     v a r   D a t a _ S y m b o l   =   P S [ " D a t a . S y m b o l " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;  
     v a r   R e c o r d _ U n s a f e   =   P S [ " R e c o r d . U n s a f e " ] ;  
     v a r   T y p e _ D a t a _ R o w L i s t   =   P S [ " T y p e . D a t a . R o w L i s t " ] ;                                    
     v a r   M o n o i d   =   f u n c t i o n   ( S e m i g r o u p 0 ,   m e m p t y )   {  
             t h i s . S e m i g r o u p 0   =   S e m i g r o u p 0 ;  
             t h i s . m e m p t y   =   m e m p t y ;  
     } ;  
     v a r   m e m p t y   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . m e m p t y ;  
     } ;  
     e x p o r t s [ " M o n o i d " ]   =   M o n o i d ;  
     e x p o r t s [ " m e m p t y " ]   =   m e m p t y ;  
 } ) ( P S [ " D a t a . M o n o i d " ]   =   P S [ " D a t a . M o n o i d " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   C o n t r o l _ A l t   =   P S [ " C o n t r o l . A l t " ] ;  
     v a r   C o n t r o l _ A l t e r n a t i v e   =   P S [ " C o n t r o l . A l t e r n a t i v e " ] ;  
     v a r   C o n t r o l _ A p p l i c a t i v e   =   P S [ " C o n t r o l . A p p l i c a t i v e " ] ;  
     v a r   C o n t r o l _ A p p l y   =   P S [ " C o n t r o l . A p p l y " ] ;  
     v a r   C o n t r o l _ B i n d   =   P S [ " C o n t r o l . B i n d " ] ;  
     v a r   C o n t r o l _ C a t e g o r y   =   P S [ " C o n t r o l . C a t e g o r y " ] ;  
     v a r   C o n t r o l _ E x t e n d   =   P S [ " C o n t r o l . E x t e n d " ] ;  
     v a r   C o n t r o l _ M o n a d   =   P S [ " C o n t r o l . M o n a d " ] ;  
     v a r   C o n t r o l _ M o n a d Z e r o   =   P S [ " C o n t r o l . M o n a d Z e r o " ] ;  
     v a r   C o n t r o l _ P l u s   =   P S [ " C o n t r o l . P l u s " ] ;  
     v a r   D a t a _ B o u n d e d   =   P S [ " D a t a . B o u n d e d " ] ;  
     v a r   D a t a _ E q   =   P S [ " D a t a . E q " ] ;  
     v a r   D a t a _ F u n c t i o n   =   P S [ " D a t a . F u n c t i o n " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ F u n c t o r _ I n v a r i a n t   =   P S [ " D a t a . F u n c t o r . I n v a r i a n t " ] ;  
     v a r   D a t a _ M o n o i d   =   P S [ " D a t a . M o n o i d " ] ;  
     v a r   D a t a _ O r d   =   P S [ " D a t a . O r d " ] ;  
     v a r   D a t a _ O r d e r i n g   =   P S [ " D a t a . O r d e r i n g " ] ;  
     v a r   D a t a _ S e m i g r o u p   =   P S [ " D a t a . S e m i g r o u p " ] ;  
     v a r   D a t a _ S h o w   =   P S [ " D a t a . S h o w " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;                                    
     v a r   N o t h i n g   =   ( f u n c t i o n   ( )   {  
             f u n c t i o n   N o t h i n g ( )   {  
  
             } ;  
             N o t h i n g . v a l u e   =   n e w   N o t h i n g ( ) ;  
             r e t u r n   N o t h i n g ;  
     } ) ( ) ;  
     v a r   J u s t   =   ( f u n c t i o n   ( )   {  
             f u n c t i o n   J u s t ( v a l u e 0 )   {  
                     t h i s . v a l u e 0   =   v a l u e 0 ;  
             } ;  
             J u s t . c r e a t e   =   f u n c t i o n   ( v a l u e 0 )   {  
                     r e t u r n   n e w   J u s t ( v a l u e 0 ) ;  
             } ;  
             r e t u r n   J u s t ;  
     } ) ( ) ;  
     v a r   m a y b e   =   f u n c t i o n   ( v )   {  
             r e t u r n   f u n c t i o n   ( v 1 )   {  
                     r e t u r n   f u n c t i o n   ( v 2 )   {  
                             i f   ( v 2   i n s t a n c e o f   N o t h i n g )   {  
                                     r e t u r n   v ;  
                             } ;  
                             i f   ( v 2   i n s t a n c e o f   J u s t )   {  
                                     r e t u r n   v 1 ( v 2 . v a l u e 0 ) ;  
                             } ;  
                             t h r o w   n e w   E r r o r ( " F a i l e d   p a t t e r n   m a t c h   a t   D a t a . M a y b e   l i n e   2 1 8 ,   c o l u m n   1   -   l i n e   2 1 8 ,   c o l u m n   5 1 :   "   +   [   v . c o n s t r u c t o r . n a m e ,   v 1 . c o n s t r u c t o r . n a m e ,   v 2 . c o n s t r u c t o r . n a m e   ] ) ;  
                     } ;  
             } ;  
     } ;                                                                                                                    
     v a r   i s J u s t   =   m a y b e ( f a l s e ) ( D a t a _ F u n c t i o n [ " c o n s t " ] ( t r u e ) ) ;  
     v a r   f r o m M a y b e   =   f u n c t i o n   ( a )   {  
             r e t u r n   m a y b e ( a ) ( C o n t r o l _ C a t e g o r y . i d e n t i t y ( C o n t r o l _ C a t e g o r y . c a t e g o r y F n ) ) ;  
     } ;  
     v a r   f r o m J u s t   =   f u n c t i o n   ( d i c t P a r t i a l )   {  
             r e t u r n   f u n c t i o n   ( v )   {  
                     v a r   $ _ _ u n u s e d   =   f u n c t i o n   ( d i c t P a r t i a l 1 )   {  
                             r e t u r n   f u n c t i o n   ( $ d o l l a r 3 5 )   {  
                                     r e t u r n   $ d o l l a r 3 5 ;  
                             } ;  
                     } ;  
                     r e t u r n   $ _ _ u n u s e d ( d i c t P a r t i a l ) ( ( f u n c t i o n   ( )   {  
                             i f   ( v   i n s t a n c e o f   J u s t )   {  
                                     r e t u r n   v . v a l u e 0 ;  
                             } ;  
                             t h r o w   n e w   E r r o r ( " F a i l e d   p a t t e r n   m a t c h   a t   D a t a . M a y b e   l i n e   2 6 9 ,   c o l u m n   1   -   l i n e   2 6 9 ,   c o l u m n   4 6 :   "   +   [   v . c o n s t r u c t o r . n a m e   ] ) ;  
                     } ) ( ) ) ;  
             } ;  
     } ;  
     e x p o r t s [ " N o t h i n g " ]   =   N o t h i n g ;  
     e x p o r t s [ " J u s t " ]   =   J u s t ;  
     e x p o r t s [ " m a y b e " ]   =   m a y b e ;  
     e x p o r t s [ " f r o m M a y b e " ]   =   f r o m M a y b e ;  
     e x p o r t s [ " i s J u s t " ]   =   i s J u s t ;  
     e x p o r t s [ " f r o m J u s t " ]   =   f r o m J u s t ;  
 } ) ( P S [ " D a t a . M a y b e " ]   =   P S [ " D a t a . M a y b e " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   C o n t r o l _ A p p l i c a t i v e   =   P S [ " C o n t r o l . A p p l i c a t i v e " ] ;  
     v a r   C o n t r o l _ A p p l y   =   P S [ " C o n t r o l . A p p l y " ] ;  
     v a r   C o n t r o l _ B i n d   =   P S [ " C o n t r o l . B i n d " ] ;  
     v a r   C o n t r o l _ M o n a d   =   P S [ " C o n t r o l . M o n a d " ] ;  
     v a r   D a t a _ B o u n d e d   =   P S [ " D a t a . B o u n d e d " ] ;  
     v a r   D a t a _ E q   =   P S [ " D a t a . E q " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ H e y t i n g A l g e b r a   =   P S [ " D a t a . H e y t i n g A l g e b r a " ] ;  
     v a r   D a t a _ M o n o i d   =   P S [ " D a t a . M o n o i d " ] ;  
     v a r   D a t a _ O r d   =   P S [ " D a t a . O r d " ] ;  
     v a r   D a t a _ S e m i g r o u p   =   P S [ " D a t a . S e m i g r o u p " ] ;  
     v a r   D a t a _ S e m i r i n g   =   P S [ " D a t a . S e m i r i n g " ] ;  
     v a r   D a t a _ S h o w   =   P S [ " D a t a . S h o w " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;                                    
     v a r   D i s j   =   f u n c t i o n   ( x )   {  
             r e t u r n   x ;  
     } ;  
     v a r   s e m i g r o u p D i s j   =   f u n c t i o n   ( d i c t H e y t i n g A l g e b r a )   {  
             r e t u r n   n e w   D a t a _ S e m i g r o u p . S e m i g r o u p ( f u n c t i o n   ( v )   {  
                     r e t u r n   f u n c t i o n   ( v 1 )   {  
                             r e t u r n   D a t a _ H e y t i n g A l g e b r a . d i s j ( d i c t H e y t i n g A l g e b r a ) ( v ) ( v 1 ) ;  
                     } ;  
             } ) ;  
     } ;  
     v a r   m o n o i d D i s j   =   f u n c t i o n   ( d i c t H e y t i n g A l g e b r a )   {  
             r e t u r n   n e w   D a t a _ M o n o i d . M o n o i d ( f u n c t i o n   ( )   {  
                     r e t u r n   s e m i g r o u p D i s j ( d i c t H e y t i n g A l g e b r a ) ;  
             } ,   D a t a _ H e y t i n g A l g e b r a . f f ( d i c t H e y t i n g A l g e b r a ) ) ;  
     } ;  
     e x p o r t s [ " D i s j " ]   =   D i s j ;  
     e x p o r t s [ " s e m i g r o u p D i s j " ]   =   s e m i g r o u p D i s j ;  
     e x p o r t s [ " m o n o i d D i s j " ]   =   m o n o i d D i s j ;  
 } ) ( P S [ " D a t a . M o n o i d . D i s j " ]   =   P S [ " D a t a . M o n o i d . D i s j " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   C o n t r o l _ S e m i g r o u p o i d   =   P S [ " C o n t r o l . S e m i g r o u p o i d " ] ;  
     v a r   D a t a _ F u n c t i o n   =   P S [ " D a t a . F u n c t i o n " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ M o n o i d _ A d d i t i v e   =   P S [ " D a t a . M o n o i d . A d d i t i v e " ] ;  
     v a r   D a t a _ M o n o i d _ C o n j   =   P S [ " D a t a . M o n o i d . C o n j " ] ;  
     v a r   D a t a _ M o n o i d _ D i s j   =   P S [ " D a t a . M o n o i d . D i s j " ] ;  
     v a r   D a t a _ M o n o i d _ D u a l   =   P S [ " D a t a . M o n o i d . D u a l " ] ;  
     v a r   D a t a _ M o n o i d _ E n d o   =   P S [ " D a t a . M o n o i d . E n d o " ] ;  
     v a r   D a t a _ M o n o i d _ M u l t i p l i c a t i v e   =   P S [ " D a t a . M o n o i d . M u l t i p l i c a t i v e " ] ;  
     v a r   D a t a _ S e m i g r o u p _ F i r s t   =   P S [ " D a t a . S e m i g r o u p . F i r s t " ] ;  
     v a r   D a t a _ S e m i g r o u p _ L a s t   =   P S [ " D a t a . S e m i g r o u p . L a s t " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;                                    
     v a r   N e w t y p e   =   f u n c t i o n   ( u n w r a p ,   w r a p )   {  
             t h i s . u n w r a p   =   u n w r a p ;  
             t h i s . w r a p   =   w r a p ;  
     } ;  
     v a r   w r a p   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . w r a p ;  
     } ;  
     v a r   u n w r a p   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . u n w r a p ;  
     } ;                                                  
     v a r   n e w t y p e D i s j   =   n e w   N e w t y p e ( f u n c t i o n   ( v )   {  
             r e t u r n   v ;  
     } ,   D a t a _ M o n o i d _ D i s j . D i s j ) ;  
     v a r   a l a F   =   f u n c t i o n   ( d i c t F u n c t o r )   {  
             r e t u r n   f u n c t i o n   ( d i c t F u n c t o r 1 )   {  
                     r e t u r n   f u n c t i o n   ( d i c t N e w t y p e )   {  
                             r e t u r n   f u n c t i o n   ( d i c t N e w t y p e 1 )   {  
                                     r e t u r n   f u n c t i o n   ( v )   {  
                                             r e t u r n   f u n c t i o n   ( f )   {  
                                                     r e t u r n   f u n c t i o n   ( $ 8 0 )   {  
                                                             r e t u r n   D a t a _ F u n c t o r . m a p ( d i c t F u n c t o r 1 ) ( u n w r a p ( d i c t N e w t y p e 1 ) ) ( f ( D a t a _ F u n c t o r . m a p ( d i c t F u n c t o r ) ( w r a p ( d i c t N e w t y p e ) ) ( $ 8 0 ) ) ) ;  
                                                     } ;  
                                             } ;  
                                     } ;  
                             } ;  
                     } ;  
             } ;  
     } ;  
     e x p o r t s [ " u n w r a p " ]   =   u n w r a p ;  
     e x p o r t s [ " w r a p " ]   =   w r a p ;  
     e x p o r t s [ " N e w t y p e " ]   =   N e w t y p e ;  
     e x p o r t s [ " a l a F " ]   =   a l a F ;  
     e x p o r t s [ " n e w t y p e D i s j " ]   =   n e w t y p e D i s j ;  
 } ) ( P S [ " D a t a . N e w t y p e " ]   =   P S [ " D a t a . N e w t y p e " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " D a t a . F o l d a b l e " ] ;  
     v a r   C o n t r o l _ A l t   =   P S [ " C o n t r o l . A l t " ] ;  
     v a r   C o n t r o l _ A p p l i c a t i v e   =   P S [ " C o n t r o l . A p p l i c a t i v e " ] ;  
     v a r   C o n t r o l _ A p p l y   =   P S [ " C o n t r o l . A p p l y " ] ;  
     v a r   C o n t r o l _ B i n d   =   P S [ " C o n t r o l . B i n d " ] ;  
     v a r   C o n t r o l _ C a t e g o r y   =   P S [ " C o n t r o l . C a t e g o r y " ] ;  
     v a r   C o n t r o l _ P l u s   =   P S [ " C o n t r o l . P l u s " ] ;  
     v a r   C o n t r o l _ S e m i g r o u p o i d   =   P S [ " C o n t r o l . S e m i g r o u p o i d " ] ;  
     v a r   D a t a _ E q   =   P S [ " D a t a . E q " ] ;  
     v a r   D a t a _ F u n c t i o n   =   P S [ " D a t a . F u n c t i o n " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ H e y t i n g A l g e b r a   =   P S [ " D a t a . H e y t i n g A l g e b r a " ] ;  
     v a r   D a t a _ M a y b e   =   P S [ " D a t a . M a y b e " ] ;  
     v a r   D a t a _ M a y b e _ F i r s t   =   P S [ " D a t a . M a y b e . F i r s t " ] ;  
     v a r   D a t a _ M a y b e _ L a s t   =   P S [ " D a t a . M a y b e . L a s t " ] ;  
     v a r   D a t a _ M o n o i d   =   P S [ " D a t a . M o n o i d " ] ;  
     v a r   D a t a _ M o n o i d _ A d d i t i v e   =   P S [ " D a t a . M o n o i d . A d d i t i v e " ] ;  
     v a r   D a t a _ M o n o i d _ C o n j   =   P S [ " D a t a . M o n o i d . C o n j " ] ;  
     v a r   D a t a _ M o n o i d _ D i s j   =   P S [ " D a t a . M o n o i d . D i s j " ] ;  
     v a r   D a t a _ M o n o i d _ D u a l   =   P S [ " D a t a . M o n o i d . D u a l " ] ;  
     v a r   D a t a _ M o n o i d _ E n d o   =   P S [ " D a t a . M o n o i d . E n d o " ] ;  
     v a r   D a t a _ M o n o i d _ M u l t i p l i c a t i v e   =   P S [ " D a t a . M o n o i d . M u l t i p l i c a t i v e " ] ;  
     v a r   D a t a _ N e w t y p e   =   P S [ " D a t a . N e w t y p e " ] ;  
     v a r   D a t a _ O r d   =   P S [ " D a t a . O r d " ] ;  
     v a r   D a t a _ O r d e r i n g   =   P S [ " D a t a . O r d e r i n g " ] ;  
     v a r   D a t a _ S e m i g r o u p   =   P S [ " D a t a . S e m i g r o u p " ] ;  
     v a r   D a t a _ S e m i r i n g   =   P S [ " D a t a . S e m i r i n g " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;                                    
     v a r   F o l d a b l e   =   f u n c t i o n   ( f o l d M a p ,   f o l d l ,   f o l d r )   {  
             t h i s . f o l d M a p   =   f o l d M a p ;  
             t h i s . f o l d l   =   f o l d l ;  
             t h i s . f o l d r   =   f o l d r ;  
     } ;  
     v a r   f o l d r   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . f o l d r ;  
     } ;  
     v a r   f o l d l   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . f o l d l ;  
     } ;    
     v a r   f o l d M a p D e f a u l t R   =   f u n c t i o n   ( d i c t F o l d a b l e )   {  
             r e t u r n   f u n c t i o n   ( d i c t M o n o i d )   {  
                     r e t u r n   f u n c t i o n   ( f )   {  
                             r e t u r n   f o l d r ( d i c t F o l d a b l e ) ( f u n c t i o n   ( x )   {  
                                     r e t u r n   f u n c t i o n   ( a c c )   {  
                                             r e t u r n   D a t a _ S e m i g r o u p . a p p e n d ( d i c t M o n o i d . S e m i g r o u p 0 ( ) ) ( f ( x ) ) ( a c c ) ;  
                                     } ;  
                             } ) ( D a t a _ M o n o i d . m e m p t y ( d i c t M o n o i d ) ) ;  
                     } ;  
             } ;  
     } ;  
     v a r   f o l d a b l e A r r a y   =   n e w   F o l d a b l e ( f u n c t i o n   ( d i c t M o n o i d )   {  
             r e t u r n   f o l d M a p D e f a u l t R ( f o l d a b l e A r r a y ) ( d i c t M o n o i d ) ;  
     } ,   $ f o r e i g n . f o l d l A r r a y ,   $ f o r e i g n . f o l d r A r r a y ) ;  
     v a r   f o l d M a p   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . f o l d M a p ;  
     } ;  
     v a r   a n y   =   f u n c t i o n   ( d i c t F o l d a b l e )   {  
             r e t u r n   f u n c t i o n   ( d i c t H e y t i n g A l g e b r a )   {  
                     r e t u r n   D a t a _ N e w t y p e . a l a F ( D a t a _ F u n c t o r . f u n c t o r F n ) ( D a t a _ F u n c t o r . f u n c t o r F n ) ( D a t a _ N e w t y p e . n e w t y p e D i s j ) ( D a t a _ N e w t y p e . n e w t y p e D i s j ) ( D a t a _ M o n o i d _ D i s j . D i s j ) ( f o l d M a p ( d i c t F o l d a b l e ) ( D a t a _ M o n o i d _ D i s j . m o n o i d D i s j ( d i c t H e y t i n g A l g e b r a ) ) ) ;  
             } ;  
     } ;  
     v a r   e l e m   =   f u n c t i o n   ( d i c t F o l d a b l e )   {  
             r e t u r n   f u n c t i o n   ( d i c t E q )   {  
                     r e t u r n   f u n c t i o n   ( $ 1 9 9 )   {  
                             r e t u r n   a n y ( d i c t F o l d a b l e ) ( D a t a _ H e y t i n g A l g e b r a . h e y t i n g A l g e b r a B o o l e a n ) ( D a t a _ E q . e q ( d i c t E q ) ( $ 1 9 9 ) ) ;  
                     } ;  
             } ;  
     } ;  
     e x p o r t s [ " F o l d a b l e " ]   =   F o l d a b l e ;  
     e x p o r t s [ " f o l d r " ]   =   f o l d r ;  
     e x p o r t s [ " f o l d l " ]   =   f o l d l ;  
     e x p o r t s [ " f o l d M a p " ]   =   f o l d M a p ;  
     e x p o r t s [ " f o l d M a p D e f a u l t R " ]   =   f o l d M a p D e f a u l t R ;  
     e x p o r t s [ " a n y " ]   =   a n y ;  
     e x p o r t s [ " e l e m " ]   =   e l e m ;  
     e x p o r t s [ " f o l d a b l e A r r a y " ]   =   f o l d a b l e A r r a y ;  
 } ) ( P S [ " D a t a . F o l d a b l e " ]   =   P S [ " D a t a . F o l d a b l e " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
         " u s e   s t r i c t " ;  
  
     / /   j s h i n t   m a x p a r a m s :   3  
  
     e x p o r t s . t r a v e r s e A r r a y I m p l   =   f u n c t i o n   ( )   {  
         f u n c t i o n   a r r a y 1 ( a )   {  
             r e t u r n   [ a ] ;  
         }  
  
         f u n c t i o n   a r r a y 2 ( a )   {  
             r e t u r n   f u n c t i o n   ( b )   {  
                 r e t u r n   [ a ,   b ] ;  
             } ;  
         }  
  
         f u n c t i o n   a r r a y 3 ( a )   {  
             r e t u r n   f u n c t i o n   ( b )   {  
                 r e t u r n   f u n c t i o n   ( c )   {  
                     r e t u r n   [ a ,   b ,   c ] ;  
                 } ;  
             } ;  
         }  
  
         f u n c t i o n   c o n c a t 2 ( x s )   {  
             r e t u r n   f u n c t i o n   ( y s )   {  
                 r e t u r n   x s . c o n c a t ( y s ) ;  
             } ;  
         }  
  
         r e t u r n   f u n c t i o n   ( a p p l y )   {  
             r e t u r n   f u n c t i o n   ( m a p )   {  
                 r e t u r n   f u n c t i o n   ( p u r e )   {  
                     r e t u r n   f u n c t i o n   ( f )   {  
                         r e t u r n   f u n c t i o n   ( a r r a y )   {  
                             f u n c t i o n   g o ( b o t ,   t o p )   {  
                                 s w i t c h   ( t o p   -   b o t )   {  
                                 c a s e   0 :   r e t u r n   p u r e ( [ ] ) ;  
                                 c a s e   1 :   r e t u r n   m a p ( a r r a y 1 ) ( f ( a r r a y [ b o t ] ) ) ;  
                                 c a s e   2 :   r e t u r n   a p p l y ( m a p ( a r r a y 2 ) ( f ( a r r a y [ b o t ] ) ) ) ( f ( a r r a y [ b o t   +   1 ] ) ) ;  
                                 c a s e   3 :   r e t u r n   a p p l y ( a p p l y ( m a p ( a r r a y 3 ) ( f ( a r r a y [ b o t ] ) ) ) ( f ( a r r a y [ b o t   +   1 ] ) ) ) ( f ( a r r a y [ b o t   +   2 ] ) ) ;  
                                 d e f a u l t :  
                                     / /   T h i s   s l i g h t l y   t r i c k y   p i v o t   s e l e c t i o n   a i m s   t o   p r o d u c e   t w o  
                                     / /   e v e n - l e n g t h   p a r t i t i o n s   w h e r e   p o s s i b l e .  
                                     v a r   p i v o t   =   b o t   +   M a t h . f l o o r ( ( t o p   -   b o t )   /   4 )   *   2 ;  
                                     r e t u r n   a p p l y ( m a p ( c o n c a t 2 ) ( g o ( b o t ,   p i v o t ) ) ) ( g o ( p i v o t ,   t o p ) ) ;  
                                 }  
                             }  
                             r e t u r n   g o ( 0 ,   a r r a y . l e n g t h ) ;  
                         } ;  
                     } ;  
                 } ;  
             } ;  
         } ;  
     } ( ) ;  
 } ) ( P S [ " D a t a . T r a v e r s a b l e " ]   =   P S [ " D a t a . T r a v e r s a b l e " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " D a t a . T r a v e r s a b l e " ] ;  
     v a r   C o n t r o l _ A p p l i c a t i v e   =   P S [ " C o n t r o l . A p p l i c a t i v e " ] ;  
     v a r   C o n t r o l _ A p p l y   =   P S [ " C o n t r o l . A p p l y " ] ;  
     v a r   C o n t r o l _ C a t e g o r y   =   P S [ " C o n t r o l . C a t e g o r y " ] ;  
     v a r   D a t a _ F o l d a b l e   =   P S [ " D a t a . F o l d a b l e " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ M a y b e   =   P S [ " D a t a . M a y b e " ] ;  
     v a r   D a t a _ M a y b e _ F i r s t   =   P S [ " D a t a . M a y b e . F i r s t " ] ;  
     v a r   D a t a _ M a y b e _ L a s t   =   P S [ " D a t a . M a y b e . L a s t " ] ;  
     v a r   D a t a _ M o n o i d _ A d d i t i v e   =   P S [ " D a t a . M o n o i d . A d d i t i v e " ] ;  
     v a r   D a t a _ M o n o i d _ C o n j   =   P S [ " D a t a . M o n o i d . C o n j " ] ;  
     v a r   D a t a _ M o n o i d _ D i s j   =   P S [ " D a t a . M o n o i d . D i s j " ] ;  
     v a r   D a t a _ M o n o i d _ D u a l   =   P S [ " D a t a . M o n o i d . D u a l " ] ;  
     v a r   D a t a _ M o n o i d _ M u l t i p l i c a t i v e   =   P S [ " D a t a . M o n o i d . M u l t i p l i c a t i v e " ] ;  
     v a r   D a t a _ T r a v e r s a b l e _ A c c u m   =   P S [ " D a t a . T r a v e r s a b l e . A c c u m " ] ;  
     v a r   D a t a _ T r a v e r s a b l e _ A c c u m _ I n t e r n a l   =   P S [ " D a t a . T r a v e r s a b l e . A c c u m . I n t e r n a l " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;                                    
     v a r   T r a v e r s a b l e   =   f u n c t i o n   ( F o l d a b l e 1 ,   F u n c t o r 0 ,   s e q u e n c e ,   t r a v e r s e )   {  
             t h i s . F o l d a b l e 1   =   F o l d a b l e 1 ;  
             t h i s . F u n c t o r 0   =   F u n c t o r 0 ;  
             t h i s . s e q u e n c e   =   s e q u e n c e ;  
             t h i s . t r a v e r s e   =   t r a v e r s e ;  
     } ;  
     v a r   t r a v e r s e   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . t r a v e r s e ;  
     } ;    
     v a r   s e q u e n c e D e f a u l t   =   f u n c t i o n   ( d i c t T r a v e r s a b l e )   {  
             r e t u r n   f u n c t i o n   ( d i c t A p p l i c a t i v e )   {  
                     r e t u r n   t r a v e r s e ( d i c t T r a v e r s a b l e ) ( d i c t A p p l i c a t i v e ) ( C o n t r o l _ C a t e g o r y . i d e n t i t y ( C o n t r o l _ C a t e g o r y . c a t e g o r y F n ) ) ;  
             } ;  
     } ;  
     v a r   t r a v e r s a b l e A r r a y   =   n e w   T r a v e r s a b l e ( f u n c t i o n   ( )   {  
             r e t u r n   D a t a _ F o l d a b l e . f o l d a b l e A r r a y ;  
     } ,   f u n c t i o n   ( )   {  
             r e t u r n   D a t a _ F u n c t o r . f u n c t o r A r r a y ;  
     } ,   f u n c t i o n   ( d i c t A p p l i c a t i v e )   {  
             r e t u r n   s e q u e n c e D e f a u l t ( t r a v e r s a b l e A r r a y ) ( d i c t A p p l i c a t i v e ) ;  
     } ,   f u n c t i o n   ( d i c t A p p l i c a t i v e )   {  
             r e t u r n   $ f o r e i g n . t r a v e r s e A r r a y I m p l ( C o n t r o l _ A p p l y . a p p l y ( d i c t A p p l i c a t i v e . A p p l y 0 ( ) ) ) ( D a t a _ F u n c t o r . m a p ( ( d i c t A p p l i c a t i v e . A p p l y 0 ( ) ) . F u n c t o r 0 ( ) ) ) ( C o n t r o l _ A p p l i c a t i v e . p u r e ( d i c t A p p l i c a t i v e ) ) ;  
     } ) ;  
     v a r   s e q u e n c e   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . s e q u e n c e ;  
     } ;  
     v a r   $ $ f o r   =   f u n c t i o n   ( d i c t A p p l i c a t i v e )   {  
             r e t u r n   f u n c t i o n   ( d i c t T r a v e r s a b l e )   {  
                     r e t u r n   f u n c t i o n   ( x )   {  
                             r e t u r n   f u n c t i o n   ( f )   {  
                                     r e t u r n   t r a v e r s e ( d i c t T r a v e r s a b l e ) ( d i c t A p p l i c a t i v e ) ( f ) ( x ) ;  
                             } ;  
                     } ;  
             } ;  
     } ;  
     e x p o r t s [ " T r a v e r s a b l e " ]   =   T r a v e r s a b l e ;  
     e x p o r t s [ " t r a v e r s e " ]   =   t r a v e r s e ;  
     e x p o r t s [ " s e q u e n c e " ]   =   s e q u e n c e ;  
     e x p o r t s [ " s e q u e n c e D e f a u l t " ]   =   s e q u e n c e D e f a u l t ;  
     e x p o r t s [ " f o r " ]   =   $ $ f o r ;  
     e x p o r t s [ " t r a v e r s a b l e A r r a y " ]   =   t r a v e r s a b l e A r r a y ;  
 } ) ( P S [ " D a t a . T r a v e r s a b l e " ]   =   P S [ " D a t a . T r a v e r s a b l e " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   C o n t r o l _ A p p l i c a t i v e   =   P S [ " C o n t r o l . A p p l i c a t i v e " ] ;  
     v a r   C o n t r o l _ A p p l y   =   P S [ " C o n t r o l . A p p l y " ] ;  
     v a r   C o n t r o l _ B i a p p l i c a t i v e   =   P S [ " C o n t r o l . B i a p p l i c a t i v e " ] ;  
     v a r   C o n t r o l _ B i a p p l y   =   P S [ " C o n t r o l . B i a p p l y " ] ;  
     v a r   C o n t r o l _ B i n d   =   P S [ " C o n t r o l . B i n d " ] ;  
     v a r   C o n t r o l _ C o m o n a d   =   P S [ " C o n t r o l . C o m o n a d " ] ;  
     v a r   C o n t r o l _ E x t e n d   =   P S [ " C o n t r o l . E x t e n d " ] ;  
     v a r   C o n t r o l _ L a z y   =   P S [ " C o n t r o l . L a z y " ] ;  
     v a r   C o n t r o l _ M o n a d   =   P S [ " C o n t r o l . M o n a d " ] ;  
     v a r   C o n t r o l _ S e m i g r o u p o i d   =   P S [ " C o n t r o l . S e m i g r o u p o i d " ] ;  
     v a r   D a t a _ B i f o l d a b l e   =   P S [ " D a t a . B i f o l d a b l e " ] ;  
     v a r   D a t a _ B i f u n c t o r   =   P S [ " D a t a . B i f u n c t o r " ] ;  
     v a r   D a t a _ B i t r a v e r s a b l e   =   P S [ " D a t a . B i t r a v e r s a b l e " ] ;  
     v a r   D a t a _ B o o l e a n A l g e b r a   =   P S [ " D a t a . B o o l e a n A l g e b r a " ] ;  
     v a r   D a t a _ B o u n d e d   =   P S [ " D a t a . B o u n d e d " ] ;  
     v a r   D a t a _ C o m m u t a t i v e R i n g   =   P S [ " D a t a . C o m m u t a t i v e R i n g " ] ;  
     v a r   D a t a _ D i s t r i b u t i v e   =   P S [ " D a t a . D i s t r i b u t i v e " ] ;  
     v a r   D a t a _ E q   =   P S [ " D a t a . E q " ] ;  
     v a r   D a t a _ F o l d a b l e   =   P S [ " D a t a . F o l d a b l e " ] ;  
     v a r   D a t a _ F o l d a b l e W i t h I n d e x   =   P S [ " D a t a . F o l d a b l e W i t h I n d e x " ] ;  
     v a r   D a t a _ F u n c t i o n   =   P S [ " D a t a . F u n c t i o n " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ F u n c t o r _ I n v a r i a n t   =   P S [ " D a t a . F u n c t o r . I n v a r i a n t " ] ;  
     v a r   D a t a _ F u n c t o r W i t h I n d e x   =   P S [ " D a t a . F u n c t o r W i t h I n d e x " ] ;  
     v a r   D a t a _ H e y t i n g A l g e b r a   =   P S [ " D a t a . H e y t i n g A l g e b r a " ] ;  
     v a r   D a t a _ M a y b e   =   P S [ " D a t a . M a y b e " ] ;  
     v a r   D a t a _ M a y b e _ F i r s t   =   P S [ " D a t a . M a y b e . F i r s t " ] ;  
     v a r   D a t a _ M o n o i d   =   P S [ " D a t a . M o n o i d " ] ;  
     v a r   D a t a _ N e w t y p e   =   P S [ " D a t a . N e w t y p e " ] ;  
     v a r   D a t a _ O r d   =   P S [ " D a t a . O r d " ] ;  
     v a r   D a t a _ O r d e r i n g   =   P S [ " D a t a . O r d e r i n g " ] ;  
     v a r   D a t a _ R i n g   =   P S [ " D a t a . R i n g " ] ;  
     v a r   D a t a _ S e m i g r o u p   =   P S [ " D a t a . S e m i g r o u p " ] ;  
     v a r   D a t a _ S e m i g r o u p _ F o l d a b l e   =   P S [ " D a t a . S e m i g r o u p . F o l d a b l e " ] ;  
     v a r   D a t a _ S e m i g r o u p _ T r a v e r s a b l e   =   P S [ " D a t a . S e m i g r o u p . T r a v e r s a b l e " ] ;  
     v a r   D a t a _ S e m i r i n g   =   P S [ " D a t a . S e m i r i n g " ] ;  
     v a r   D a t a _ S h o w   =   P S [ " D a t a . S h o w " ] ;  
     v a r   D a t a _ T r a v e r s a b l e   =   P S [ " D a t a . T r a v e r s a b l e " ] ;  
     v a r   D a t a _ T r a v e r s a b l e W i t h I n d e x   =   P S [ " D a t a . T r a v e r s a b l e W i t h I n d e x " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;  
     v a r   T y p e _ E q u a l i t y   =   P S [ " T y p e . E q u a l i t y " ] ;                                    
     v a r   T u p l e   =   ( f u n c t i o n   ( )   {  
             f u n c t i o n   T u p l e ( v a l u e 0 ,   v a l u e 1 )   {  
                     t h i s . v a l u e 0   =   v a l u e 0 ;  
                     t h i s . v a l u e 1   =   v a l u e 1 ;  
             } ;  
             T u p l e . c r e a t e   =   f u n c t i o n   ( v a l u e 0 )   {  
                     r e t u r n   f u n c t i o n   ( v a l u e 1 )   {  
                             r e t u r n   n e w   T u p l e ( v a l u e 0 ,   v a l u e 1 ) ;  
                     } ;  
             } ;  
             r e t u r n   T u p l e ;  
     } ) ( ) ;  
     v a r   u n c u r r y   =   f u n c t i o n   ( f )   {  
             r e t u r n   f u n c t i o n   ( v )   {  
                     r e t u r n   f ( v . v a l u e 0 ) ( v . v a l u e 1 ) ;  
             } ;  
     } ;  
     v a r   s e m i r i n g T u p l e   =   f u n c t i o n   ( d i c t S e m i r i n g )   {  
             r e t u r n   f u n c t i o n   ( d i c t S e m i r i n g 1 )   {  
                     r e t u r n   n e w   D a t a _ S e m i r i n g . S e m i r i n g ( f u n c t i o n   ( v )   {  
                             r e t u r n   f u n c t i o n   ( v 1 )   {  
                                     r e t u r n   n e w   T u p l e ( D a t a _ S e m i r i n g . a d d ( d i c t S e m i r i n g ) ( v . v a l u e 0 ) ( v 1 . v a l u e 0 ) ,   D a t a _ S e m i r i n g . a d d ( d i c t S e m i r i n g 1 ) ( v . v a l u e 1 ) ( v 1 . v a l u e 1 ) ) ;  
                             } ;  
                     } ,   f u n c t i o n   ( v )   {  
                             r e t u r n   f u n c t i o n   ( v 1 )   {  
                                     r e t u r n   n e w   T u p l e ( D a t a _ S e m i r i n g . m u l ( d i c t S e m i r i n g ) ( v . v a l u e 0 ) ( v 1 . v a l u e 0 ) ,   D a t a _ S e m i r i n g . m u l ( d i c t S e m i r i n g 1 ) ( v . v a l u e 1 ) ( v 1 . v a l u e 1 ) ) ;  
                             } ;  
                     } ,   n e w   T u p l e ( D a t a _ S e m i r i n g . o n e ( d i c t S e m i r i n g ) ,   D a t a _ S e m i r i n g . o n e ( d i c t S e m i r i n g 1 ) ) ,   n e w   T u p l e ( D a t a _ S e m i r i n g . z e r o ( d i c t S e m i r i n g ) ,   D a t a _ S e m i r i n g . z e r o ( d i c t S e m i r i n g 1 ) ) ) ;  
             } ;  
     } ;                                                                                                                                                                                                          
     v a r   f s t   =   f u n c t i o n   ( v )   {  
             r e t u r n   v . v a l u e 0 ;  
     } ;    
     v a r   e q T u p l e   =   f u n c t i o n   ( d i c t E q )   {  
             r e t u r n   f u n c t i o n   ( d i c t E q 1 )   {  
                     r e t u r n   n e w   D a t a _ E q . E q ( f u n c t i o n   ( x )   {  
                             r e t u r n   f u n c t i o n   ( y )   {  
                                     r e t u r n   D a t a _ E q . e q ( d i c t E q ) ( x . v a l u e 0 ) ( y . v a l u e 0 )   & &   D a t a _ E q . e q ( d i c t E q 1 ) ( x . v a l u e 1 ) ( y . v a l u e 1 ) ;  
                             } ;  
                     } ) ;  
             } ;  
     } ;  
     e x p o r t s [ " T u p l e " ]   =   T u p l e ;  
     e x p o r t s [ " f s t " ]   =   f s t ;  
     e x p o r t s [ " u n c u r r y " ]   =   u n c u r r y ;  
     e x p o r t s [ " e q T u p l e " ]   =   e q T u p l e ;  
     e x p o r t s [ " s e m i r i n g T u p l e " ]   =   s e m i r i n g T u p l e ;  
 } ) ( P S [ " D a t a . T u p l e " ]   =   P S [ " D a t a . T u p l e " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   D a t a _ T u p l e   =   P S [ " D a t a . T u p l e " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;                                    
     v a r   M o n a d S t a t e   =   f u n c t i o n   ( M o n a d 0 ,   s t a t e )   {  
             t h i s . M o n a d 0   =   M o n a d 0 ;  
             t h i s . s t a t e   =   s t a t e ;  
     } ;  
     v a r   s t a t e   =   f u n c t i o n   ( d i c t )   {  
             r e t u r n   d i c t . s t a t e ;  
     } ;  
     e x p o r t s [ " s t a t e " ]   =   s t a t e ;  
     e x p o r t s [ " M o n a d S t a t e " ]   =   M o n a d S t a t e ;  
 } ) ( P S [ " C o n t r o l . M o n a d . S t a t e . C l a s s " ]   =   P S [ " C o n t r o l . M o n a d . S t a t e . C l a s s " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   C o n t r o l _ A l t   =   P S [ " C o n t r o l . A l t " ] ;  
     v a r   C o n t r o l _ A l t e r n a t i v e   =   P S [ " C o n t r o l . A l t e r n a t i v e " ] ;  
     v a r   C o n t r o l _ A p p l i c a t i v e   =   P S [ " C o n t r o l . A p p l i c a t i v e " ] ;  
     v a r   C o n t r o l _ A p p l y   =   P S [ " C o n t r o l . A p p l y " ] ;  
     v a r   C o n t r o l _ B i n d   =   P S [ " C o n t r o l . B i n d " ] ;  
     v a r   C o n t r o l _ L a z y   =   P S [ " C o n t r o l . L a z y " ] ;  
     v a r   C o n t r o l _ M o n a d   =   P S [ " C o n t r o l . M o n a d " ] ;  
     v a r   C o n t r o l _ M o n a d _ C o n t _ C l a s s   =   P S [ " C o n t r o l . M o n a d . C o n t . C l a s s " ] ;  
     v a r   C o n t r o l _ M o n a d _ E r r o r _ C l a s s   =   P S [ " C o n t r o l . M o n a d . E r r o r . C l a s s " ] ;  
     v a r   C o n t r o l _ M o n a d _ R e a d e r _ C l a s s   =   P S [ " C o n t r o l . M o n a d . R e a d e r . C l a s s " ] ;  
     v a r   C o n t r o l _ M o n a d _ R e c _ C l a s s   =   P S [ " C o n t r o l . M o n a d . R e c . C l a s s " ] ;  
     v a r   C o n t r o l _ M o n a d _ S t a t e _ C l a s s   =   P S [ " C o n t r o l . M o n a d . S t a t e . C l a s s " ] ;  
     v a r   C o n t r o l _ M o n a d _ T r a n s _ C l a s s   =   P S [ " C o n t r o l . M o n a d . T r a n s . C l a s s " ] ;  
     v a r   C o n t r o l _ M o n a d _ W r i t e r _ C l a s s   =   P S [ " C o n t r o l . M o n a d . W r i t e r . C l a s s " ] ;  
     v a r   C o n t r o l _ M o n a d P l u s   =   P S [ " C o n t r o l . M o n a d P l u s " ] ;  
     v a r   C o n t r o l _ M o n a d Z e r o   =   P S [ " C o n t r o l . M o n a d Z e r o " ] ;  
     v a r   C o n t r o l _ P l u s   =   P S [ " C o n t r o l . P l u s " ] ;  
     v a r   C o n t r o l _ S e m i g r o u p o i d   =   P S [ " C o n t r o l . S e m i g r o u p o i d " ] ;  
     v a r   D a t a _ F u n c t i o n   =   P S [ " D a t a . F u n c t i o n " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ N e w t y p e   =   P S [ " D a t a . N e w t y p e " ] ;  
     v a r   D a t a _ T u p l e   =   P S [ " D a t a . T u p l e " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;  
     v a r   E f f e c t _ C l a s s   =   P S [ " E f f e c t . C l a s s " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;                                    
     v a r   S t a t e T   =   f u n c t i o n   ( x )   {  
             r e t u r n   x ;  
     } ;    
     v a r   f u n c t o r S t a t e T   =   f u n c t i o n   ( d i c t F u n c t o r )   {  
             r e t u r n   n e w   D a t a _ F u n c t o r . F u n c t o r ( f u n c t i o n   ( f )   {  
                     r e t u r n   f u n c t i o n   ( v )   {  
                             r e t u r n   f u n c t i o n   ( s )   {  
                                     r e t u r n   D a t a _ F u n c t o r . m a p ( d i c t F u n c t o r ) ( f u n c t i o n   ( v 1 )   {  
                                             r e t u r n   n e w   D a t a _ T u p l e . T u p l e ( f ( v 1 . v a l u e 0 ) ,   v 1 . v a l u e 1 ) ;  
                                     } ) ( v ( s ) ) ;  
                             } ;  
                     } ;  
             } ) ;  
     } ;  
     v a r   m o n a d S t a t e T   =   f u n c t i o n   ( d i c t M o n a d )   {  
             r e t u r n   n e w   C o n t r o l _ M o n a d . M o n a d ( f u n c t i o n   ( )   {  
                     r e t u r n   a p p l i c a t i v e S t a t e T ( d i c t M o n a d ) ;  
             } ,   f u n c t i o n   ( )   {  
                     r e t u r n   b i n d S t a t e T ( d i c t M o n a d ) ;  
             } ) ;  
     } ;  
     v a r   b i n d S t a t e T   =   f u n c t i o n   ( d i c t M o n a d )   {  
             r e t u r n   n e w   C o n t r o l _ B i n d . B i n d ( f u n c t i o n   ( )   {  
                     r e t u r n   a p p l y S t a t e T ( d i c t M o n a d ) ;  
             } ,   f u n c t i o n   ( v )   {  
                     r e t u r n   f u n c t i o n   ( f )   {  
                             r e t u r n   f u n c t i o n   ( s )   {  
                                     r e t u r n   C o n t r o l _ B i n d . b i n d ( d i c t M o n a d . B i n d 1 ( ) ) ( v ( s ) ) ( f u n c t i o n   ( v 1 )   {  
                                             v a r   v 3   =   f ( v 1 . v a l u e 0 ) ;  
                                             r e t u r n   v 3 ( v 1 . v a l u e 1 ) ;  
                                     } ) ;  
                             } ;  
                     } ;  
             } ) ;  
     } ;  
     v a r   a p p l y S t a t e T   =   f u n c t i o n   ( d i c t M o n a d )   {  
             r e t u r n   n e w   C o n t r o l _ A p p l y . A p p l y ( f u n c t i o n   ( )   {  
                     r e t u r n   f u n c t o r S t a t e T ( ( ( d i c t M o n a d . B i n d 1 ( ) ) . A p p l y 0 ( ) ) . F u n c t o r 0 ( ) ) ;  
             } ,   C o n t r o l _ M o n a d . a p ( m o n a d S t a t e T ( d i c t M o n a d ) ) ) ;  
     } ;  
     v a r   a p p l i c a t i v e S t a t e T   =   f u n c t i o n   ( d i c t M o n a d )   {  
             r e t u r n   n e w   C o n t r o l _ A p p l i c a t i v e . A p p l i c a t i v e ( f u n c t i o n   ( )   {  
                     r e t u r n   a p p l y S t a t e T ( d i c t M o n a d ) ;  
             } ,   f u n c t i o n   ( a )   {  
                     r e t u r n   f u n c t i o n   ( s )   {  
                             r e t u r n   C o n t r o l _ A p p l i c a t i v e . p u r e ( d i c t M o n a d . A p p l i c a t i v e 0 ( ) ) ( n e w   D a t a _ T u p l e . T u p l e ( a ,   s ) ) ;  
                     } ;  
             } ) ;  
     } ;  
     v a r   m o n a d S t a t e S t a t e T   =   f u n c t i o n   ( d i c t M o n a d )   {  
             r e t u r n   n e w   C o n t r o l _ M o n a d _ S t a t e _ C l a s s . M o n a d S t a t e ( f u n c t i o n   ( )   {  
                     r e t u r n   m o n a d S t a t e T ( d i c t M o n a d ) ;  
             } ,   f u n c t i o n   ( f )   {  
                     r e t u r n   S t a t e T ( f u n c t i o n   ( $ 1 1 1 )   {  
                             r e t u r n   C o n t r o l _ A p p l i c a t i v e . p u r e ( d i c t M o n a d . A p p l i c a t i v e 0 ( ) ) ( f ( $ 1 1 1 ) ) ;  
                     } ) ;  
             } ) ;  
     } ;  
     e x p o r t s [ " S t a t e T " ]   =   S t a t e T ;  
     e x p o r t s [ " f u n c t o r S t a t e T " ]   =   f u n c t o r S t a t e T ;  
     e x p o r t s [ " a p p l y S t a t e T " ]   =   a p p l y S t a t e T ;  
     e x p o r t s [ " a p p l i c a t i v e S t a t e T " ]   =   a p p l i c a t i v e S t a t e T ;  
     e x p o r t s [ " b i n d S t a t e T " ]   =   b i n d S t a t e T ;  
     e x p o r t s [ " m o n a d S t a t e T " ]   =   m o n a d S t a t e T ;  
     e x p o r t s [ " m o n a d S t a t e S t a t e T " ]   =   m o n a d S t a t e S t a t e T ;  
 } ) ( P S [ " C o n t r o l . M o n a d . S t a t e . T r a n s " ]   =   P S [ " C o n t r o l . M o n a d . S t a t e . T r a n s " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   C o n t r o l _ A l t   =   P S [ " C o n t r o l . A l t " ] ;  
     v a r   C o n t r o l _ A p p l i c a t i v e   =   P S [ " C o n t r o l . A p p l i c a t i v e " ] ;  
     v a r   C o n t r o l _ A p p l y   =   P S [ " C o n t r o l . A p p l y " ] ;  
     v a r   C o n t r o l _ B i n d   =   P S [ " C o n t r o l . B i n d " ] ;  
     v a r   C o n t r o l _ C o m o n a d   =   P S [ " C o n t r o l . C o m o n a d " ] ;  
     v a r   C o n t r o l _ E x t e n d   =   P S [ " C o n t r o l . E x t e n d " ] ;  
     v a r   C o n t r o l _ L a z y   =   P S [ " C o n t r o l . L a z y " ] ;  
     v a r   C o n t r o l _ M o n a d   =   P S [ " C o n t r o l . M o n a d " ] ;  
     v a r   D a t a _ B o o l e a n A l g e b r a   =   P S [ " D a t a . B o o l e a n A l g e b r a " ] ;  
     v a r   D a t a _ B o u n d e d   =   P S [ " D a t a . B o u n d e d " ] ;  
     v a r   D a t a _ C o m m u t a t i v e R i n g   =   P S [ " D a t a . C o m m u t a t i v e R i n g " ] ;  
     v a r   D a t a _ E q   =   P S [ " D a t a . E q " ] ;  
     v a r   D a t a _ E u c l i d e a n R i n g   =   P S [ " D a t a . E u c l i d e a n R i n g " ] ;  
     v a r   D a t a _ F o l d a b l e   =   P S [ " D a t a . F o l d a b l e " ] ;  
     v a r   D a t a _ F o l d a b l e W i t h I n d e x   =   P S [ " D a t a . F o l d a b l e W i t h I n d e x " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ F u n c t o r _ I n v a r i a n t   =   P S [ " D a t a . F u n c t o r . I n v a r i a n t " ] ;  
     v a r   D a t a _ F u n c t o r W i t h I n d e x   =   P S [ " D a t a . F u n c t o r W i t h I n d e x " ] ;  
     v a r   D a t a _ H e y t i n g A l g e b r a   =   P S [ " D a t a . H e y t i n g A l g e b r a " ] ;  
     v a r   D a t a _ M o n o i d   =   P S [ " D a t a . M o n o i d " ] ;  
     v a r   D a t a _ N e w t y p e   =   P S [ " D a t a . N e w t y p e " ] ;  
     v a r   D a t a _ O r d   =   P S [ " D a t a . O r d " ] ;  
     v a r   D a t a _ R i n g   =   P S [ " D a t a . R i n g " ] ;  
     v a r   D a t a _ S e m i g r o u p   =   P S [ " D a t a . S e m i g r o u p " ] ;  
     v a r   D a t a _ S e m i g r o u p _ F o l d a b l e   =   P S [ " D a t a . S e m i g r o u p . F o l d a b l e " ] ;  
     v a r   D a t a _ S e m i g r o u p _ T r a v e r s a b l e   =   P S [ " D a t a . S e m i g r o u p . T r a v e r s a b l e " ] ;  
     v a r   D a t a _ S e m i r i n g   =   P S [ " D a t a . S e m i r i n g " ] ;  
     v a r   D a t a _ S h o w   =   P S [ " D a t a . S h o w " ] ;  
     v a r   D a t a _ T r a v e r s a b l e   =   P S [ " D a t a . T r a v e r s a b l e " ] ;  
     v a r   D a t a _ T r a v e r s a b l e W i t h I n d e x   =   P S [ " D a t a . T r a v e r s a b l e W i t h I n d e x " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;                                    
     v a r   I d e n t i t y   =   f u n c t i o n   ( x )   {  
             r e t u r n   x ;  
     } ;  
     v a r   n e w t y p e I d e n t i t y   =   n e w   D a t a _ N e w t y p e . N e w t y p e ( f u n c t i o n   ( n )   {  
             r e t u r n   n ;  
     } ,   I d e n t i t y ) ;  
     v a r   f u n c t o r I d e n t i t y   =   n e w   D a t a _ F u n c t o r . F u n c t o r ( f u n c t i o n   ( f )   {  
             r e t u r n   f u n c t i o n   ( m )   {  
                     r e t u r n   f ( m ) ;  
             } ;  
     } ) ;  
     v a r   a p p l y I d e n t i t y   =   n e w   C o n t r o l _ A p p l y . A p p l y ( f u n c t i o n   ( )   {  
             r e t u r n   f u n c t o r I d e n t i t y ;  
     } ,   f u n c t i o n   ( v )   {  
             r e t u r n   f u n c t i o n   ( v 1 )   {  
                     r e t u r n   v ( v 1 ) ;  
             } ;  
     } ) ;  
     v a r   b i n d I d e n t i t y   =   n e w   C o n t r o l _ B i n d . B i n d ( f u n c t i o n   ( )   {  
             r e t u r n   a p p l y I d e n t i t y ;  
     } ,   f u n c t i o n   ( v )   {  
             r e t u r n   f u n c t i o n   ( f )   {  
                     r e t u r n   f ( v ) ;  
             } ;  
     } ) ;  
     v a r   a p p l i c a t i v e I d e n t i t y   =   n e w   C o n t r o l _ A p p l i c a t i v e . A p p l i c a t i v e ( f u n c t i o n   ( )   {  
             r e t u r n   a p p l y I d e n t i t y ;  
     } ,   I d e n t i t y ) ;  
     v a r   m o n a d I d e n t i t y   =   n e w   C o n t r o l _ M o n a d . M o n a d ( f u n c t i o n   ( )   {  
             r e t u r n   a p p l i c a t i v e I d e n t i t y ;  
     } ,   f u n c t i o n   ( )   {  
             r e t u r n   b i n d I d e n t i t y ;  
     } ) ;  
     e x p o r t s [ " I d e n t i t y " ]   =   I d e n t i t y ;  
     e x p o r t s [ " n e w t y p e I d e n t i t y " ]   =   n e w t y p e I d e n t i t y ;  
     e x p o r t s [ " f u n c t o r I d e n t i t y " ]   =   f u n c t o r I d e n t i t y ;  
     e x p o r t s [ " a p p l y I d e n t i t y " ]   =   a p p l y I d e n t i t y ;  
     e x p o r t s [ " a p p l i c a t i v e I d e n t i t y " ]   =   a p p l i c a t i v e I d e n t i t y ;  
     e x p o r t s [ " b i n d I d e n t i t y " ]   =   b i n d I d e n t i t y ;  
     e x p o r t s [ " m o n a d I d e n t i t y " ]   =   m o n a d I d e n t i t y ;  
 } ) ( P S [ " D a t a . I d e n t i t y " ]   =   P S [ " D a t a . I d e n t i t y " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   C o n t r o l _ M o n a d _ S t a t e _ C l a s s   =   P S [ " C o n t r o l . M o n a d . S t a t e . C l a s s " ] ;  
     v a r   C o n t r o l _ M o n a d _ S t a t e _ T r a n s   =   P S [ " C o n t r o l . M o n a d . S t a t e . T r a n s " ] ;  
     v a r   C o n t r o l _ S e m i g r o u p o i d   =   P S [ " C o n t r o l . S e m i g r o u p o i d " ] ;  
     v a r   D a t a _ I d e n t i t y   =   P S [ " D a t a . I d e n t i t y " ] ;  
     v a r   D a t a _ N e w t y p e   =   P S [ " D a t a . N e w t y p e " ] ;  
     v a r   D a t a _ T u p l e   =   P S [ " D a t a . T u p l e " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;                                                    
     v a r   r u n S t a t e   =   f u n c t i o n   ( v )   {  
             r e t u r n   f u n c t i o n   ( $ 1 6 )   {  
                     r e t u r n   D a t a _ N e w t y p e . u n w r a p ( D a t a _ I d e n t i t y . n e w t y p e I d e n t i t y ) ( v ( $ 1 6 ) ) ;  
             } ;  
     } ;  
     v a r   e v a l S t a t e   =   f u n c t i o n   ( v )   {  
             r e t u r n   f u n c t i o n   ( s )   {  
                     v a r   v 1   =   v ( s ) ;  
                     r e t u r n   v 1 . v a l u e 0 ;  
             } ;  
     } ;  
     e x p o r t s [ " r u n S t a t e " ]   =   r u n S t a t e ;  
     e x p o r t s [ " e v a l S t a t e " ]   =   e v a l S t a t e ;  
 } ) ( P S [ " C o n t r o l . M o n a d . S t a t e " ]   =   P S [ " C o n t r o l . M o n a d . S t a t e " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
         " u s e   s t r i c t " ;  
  
     / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     / /   A r r a y   s i z e   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
  
     e x p o r t s . l e n g t h   =   f u n c t i o n   ( x s )   {  
         r e t u r n   x s . l e n g t h ;  
     } ;  
  
     / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     / /   E x t e n d i n g   a r r a y s   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
  
     e x p o r t s . c o n s   =   f u n c t i o n   ( e )   {  
         r e t u r n   f u n c t i o n   ( l )   {  
             r e t u r n   [ e ] . c o n c a t ( l ) ;  
         } ;  
     } ;  
  
     / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     / /   N o n - i n d e x e d   r e a d s   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
  
     e x p o r t s [ " u n c o n s ' " ]   =   f u n c t i o n   ( e m p t y )   {  
         r e t u r n   f u n c t i o n   ( n e x t )   {  
             r e t u r n   f u n c t i o n   ( x s )   {  
                 r e t u r n   x s . l e n g t h   = = =   0   ?   e m p t y ( { } )   :   n e x t ( x s [ 0 ] ) ( x s . s l i c e ( 1 ) ) ;  
             } ;  
         } ;  
     } ;  
  
     / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     / /   I n d e x e d   o p e r a t i o n s   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
  
     e x p o r t s . i n d e x I m p l   =   f u n c t i o n   ( j u s t )   {  
         r e t u r n   f u n c t i o n   ( n o t h i n g )   {  
             r e t u r n   f u n c t i o n   ( x s )   {  
                 r e t u r n   f u n c t i o n   ( i )   {  
                     r e t u r n   i   <   0   | |   i   > =   x s . l e n g t h   ?   n o t h i n g   :     j u s t ( x s [ i ] ) ;  
                 } ;  
             } ;  
         } ;  
     } ;  
  
     e x p o r t s . c o n c a t   =   f u n c t i o n   ( x s s )   {  
         i f   ( x s s . l e n g t h   < =   1 0 0 0 0 )   {  
             / /   T h i s   m e t h o d   i s   f a s t e r ,   b u t   i t   c r a s h e s   o n   b i g   a r r a y s .  
             / /   S o   w e   u s e   i t   w h e n   c a n   a n d   f a l l b a c k   t o   s i m p l e   v a r i a n t   o t h e r w i s e .  
             r e t u r n   A r r a y . p r o t o t y p e . c o n c a t . a p p l y ( [ ] ,   x s s ) ;  
         }  
  
         v a r   r e s u l t   =   [ ] ;  
         f o r   ( v a r   i   =   0 ,   l   =   x s s . l e n g t h ;   i   <   l ;   i + + )   {  
             v a r   x s   =   x s s [ i ] ;  
             f o r   ( v a r   j   =   0 ,   m   =   x s . l e n g t h ;   j   <   m ;   j + + )   {  
                 r e s u l t . p u s h ( x s [ j ] ) ;  
             }  
         }  
         r e t u r n   r e s u l t ;  
     } ;  
  
     / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     / /   S u b a r r a y s   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
  
     e x p o r t s . s l i c e   =   f u n c t i o n   ( s )   {  
         r e t u r n   f u n c t i o n   ( e )   {  
             r e t u r n   f u n c t i o n   ( l )   {  
                 r e t u r n   l . s l i c e ( s ,   e ) ;  
             } ;  
         } ;  
     } ;  
 } ) ( P S [ " D a t a . A r r a y " ]   =   P S [ " D a t a . A r r a y " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " D a t a . A r r a y " ] ;  
     v a r   C o n t r o l _ A l t   =   P S [ " C o n t r o l . A l t " ] ;  
     v a r   C o n t r o l _ A l t e r n a t i v e   =   P S [ " C o n t r o l . A l t e r n a t i v e " ] ;  
     v a r   C o n t r o l _ A p p l i c a t i v e   =   P S [ " C o n t r o l . A p p l i c a t i v e " ] ;  
     v a r   C o n t r o l _ A p p l y   =   P S [ " C o n t r o l . A p p l y " ] ;  
     v a r   C o n t r o l _ B i n d   =   P S [ " C o n t r o l . B i n d " ] ;  
     v a r   C o n t r o l _ C a t e g o r y   =   P S [ " C o n t r o l . C a t e g o r y " ] ;  
     v a r   C o n t r o l _ L a z y   =   P S [ " C o n t r o l . L a z y " ] ;  
     v a r   C o n t r o l _ M o n a d _ R e c _ C l a s s   =   P S [ " C o n t r o l . M o n a d . R e c . C l a s s " ] ;  
     v a r   C o n t r o l _ M o n a d _ S T   =   P S [ " C o n t r o l . M o n a d . S T " ] ;  
     v a r   C o n t r o l _ M o n a d _ S T _ I n t e r n a l   =   P S [ " C o n t r o l . M o n a d . S T . I n t e r n a l " ] ;  
     v a r   C o n t r o l _ S e m i g r o u p o i d   =   P S [ " C o n t r o l . S e m i g r o u p o i d " ] ;  
     v a r   D a t a _ A r r a y _ N o n E m p t y _ I n t e r n a l   =   P S [ " D a t a . A r r a y . N o n E m p t y . I n t e r n a l " ] ;  
     v a r   D a t a _ A r r a y _ S T   =   P S [ " D a t a . A r r a y . S T " ] ;  
     v a r   D a t a _ A r r a y _ S T _ I t e r a t o r   =   P S [ " D a t a . A r r a y . S T . I t e r a t o r " ] ;  
     v a r   D a t a _ B o o l e a n   =   P S [ " D a t a . B o o l e a n " ] ;  
     v a r   D a t a _ E q   =   P S [ " D a t a . E q " ] ;  
     v a r   D a t a _ F o l d a b l e   =   P S [ " D a t a . F o l d a b l e " ] ;  
     v a r   D a t a _ F u n c t i o n   =   P S [ " D a t a . F u n c t i o n " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ H e y t i n g A l g e b r a   =   P S [ " D a t a . H e y t i n g A l g e b r a " ] ;  
     v a r   D a t a _ M a y b e   =   P S [ " D a t a . M a y b e " ] ;  
     v a r   D a t a _ O r d   =   P S [ " D a t a . O r d " ] ;  
     v a r   D a t a _ O r d e r i n g   =   P S [ " D a t a . O r d e r i n g " ] ;  
     v a r   D a t a _ R i n g   =   P S [ " D a t a . R i n g " ] ;  
     v a r   D a t a _ S e m i g r o u p   =   P S [ " D a t a . S e m i g r o u p " ] ;  
     v a r   D a t a _ S e m i r i n g   =   P S [ " D a t a . S e m i r i n g " ] ;  
     v a r   D a t a _ T r a v e r s a b l e   =   P S [ " D a t a . T r a v e r s a b l e " ] ;  
     v a r   D a t a _ T u p l e   =   P S [ " D a t a . T u p l e " ] ;  
     v a r   D a t a _ U n f o l d a b l e   =   P S [ " D a t a . U n f o l d a b l e " ] ;  
     v a r   P a r t i a l _ U n s a f e   =   P S [ " P a r t i a l . U n s a f e " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;  
     v a r   U n s a f e _ C o e r c e   =   P S [ " U n s a f e . C o e r c e " ] ;  
     v a r   u n c o n s   =   $ f o r e i g n [ " u n c o n s ' " ] ( D a t a _ F u n c t i o n [ " c o n s t " ] ( D a t a _ M a y b e . N o t h i n g . v a l u e ) ) ( f u n c t i o n   ( x )   {  
             r e t u r n   f u n c t i o n   ( x s )   {  
                     r e t u r n   n e w   D a t a _ M a y b e . J u s t ( {  
                             h e a d :   x ,  
                             t a i l :   x s  
                     } ) ;  
             } ;  
     } ) ;  
     v a r   i n d e x   =   $ f o r e i g n . i n d e x I m p l ( D a t a _ M a y b e . J u s t . c r e a t e ) ( D a t a _ M a y b e . N o t h i n g . v a l u e ) ;  
     v a r   l a s t   =   f u n c t i o n   ( x s )   {  
             r e t u r n   i n d e x ( x s ) ( $ f o r e i g n . l e n g t h ( x s )   -   1   |   0 ) ;  
     } ;  
     e x p o r t s [ " l a s t " ]   =   l a s t ;  
     e x p o r t s [ " u n c o n s " ]   =   u n c o n s ;  
     e x p o r t s [ " i n d e x " ]   =   i n d e x ;  
     e x p o r t s [ " l e n g t h " ]   =   $ f o r e i g n . l e n g t h ;  
     e x p o r t s [ " c o n s " ]   =   $ f o r e i g n . c o n s ;  
     e x p o r t s [ " s l i c e " ]   =   $ f o r e i g n . s l i c e ;  
 } ) ( P S [ " D a t a . A r r a y " ]   =   P S [ " D a t a . A r r a y " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   D a t a _ A r r a y   =   P S [ " D a t a . A r r a y " ] ;  
     v a r   D a t a _ R i n g   =   P S [ " D a t a . R i n g " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;  
     v a r   h e a d   =   f u n c t i o n   ( d i c t P a r t i a l )   {  
             r e t u r n   f u n c t i o n   ( x s )   {  
                     r e t u r n   x s [ 0 ] ;  
             } ;  
     } ;  
     e x p o r t s [ " h e a d " ]   =   h e a d ;  
 } ) ( P S [ " D a t a . A r r a y . P a r t i a l " ]   =   P S [ " D a t a . A r r a y . P a r t i a l " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
         " u s e   s t r i c t " ;  
  
     e x p o r t s . f r o m N u m b e r I m p l   =   f u n c t i o n   ( j u s t )   {  
         r e t u r n   f u n c t i o n   ( n o t h i n g )   {  
             r e t u r n   f u n c t i o n   ( n )   {  
                 / *   j s h i n t   b i t w i s e :   f a l s e   * /  
                 r e t u r n   ( n   |   0 )   = = =   n   ?   j u s t ( n )   :   n o t h i n g ;  
             } ;  
         } ;  
     } ;  
  
     e x p o r t s . t o N u m b e r   =   f u n c t i o n   ( n )   {  
         r e t u r n   n ;  
     } ;  
 } ) ( P S [ " D a t a . I n t " ]   =   P S [ " D a t a . I n t " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / *   g l o b a l s   e x p o r t s   * /  
     " u s e   s t r i c t " ;                    
  
     e x p o r t s . i n f i n i t y   =   I n f i n i t y ;  
 } ) ( P S [ " G l o b a l " ]   =   P S [ " G l o b a l " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " G l o b a l " ] ;  
     e x p o r t s [ " i n f i n i t y " ]   =   $ f o r e i g n . i n f i n i t y ;  
 } ) ( P S [ " G l o b a l " ]   =   P S [ " G l o b a l " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
         " u s e   s t r i c t " ;                  
  
     e x p o r t s . f l o o r   =   M a t h . f l o o r ;  
  
     e x p o r t s . r e m a i n d e r   =   f u n c t i o n   ( n )   {  
         r e t u r n   f u n c t i o n   ( m )   {  
             r e t u r n   n   %   m ;  
         } ;  
     } ;  
 } ) ( P S [ " M a t h " ]   =   P S [ " M a t h " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " M a t h " ] ;  
     e x p o r t s [ " f l o o r " ]   =   $ f o r e i g n . f l o o r ;  
     e x p o r t s [ " r e m a i n d e r " ]   =   $ f o r e i g n . r e m a i n d e r ;  
 } ) ( P S [ " M a t h " ]   =   P S [ " M a t h " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " D a t a . I n t " ] ;  
     v a r   C o n t r o l _ C a t e g o r y   =   P S [ " C o n t r o l . C a t e g o r y " ] ;  
     v a r   C o n t r o l _ S e m i g r o u p o i d   =   P S [ " C o n t r o l . S e m i g r o u p o i d " ] ;  
     v a r   D a t a _ B o o l e a n   =   P S [ " D a t a . B o o l e a n " ] ;  
     v a r   D a t a _ B o u n d e d   =   P S [ " D a t a . B o u n d e d " ] ;  
     v a r   D a t a _ C o m m u t a t i v e R i n g   =   P S [ " D a t a . C o m m u t a t i v e R i n g " ] ;  
     v a r   D a t a _ D i v i s i o n R i n g   =   P S [ " D a t a . D i v i s i o n R i n g " ] ;  
     v a r   D a t a _ E q   =   P S [ " D a t a . E q " ] ;  
     v a r   D a t a _ E u c l i d e a n R i n g   =   P S [ " D a t a . E u c l i d e a n R i n g " ] ;  
     v a r   D a t a _ H e y t i n g A l g e b r a   =   P S [ " D a t a . H e y t i n g A l g e b r a " ] ;  
     v a r   D a t a _ I n t _ B i t s   =   P S [ " D a t a . I n t . B i t s " ] ;  
     v a r   D a t a _ M a y b e   =   P S [ " D a t a . M a y b e " ] ;  
     v a r   D a t a _ O r d   =   P S [ " D a t a . O r d " ] ;  
     v a r   D a t a _ O r d e r i n g   =   P S [ " D a t a . O r d e r i n g " ] ;  
     v a r   D a t a _ R i n g   =   P S [ " D a t a . R i n g " ] ;  
     v a r   D a t a _ S e m i r i n g   =   P S [ " D a t a . S e m i r i n g " ] ;  
     v a r   D a t a _ S h o w   =   P S [ " D a t a . S h o w " ] ;  
     v a r   G l o b a l   =   P S [ " G l o b a l " ] ;  
     v a r   $ $ M a t h   =   P S [ " M a t h " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;              
     v a r   f r o m N u m b e r   =   $ f o r e i g n . f r o m N u m b e r I m p l ( D a t a _ M a y b e . J u s t . c r e a t e ) ( D a t a _ M a y b e . N o t h i n g . v a l u e ) ;  
     v a r   u n s a f e C l a m p   =   f u n c t i o n   ( x )   {  
             i f   ( x   = = =   G l o b a l . i n f i n i t y )   {  
                     r e t u r n   0 ;  
             } ;  
             i f   ( x   = = =   - G l o b a l . i n f i n i t y )   {  
                     r e t u r n   0 ;  
             } ;  
             i f   ( x   > =   $ f o r e i g n . t o N u m b e r ( D a t a _ B o u n d e d . t o p ( D a t a _ B o u n d e d . b o u n d e d I n t ) ) )   {  
                     r e t u r n   D a t a _ B o u n d e d . t o p ( D a t a _ B o u n d e d . b o u n d e d I n t ) ;  
             } ;  
             i f   ( x   < =   $ f o r e i g n . t o N u m b e r ( D a t a _ B o u n d e d . b o t t o m ( D a t a _ B o u n d e d . b o u n d e d I n t ) ) )   {  
                     r e t u r n   D a t a _ B o u n d e d . b o t t o m ( D a t a _ B o u n d e d . b o u n d e d I n t ) ;  
             } ;  
             i f   ( D a t a _ B o o l e a n . o t h e r w i s e )   {  
                     r e t u r n   D a t a _ M a y b e . f r o m M a y b e ( 0 ) ( f r o m N u m b e r ( x ) ) ;  
             } ;  
             t h r o w   n e w   E r r o r ( " F a i l e d   p a t t e r n   m a t c h   a t   D a t a . I n t   l i n e   6 6 ,   c o l u m n   1   -   l i n e   6 6 ,   c o l u m n   2 9 :   "   +   [   x . c o n s t r u c t o r . n a m e   ] ) ;  
     } ;  
     v a r   f l o o r   =   f u n c t i o n   ( $ 2 4 )   {  
             r e t u r n   u n s a f e C l a m p ( $ $ M a t h . f l o o r ( $ 2 4 ) ) ;  
     } ;  
     e x p o r t s [ " f r o m N u m b e r " ]   =   f r o m N u m b e r ;  
     e x p o r t s [ " f l o o r " ]   =   f l o o r ;  
     e x p o r t s [ " t o N u m b e r " ]   =   $ f o r e i g n . t o N u m b e r ;  
 } ) ( P S [ " D a t a . I n t " ]   =   P S [ " D a t a . I n t " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
         " u s e   s t r i c t " ;  
  
     e x p o r t s . p u r e E   =   f u n c t i o n   ( a )   {  
         r e t u r n   f u n c t i o n   ( )   {  
             r e t u r n   a ;  
         } ;  
     } ;  
  
     e x p o r t s . b i n d E   =   f u n c t i o n   ( a )   {  
         r e t u r n   f u n c t i o n   ( f )   {  
             r e t u r n   f u n c t i o n   ( )   {  
                 r e t u r n   f ( a ( ) ) ( ) ;  
             } ;  
         } ;  
     } ;  
 } ) ( P S [ " E f f e c t " ]   =   P S [ " E f f e c t " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " E f f e c t " ] ;  
     v a r   C o n t r o l _ A p p l i c a t i v e   =   P S [ " C o n t r o l . A p p l i c a t i v e " ] ;  
     v a r   C o n t r o l _ A p p l y   =   P S [ " C o n t r o l . A p p l y " ] ;  
     v a r   C o n t r o l _ B i n d   =   P S [ " C o n t r o l . B i n d " ] ;  
     v a r   C o n t r o l _ M o n a d   =   P S [ " C o n t r o l . M o n a d " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ M o n o i d   =   P S [ " D a t a . M o n o i d " ] ;  
     v a r   D a t a _ S e m i g r o u p   =   P S [ " D a t a . S e m i g r o u p " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;                                    
     v a r   m o n a d E f f e c t   =   n e w   C o n t r o l _ M o n a d . M o n a d ( f u n c t i o n   ( )   {  
             r e t u r n   a p p l i c a t i v e E f f e c t ;  
     } ,   f u n c t i o n   ( )   {  
             r e t u r n   b i n d E f f e c t ;  
     } ) ;  
     v a r   b i n d E f f e c t   =   n e w   C o n t r o l _ B i n d . B i n d ( f u n c t i o n   ( )   {  
             r e t u r n   a p p l y E f f e c t ;  
     } ,   $ f o r e i g n . b i n d E ) ;  
     v a r   a p p l y E f f e c t   =   n e w   C o n t r o l _ A p p l y . A p p l y ( f u n c t i o n   ( )   {  
             r e t u r n   f u n c t o r E f f e c t ;  
     } ,   C o n t r o l _ M o n a d . a p ( m o n a d E f f e c t ) ) ;  
     v a r   a p p l i c a t i v e E f f e c t   =   n e w   C o n t r o l _ A p p l i c a t i v e . A p p l i c a t i v e ( f u n c t i o n   ( )   {  
             r e t u r n   a p p l y E f f e c t ;  
     } ,   $ f o r e i g n . p u r e E ) ;  
     v a r   f u n c t o r E f f e c t   =   n e w   D a t a _ F u n c t o r . F u n c t o r ( C o n t r o l _ A p p l i c a t i v e . l i f t A 1 ( a p p l i c a t i v e E f f e c t ) ) ;  
     e x p o r t s [ " f u n c t o r E f f e c t " ]   =   f u n c t o r E f f e c t ;  
     e x p o r t s [ " a p p l y E f f e c t " ]   =   a p p l y E f f e c t ;  
     e x p o r t s [ " a p p l i c a t i v e E f f e c t " ]   =   a p p l i c a t i v e E f f e c t ;  
     e x p o r t s [ " b i n d E f f e c t " ]   =   b i n d E f f e c t ;  
     e x p o r t s [ " m o n a d E f f e c t " ]   =   m o n a d E f f e c t ;  
 } ) ( P S [ " E f f e c t " ]   =   P S [ " E f f e c t " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
         " u s e   s t r i c t " ;  
  
     e x p o r t s . r a n d o m   =   M a t h . r a n d o m ;  
 } ) ( P S [ " E f f e c t . R a n d o m " ]   =   P S [ " E f f e c t . R a n d o m " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " E f f e c t . R a n d o m " ] ;  
     v a r   C o n t r o l _ A p p l i c a t i v e   =   P S [ " C o n t r o l . A p p l i c a t i v e " ] ;  
     v a r   C o n t r o l _ B i n d   =   P S [ " C o n t r o l . B i n d " ] ;  
     v a r   D a t a _ F u n c t i o n   =   P S [ " D a t a . F u n c t i o n " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ I n t   =   P S [ " D a t a . I n t " ] ;  
     v a r   D a t a _ O r d   =   P S [ " D a t a . O r d " ] ;  
     v a r   D a t a _ R i n g   =   P S [ " D a t a . R i n g " ] ;  
     v a r   D a t a _ S e m i r i n g   =   P S [ " D a t a . S e m i r i n g " ] ;  
     v a r   E f f e c t   =   P S [ " E f f e c t " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;  
     v a r   r a n d o m I n t   =   f u n c t i o n   ( l o w )   {  
             r e t u r n   f u n c t i o n   ( h i g h )   {  
                     r e t u r n   f u n c t i o n   _ _ d o ( )   {  
                             v a r   v   =   $ f o r e i g n . r a n d o m ( ) ;  
                             v a r   a s N u m b e r   =   ( ( D a t a _ I n t . t o N u m b e r ( h i g h )   -   D a t a _ I n t . t o N u m b e r ( l o w ) )   +   1 )   *   v   +   D a t a _ I n t . t o N u m b e r ( l o w ) ;  
                             r e t u r n   D a t a _ I n t . f l o o r ( a s N u m b e r ) ;  
                     } ;  
             } ;  
     } ;  
     e x p o r t s [ " r a n d o m I n t " ]   =   r a n d o m I n t ;  
 } ) ( P S [ " E f f e c t . R a n d o m " ]   =   P S [ " E f f e c t . R a n d o m " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / *   g l o b a l   e x p o r t s   * /  
     " u s e   s t r i c t " ;  
  
     e x p o r t s . g e t C a n v a s E l e m e n t B y I d I m p l   =   f u n c t i o n ( i d ,   J u s t ,   N o t h i n g )   {  
             r e t u r n   f u n c t i o n ( )   {  
                     v a r   e l   =   d o c u m e n t . g e t E l e m e n t B y I d ( i d ) ;  
                     i f   ( e l   & &   e l   i n s t a n c e o f   H T M L C a n v a s E l e m e n t )   {  
                             r e t u r n   J u s t ( e l ) ;  
                     }   e l s e   {  
                             r e t u r n   N o t h i n g ;  
                     }  
             } ;  
     } ;  
  
     e x p o r t s . g e t C o n t e x t 2 D   =   f u n c t i o n ( c )   {  
             r e t u r n   f u n c t i o n ( )   {  
                     r e t u r n   c . g e t C o n t e x t ( ' 2 d ' ) ;  
             } ;  
     } ;  
  
     e x p o r t s . s e t F i l l S t y l e   =   f u n c t i o n ( c t x )   {  
             r e t u r n   f u n c t i o n ( s t y l e )   {  
                     r e t u r n   f u n c t i o n ( )   {  
                             c t x . f i l l S t y l e   =   s t y l e ;  
                     } ;  
             } ;  
     } ;  
  
     e x p o r t s . b e g i n P a t h   =   f u n c t i o n ( c t x )   {  
             r e t u r n   f u n c t i o n ( )   {  
                     c t x . b e g i n P a t h ( ) ;  
             } ;  
     } ;  
  
     e x p o r t s . f i l l   =   f u n c t i o n ( c t x )   {  
             r e t u r n   f u n c t i o n ( )   {  
                     c t x . f i l l ( ) ;  
             } ;  
     } ;  
  
     e x p o r t s . r e c t   =   f u n c t i o n ( c t x )   {  
             r e t u r n   f u n c t i o n ( r )   {  
                     r e t u r n   f u n c t i o n ( )   {  
                             c t x . r e c t ( r . x ,   r . y ,   r . w i d t h ,   r . h e i g h t ) ;  
                     } ;  
             } ;  
     } ;  
 } ) ( P S [ " G r a p h i c s . C a n v a s " ]   =   P S [ " G r a p h i c s . C a n v a s " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " G r a p h i c s . C a n v a s " ] ;  
     v a r   C o n t r o l _ A p p l i c a t i v e   =   P S [ " C o n t r o l . A p p l i c a t i v e " ] ;  
     v a r   C o n t r o l _ A p p l y   =   P S [ " C o n t r o l . A p p l y " ] ;  
     v a r   C o n t r o l _ B i n d   =   P S [ " C o n t r o l . B i n d " ] ;  
     v a r   C o n t r o l _ S e m i g r o u p o i d   =   P S [ " C o n t r o l . S e m i g r o u p o i d " ] ;  
     v a r   D a t a _ A r r a y B u f f e r _ T y p e s   =   P S [ " D a t a . A r r a y B u f f e r . T y p e s " ] ;  
     v a r   D a t a _ E q   =   P S [ " D a t a . E q " ] ;  
     v a r   D a t a _ F u n c t i o n   =   P S [ " D a t a . F u n c t i o n " ] ;  
     v a r   D a t a _ F u n c t i o n _ U n c u r r i e d   =   P S [ " D a t a . F u n c t i o n . U n c u r r i e d " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ M a y b e   =   P S [ " D a t a . M a y b e " ] ;  
     v a r   D a t a _ S e m i g r o u p   =   P S [ " D a t a . S e m i g r o u p " ] ;  
     v a r   D a t a _ S h o w   =   P S [ " D a t a . S h o w " ] ;  
     v a r   E f f e c t   =   P S [ " E f f e c t " ] ;  
     v a r   E f f e c t _ E x c e p t i o n _ U n s a f e   =   P S [ " E f f e c t . E x c e p t i o n . U n s a f e " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;  
     v a r   g e t C a n v a s E l e m e n t B y I d   =   f u n c t i o n   ( e l I d )   {  
             r e t u r n   $ f o r e i g n . g e t C a n v a s E l e m e n t B y I d I m p l ( e l I d ,   D a t a _ M a y b e . J u s t . c r e a t e ,   D a t a _ M a y b e . N o t h i n g . v a l u e ) ;  
     } ;  
     v a r   f i l l P a t h   =   f u n c t i o n   ( c t x )   {  
             r e t u r n   f u n c t i o n   ( p a t h )   {  
                     r e t u r n   f u n c t i o n   _ _ d o ( )   {  
                             v a r   v   =   $ f o r e i g n . b e g i n P a t h ( c t x ) ( ) ;  
                             v a r   v 1   =   p a t h ( ) ;  
                             v a r   v 2   =   $ f o r e i g n . f i l l ( c t x ) ( ) ;  
                             r e t u r n   v 1 ;  
                     } ;  
             } ;  
     } ;  
     e x p o r t s [ " g e t C a n v a s E l e m e n t B y I d " ]   =   g e t C a n v a s E l e m e n t B y I d ;  
     e x p o r t s [ " f i l l P a t h " ]   =   f i l l P a t h ;  
     e x p o r t s [ " g e t C o n t e x t 2 D " ]   =   $ f o r e i g n . g e t C o n t e x t 2 D ;  
     e x p o r t s [ " s e t F i l l S t y l e " ]   =   $ f o r e i g n . s e t F i l l S t y l e ;  
     e x p o r t s [ " r e c t " ]   =   $ f o r e i g n . r e c t ;  
 } ) ( P S [ " G r a p h i c s . C a n v a s " ]   =   P S [ " G r a p h i c s . C a n v a s " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   D a t a _ E q   =   P S [ " D a t a . E q " ] ;  
     v a r   D a t a _ E u c l i d e a n R i n g   =   P S [ " D a t a . E u c l i d e a n R i n g " ] ;  
     v a r   D a t a _ F u n c t i o n   =   P S [ " D a t a . F u n c t i o n " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ I n t   =   P S [ " D a t a . I n t " ] ;  
     v a r   D a t a _ M a y b e   =   P S [ " D a t a . M a y b e " ] ;  
     v a r   D a t a _ O r d   =   P S [ " D a t a . O r d " ] ;  
     v a r   D a t a _ R i n g   =   P S [ " D a t a . R i n g " ] ;  
     v a r   D a t a _ S e m i g r o u p   =   P S [ " D a t a . S e m i g r o u p " ] ;  
     v a r   D a t a _ S e m i r i n g   =   P S [ " D a t a . S e m i r i n g " ] ;  
     v a r   D a t a _ S h o w   =   P S [ " D a t a . S h o w " ] ;  
     v a r   E f f e c t   =   P S [ " E f f e c t " ] ;  
     v a r   E f f e c t _ R a n d o m   =   P S [ " E f f e c t . R a n d o m " ] ;  
     v a r   $ $ M a t h   =   P S [ " M a t h " ] ;  
     v a r   P a r t i a l _ U n s a f e   =   P S [ " P a r t i a l . U n s a f e " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;                                    
     v a r   S e e d   =   f u n c t i o n   ( x )   {  
             r e t u r n   x ;  
     } ;  
     v a r   u n S e e d   =   f u n c t i o n   ( v )   {  
             r e t u r n   v ;  
     } ;    
     v a r   s e e d M i n   =   1 ;  
     v a r   l c g M   =   2 1 4 7 4 8 3 6 4 7 ;  
     v a r   s e e d M a x   =   l c g M   -   1   |   0 ;  
     v a r   m k S e e d   =   f u n c t i o n   ( x )   {  
             v a r   e n s u r e B e t w e e n   =   f u n c t i o n   ( m i n )   {  
                     r e t u r n   f u n c t i o n   ( m a x )   {  
                             r e t u r n   f u n c t i o n   ( n )   {  
                                     v a r   r a n g e S i z e   =   m a x   -   m i n   |   0 ;  
                                     v a r   n $ p r i m e   =   D a t a _ E u c l i d e a n R i n g . m o d ( D a t a _ E u c l i d e a n R i n g . e u c l i d e a n R i n g I n t ) ( n ) ( r a n g e S i z e ) ;  
                                     v a r   $ 1 4   =   n $ p r i m e   <   m i n ;  
                                     i f   ( $ 1 4 )   {  
                                             r e t u r n   n $ p r i m e   +   m a x   |   0 ;  
                                     } ;  
                                     r e t u r n   n $ p r i m e ;  
                             } ;  
                     } ;  
             } ;  
             r e t u r n   e n s u r e B e t w e e n ( s e e d M i n ) ( s e e d M a x ) ( x ) ;  
     } ;  
     v a r   r a n d o m S e e d   =   D a t a _ F u n c t o r . m a p ( E f f e c t . f u n c t o r E f f e c t ) ( m k S e e d ) ( E f f e c t _ R a n d o m . r a n d o m I n t ( s e e d M i n ) ( s e e d M a x ) ) ;  
     v a r   l c g C   =   0 ;  
     v a r   l c g A   =   4 8 2 7 1 ;  
     v a r   l c g P e r t u r b   =   f u n c t i o n   ( d )   {  
             r e t u r n   f u n c t i o n   ( v )   {  
                     r e t u r n   S e e d ( D a t a _ M a y b e . f r o m J u s t ( ) ( D a t a _ I n t . f r o m N u m b e r ( $ $ M a t h . r e m a i n d e r ( D a t a _ I n t . t o N u m b e r ( l c g A )   *   D a t a _ I n t . t o N u m b e r ( v )   +   d ) ( D a t a _ I n t . t o N u m b e r ( l c g M ) ) ) ) ) ;  
             } ;  
     } ;  
     v a r   l c g N e x t   =   l c g P e r t u r b ( D a t a _ I n t . t o N u m b e r ( l c g C ) ) ;  
     e x p o r t s [ " m k S e e d " ]   =   m k S e e d ;  
     e x p o r t s [ " u n S e e d " ]   =   u n S e e d ;  
     e x p o r t s [ " r a n d o m S e e d " ]   =   r a n d o m S e e d ;  
     e x p o r t s [ " l c g A " ]   =   l c g A ;  
     e x p o r t s [ " l c g C " ]   =   l c g C ;  
     e x p o r t s [ " l c g M " ]   =   l c g M ;  
     e x p o r t s [ " l c g N e x t " ]   =   l c g N e x t ;  
     e x p o r t s [ " l c g P e r t u r b " ]   =   l c g P e r t u r b ;  
 } ) ( P S [ " R a n d o m . L C G " ]   =   P S [ " R a n d o m . L C G " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   { / /   m o d u l e   S i g n a l  
  
     f u n c t i o n   m a k e ( i n i t i a l )   {  
         v a r   s u b s   =   [ ] ;  
         v a r   v a l   =   i n i t i a l ;  
         v a r   s i g   =   {  
             s u b s c r i b e :   f u n c t i o n ( s u b )   {  
                 s u b s . p u s h ( s u b ) ;  
                 s u b ( v a l ) ;  
             } ,  
             g e t :   f u n c t i o n ( )   {   r e t u r n   v a l ;   } ,  
             s e t :   f u n c t i o n ( n e w v a l )   {  
                 v a l   =   n e w v a l ;  
                 s u b s . f o r E a c h ( f u n c t i o n ( s u b )   {   s u b ( n e w v a l ) ;   } ) ;  
             }  
         } ;  
         r e t u r n   s i g ;  
     } ;  
  
     e x p o r t s . c o n s t a n t   =   m a k e ;  
  
     e x p o r t s . m a p S i g   =   f u n c t i o n ( f u n )   {  
         r e t u r n   f u n c t i o n ( s i g )   {  
             v a r   o u t   =   m a k e ( f u n ( s i g . g e t ( ) ) ) ;  
             s i g . s u b s c r i b e ( f u n c t i o n ( v a l )   {   o u t . s e t ( f u n ( v a l ) ) ;   } ) ;  
             r e t u r n   o u t ;  
         } ;  
     } ;  
  
  
     e x p o r t s . a p p l y S i g   =   f u n c t i o n ( f u n )   {  
         r e t u r n   f u n c t i o n ( s i g )   {  
             v a r   o u t   =   m a k e ( f u n . g e t ( ) ( s i g . g e t ( ) ) ) ;  
             v a r   p r o d u c e   =   f u n c t i o n ( )   {   o u t . s e t ( f u n . g e t ( ) ( s i g . g e t ( ) ) ) ;   } ;  
             f u n . s u b s c r i b e ( p r o d u c e ) ;  
             s i g . s u b s c r i b e ( p r o d u c e ) ;  
             r e t u r n   o u t ;  
         } ;  
     } ;  
  
     e x p o r t s . m e r g e   =   f u n c t i o n ( s i g 1 )   {  
         r e t u r n   f u n c t i o n ( s i g 2 )   {  
             v a r   o u t   =   m a k e ( s i g 1 . g e t ( ) ) ;  
             s i g 2 . s u b s c r i b e ( o u t . s e t ) ;  
             s i g 1 . s u b s c r i b e ( o u t . s e t ) ;  
             r e t u r n   o u t ;  
         } ;  
     } ;  
  
     e x p o r t s . f o l d p   =   f u n c t i o n ( f u n )   {  
         r e t u r n   f u n c t i o n ( s e e d )   {  
             r e t u r n   f u n c t i o n ( s i g )   {  
                 v a r   a c c   =   s e e d ;  
                 v a r   o u t   =   m a k e ( a c c ) ;  
                 s i g . s u b s c r i b e ( f u n c t i o n ( v a l )   {  
                     a c c   =   f u n ( v a l ) ( a c c ) ;  
                     o u t . s e t ( a c c ) ;  
                 } ) ;  
                 r e t u r n   o u t ;  
             } ;  
         } ;  
     } ;  
  
     e x p o r t s . s a m p l e O n   =   f u n c t i o n ( s i g 1 )   {  
         r e t u r n   f u n c t i o n ( s i g 2 )   {  
             v a r   o u t   =   m a k e ( s i g 2 . g e t ( ) ) ;  
             s i g 1 . s u b s c r i b e ( f u n c t i o n ( )   {  
                 o u t . s e t ( s i g 2 . g e t ( ) ) ;  
             } ) ;  
             r e t u r n   o u t ;  
         } ;  
     } ;  
  
     e x p o r t s . r u n S i g n a l   =  
         f u n c t i o n   r u n S i g n a l ( s i g )   {  
             r e t u r n   f u n c t i o n ( )   {  
                 s i g . s u b s c r i b e ( f u n c t i o n ( v a l )   {  
                     v a l ( ) ;  
                 } ) ;  
                 r e t u r n   { } ;  
             } ;  
         } ;  
  
     e x p o r t s . f i l t e r   =   f u n c t i o n ( f n )   {  
         r e t u r n   f u n c t i o n ( s e e d )   {  
             r e t u r n   f u n c t i o n ( s i g )   {  
                 v a r   o u t   =   m a k e ( f n ( s i g . g e t ( ) )   ?   s i g . g e t ( )   :   s e e d ) ;  
                 s i g . s u b s c r i b e ( f u n c t i o n ( v a l )   {   i f   ( f n ( v a l ) )   o u t . s e t ( v a l ) ;   } ) ;  
                 r e t u r n   o u t ;  
             } ;  
         } ;  
     } ;  
  
     e x p o r t s . g e t   =   f u n c t i o n ( s i g )   {  
         r e t u r n   f u n c t i o n ( )   {  
             r e t u r n   s i g . g e t ( ) ;  
         } ;  
     } ;  
 } ) ( P S [ " S i g n a l " ]   =   P S [ " S i g n a l " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " S i g n a l " ] ;  
     v a r   C o n t r o l _ A p p l i c a t i v e   =   P S [ " C o n t r o l . A p p l i c a t i v e " ] ;  
     v a r   C o n t r o l _ A p p l y   =   P S [ " C o n t r o l . A p p l y " ] ;  
     v a r   C o n t r o l _ S e m i g r o u p o i d   =   P S [ " C o n t r o l . S e m i g r o u p o i d " ] ;  
     v a r   D a t a _ F o l d a b l e   =   P S [ " D a t a . F o l d a b l e " ] ;  
     v a r   D a t a _ F u n c t i o n   =   P S [ " D a t a . F u n c t i o n " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ M a y b e   =   P S [ " D a t a . M a y b e " ] ;  
     v a r   D a t a _ M o n o i d   =   P S [ " D a t a . M o n o i d " ] ;  
     v a r   D a t a _ S e m i g r o u p   =   P S [ " D a t a . S e m i g r o u p " ] ;  
     v a r   E f f e c t   =   P S [ " E f f e c t " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;                                    
     v a r   s q u i g g l y M a p   =   f u n c t i o n   ( d i c t F u n c t o r )   {  
             r e t u r n   D a t a _ F u n c t o r . m a p ( d i c t F u n c t o r ) ;  
     } ;  
     v a r   s q u i g g l y A p p l y   =   f u n c t i o n   ( d i c t A p p l y )   {  
             r e t u r n   C o n t r o l _ A p p l y . a p p l y ( d i c t A p p l y ) ;  
     } ;  
     v a r   f u n c t o r S i g n a l   =   n e w   D a t a _ F u n c t o r . F u n c t o r ( $ f o r e i g n . m a p S i g ) ;  
     v a r   f i l t e r M a p   =   f u n c t i o n   ( f )   {  
             r e t u r n   f u n c t i o n   ( d e f )   {  
                     r e t u r n   f u n c t i o n   ( s i g )   {  
                             r e t u r n   D a t a _ F u n c t o r . m a p ( f u n c t o r S i g n a l ) ( D a t a _ M a y b e . f r o m M a y b e ( d e f ) ) ( $ f o r e i g n . f i l t e r ( D a t a _ M a y b e . i s J u s t ) ( n e w   D a t a _ M a y b e . J u s t ( d e f ) ) ( D a t a _ F u n c t o r . m a p ( f u n c t o r S i g n a l ) ( f ) ( s i g ) ) ) ;  
                     } ;  
             } ;  
     } ;  
     v a r   a p p l y S i g n a l   =   n e w   C o n t r o l _ A p p l y . A p p l y ( f u n c t i o n   ( )   {  
             r e t u r n   f u n c t o r S i g n a l ;  
     } ,   $ f o r e i g n . a p p l y S i g ) ;  
     v a r   m a p 4   =   f u n c t i o n   ( f )   {  
             r e t u r n   f u n c t i o n   ( a )   {  
                     r e t u r n   f u n c t i o n   ( b )   {  
                             r e t u r n   f u n c t i o n   ( c )   {  
                                     r e t u r n   f u n c t i o n   ( d )   {  
                                             r e t u r n   s q u i g g l y A p p l y ( a p p l y S i g n a l ) ( s q u i g g l y A p p l y ( a p p l y S i g n a l ) ( s q u i g g l y A p p l y ( a p p l y S i g n a l ) ( s q u i g g l y M a p ( f u n c t o r S i g n a l ) ( f ) ( a ) ) ( b ) ) ( c ) ) ( d ) ;  
                                     } ;  
                             } ;  
                     } ;  
             } ;  
     } ;  
     e x p o r t s [ " f i l t e r M a p " ]   =   f i l t e r M a p ;  
     e x p o r t s [ " s q u i g g l y M a p " ]   =   s q u i g g l y M a p ;  
     e x p o r t s [ " s q u i g g l y A p p l y " ]   =   s q u i g g l y A p p l y ;  
     e x p o r t s [ " m a p 4 " ]   =   m a p 4 ;  
     e x p o r t s [ " f u n c t o r S i g n a l " ]   =   f u n c t o r S i g n a l ;  
     e x p o r t s [ " a p p l y S i g n a l " ]   =   a p p l y S i g n a l ;  
     e x p o r t s [ " c o n s t a n t " ]   =   $ f o r e i g n . c o n s t a n t ;  
     e x p o r t s [ " m e r g e " ]   =   $ f o r e i g n . m e r g e ;  
     e x p o r t s [ " f o l d p " ]   =   $ f o r e i g n . f o l d p ;  
     e x p o r t s [ " s a m p l e O n " ]   =   $ f o r e i g n . s a m p l e O n ;  
     e x p o r t s [ " r u n S i g n a l " ]   =   $ f o r e i g n . r u n S i g n a l ;  
 } ) ( P S [ " S i g n a l " ]   =   P S [ " S i g n a l " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   { / /   m o d u l e   S i g n a l . D O M  
  
     e x p o r t s . k e y P r e s s e d P   =  
         f u n c t i o n   k e y P r e s s e d P ( c o n s t a n t )   {  
             r e t u r n   f u n c t i o n ( k e y C o d e )   {  
                 r e t u r n   f u n c t i o n ( )   {  
                     v a r   o u t   =   c o n s t a n t ( f a l s e ) ;  
                     w i n d o w . a d d E v e n t L i s t e n e r ( " k e y d o w n " ,   f u n c t i o n ( e )   {  
                         i f   ( e . k e y C o d e   = = =   k e y C o d e )   o u t . s e t ( t r u e ) ;  
                     } ) ;  
                     w i n d o w . a d d E v e n t L i s t e n e r ( " k e y u p " ,   f u n c t i o n ( e )   {  
                         i f   ( e . k e y C o d e   = = =   k e y C o d e )   o u t . s e t ( f a l s e ) ;  
                     } ) ;  
                     r e t u r n   o u t ;  
                 } ;  
             } ;  
         } ;  
 } ) ( P S [ " S i g n a l . D O M " ]   =   P S [ " S i g n a l . D O M " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   { / /   m o d u l e   S i g n a l . T i m e  
  
     f u n c t i o n   n o w ( )   {  
         v a r   p e r f   =   t y p e o f   p e r f o r m a n c e   ! = =   ' u n d e f i n e d '   ?   p e r f o r m a n c e   :   n u l l ,  
                 p r o c   =   t y p e o f   p r o c e s s   ! = =   ' u n d e f i n e d '   ?   p r o c e s s   :   n u l l ;  
         r e t u r n   (  
             p e r f   & &   ( p e r f . n o w   | |   p e r f . w e b k i t N o w   | |   p e r f . m s N o w   | |   p e r f . o N o w   | |   p e r f . m o z N o w )   | |  
             ( p r o c   & &   p r o c . h r t i m e   & &   f u n c t i o n ( )   {  
                 v a r   t   =   p r o c . h r t i m e ( ) ;  
                 r e t u r n   ( t [ 0 ]   *   1 e 9   +   t [ 1 ] )   /   1 e 6 ;  
             } )   | |  
             D a t e . n o w  
         ) . c a l l ( p e r f ) ;  
     } ;  
  
     e x p o r t s . n o w   =   n o w ;  
  
     e x p o r t s . e v e r y P   =   f u n c t i o n   e v e r y P ( c o n s t a n t )   {  
         r e t u r n   f u n c t i o n ( t )   {  
             v a r   o u t   =   c o n s t a n t ( n o w ( ) ) ;  
             s e t I n t e r v a l ( f u n c t i o n ( )   {  
                 o u t . s e t ( n o w ( ) ) ;  
             } ,   t ) ;  
             r e t u r n   o u t ;  
         } ;  
     } ;  
 } ) ( P S [ " S i g n a l . T i m e " ]   =   P S [ " S i g n a l . T i m e " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " S i g n a l . T i m e " ] ;  
     v a r   D a t a _ E q   =   P S [ " D a t a . E q " ] ;  
     v a r   D a t a _ F u n c t i o n   =   P S [ " D a t a . F u n c t i o n " ] ;  
     v a r   E f f e c t   =   P S [ " E f f e c t " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;  
     v a r   S i g n a l   =   P S [ " S i g n a l " ] ;                                        
     v a r   s e c o n d   =   1 0 0 0 . 0 ;      
     v a r   e v e r y   =   $ f o r e i g n . e v e r y P ( S i g n a l . c o n s t a n t ) ;  
     e x p o r t s [ " e v e r y " ]   =   e v e r y ;  
     e x p o r t s [ " s e c o n d " ]   =   s e c o n d ;  
 } ) ( P S [ " S i g n a l . T i m e " ]   =   P S [ " S i g n a l . T i m e " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " S i g n a l . D O M " ] ;  
     v a r   C o n t r o l _ A p p l i c a t i v e   =   P S [ " C o n t r o l . A p p l i c a t i v e " ] ;  
     v a r   C o n t r o l _ B i n d   =   P S [ " C o n t r o l . B i n d " ] ;  
     v a r   D a t a _ F u n c t i o n   =   P S [ " D a t a . F u n c t i o n " ] ;  
     v a r   E f f e c t   =   P S [ " E f f e c t " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;  
     v a r   S i g n a l   =   P S [ " S i g n a l " ] ;  
     v a r   S i g n a l _ T i m e   =   P S [ " S i g n a l . T i m e " ] ;  
     v a r   k e y P r e s s e d   =   $ f o r e i g n . k e y P r e s s e d P ( S i g n a l . c o n s t a n t ) ;  
     e x p o r t s [ " k e y P r e s s e d " ]   =   k e y P r e s s e d ;  
 } ) ( P S [ " S i g n a l . D O M " ]   =   P S [ " S i g n a l . D O M " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   $ f o r e i g n   =   P S [ " T e s t . Q u i c k C h e c k . G e n " ] ;  
     v a r   C o n t r o l _ A l t   =   P S [ " C o n t r o l . A l t " ] ;  
     v a r   C o n t r o l _ A p p l i c a t i v e   =   P S [ " C o n t r o l . A p p l i c a t i v e " ] ;  
     v a r   C o n t r o l _ A p p l y   =   P S [ " C o n t r o l . A p p l y " ] ;  
     v a r   C o n t r o l _ B i n d   =   P S [ " C o n t r o l . B i n d " ] ;  
     v a r   C o n t r o l _ L a z y   =   P S [ " C o n t r o l . L a z y " ] ;  
     v a r   C o n t r o l _ M o n a d   =   P S [ " C o n t r o l . M o n a d " ] ;  
     v a r   C o n t r o l _ M o n a d _ G e n _ C l a s s   =   P S [ " C o n t r o l . M o n a d . G e n . C l a s s " ] ;  
     v a r   C o n t r o l _ M o n a d _ R e c _ C l a s s   =   P S [ " C o n t r o l . M o n a d . R e c . C l a s s " ] ;  
     v a r   C o n t r o l _ M o n a d _ S t a t e   =   P S [ " C o n t r o l . M o n a d . S t a t e " ] ;  
     v a r   C o n t r o l _ M o n a d _ S t a t e _ C l a s s   =   P S [ " C o n t r o l . M o n a d . S t a t e . C l a s s " ] ;  
     v a r   C o n t r o l _ M o n a d _ S t a t e _ T r a n s   =   P S [ " C o n t r o l . M o n a d . S t a t e . T r a n s " ] ;  
     v a r   C o n t r o l _ S e m i g r o u p o i d   =   P S [ " C o n t r o l . S e m i g r o u p o i d " ] ;  
     v a r   D a t a _ A r r a y   =   P S [ " D a t a . A r r a y " ] ;  
     v a r   D a t a _ B o u n d e d   =   P S [ " D a t a . B o u n d e d " ] ;  
     v a r   D a t a _ E n u m   =   P S [ " D a t a . E n u m " ] ;  
     v a r   D a t a _ E q   =   P S [ " D a t a . E q " ] ;  
     v a r   D a t a _ E u c l i d e a n R i n g   =   P S [ " D a t a . E u c l i d e a n R i n g " ] ;  
     v a r   D a t a _ F o l d a b l e   =   P S [ " D a t a . F o l d a b l e " ] ;  
     v a r   D a t a _ F u n c t i o n   =   P S [ " D a t a . F u n c t i o n " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ I d e n t i t y   =   P S [ " D a t a . I d e n t i t y " ] ;  
     v a r   D a t a _ I n t   =   P S [ " D a t a . I n t " ] ;  
     v a r   D a t a _ L i s t   =   P S [ " D a t a . L i s t " ] ;  
     v a r   D a t a _ L i s t _ T y p e s   =   P S [ " D a t a . L i s t . T y p e s " ] ;  
     v a r   D a t a _ M a y b e   =   P S [ " D a t a . M a y b e " ] ;  
     v a r   D a t a _ M o n o i d _ A d d i t i v e   =   P S [ " D a t a . M o n o i d . A d d i t i v e " ] ;  
     v a r   D a t a _ N e w t y p e   =   P S [ " D a t a . N e w t y p e " ] ;  
     v a r   D a t a _ N o n E m p t y   =   P S [ " D a t a . N o n E m p t y " ] ;  
     v a r   D a t a _ O r d   =   P S [ " D a t a . O r d " ] ;  
     v a r   D a t a _ R i n g   =   P S [ " D a t a . R i n g " ] ;  
     v a r   D a t a _ S e m i r i n g   =   P S [ " D a t a . S e m i r i n g " ] ;  
     v a r   D a t a _ T u p l e   =   P S [ " D a t a . T u p l e " ] ;  
     v a r   D a t a _ U n f o l d a b l e   =   P S [ " D a t a . U n f o l d a b l e " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;  
     v a r   E f f e c t   =   P S [ " E f f e c t " ] ;  
     v a r   $ $ M a t h   =   P S [ " M a t h " ] ;  
     v a r   P a r t i a l _ U n s a f e   =   P S [ " P a r t i a l . U n s a f e " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;  
     v a r   R a n d o m _ L C G   =   P S [ " R a n d o m . L C G " ] ;                                    
     v a r   G e n   =   f u n c t i o n   ( x )   {  
             r e t u r n   x ;  
     } ;  
     v a r   u n G e n   =   f u n c t i o n   ( v )   {  
             r e t u r n   v ;  
     } ;  
     v a r   r u n G e n   =   f u n c t i o n   ( $ 7 8 )   {  
             r e t u r n   C o n t r o l _ M o n a d _ S t a t e . r u n S t a t e ( u n G e n ( $ 7 8 ) ) ;  
     } ;                                                                                                                                                                                                        
     v a r   m o n a d G e n   =   C o n t r o l _ M o n a d _ S t a t e _ T r a n s . m o n a d S t a t e T ( D a t a _ I d e n t i t y . m o n a d I d e n t i t y ) ;  
     v a r   l c g S t e p   =   ( f u n c t i o n   ( )   {  
             v a r   f   =   f u n c t i o n   ( s )   {  
                     r e t u r n   n e w   D a t a _ T u p l e . T u p l e ( R a n d o m _ L C G . u n S e e d ( s . n e w S e e d ) ,   ( f u n c t i o n   ( )   {  
                             v a r   $ 4 3   =   { } ;  
                             f o r   ( v a r   $ 4 4   i n   s )   {  
                                     i f   ( { } . h a s O w n P r o p e r t y . c a l l ( s ,   $ 4 4 ) )   {  
                                             $ 4 3 [ $ 4 4 ]   =   s [ $ 4 4 ] ;  
                                     } ;  
                             } ;  
                             $ 4 3 . n e w S e e d   =   R a n d o m _ L C G . l c g N e x t ( s . n e w S e e d ) ;  
                             r e t u r n   $ 4 3 ;  
                     } ) ( ) ) ;  
             } ;  
             r e t u r n   G e n ( C o n t r o l _ M o n a d _ S t a t e _ C l a s s . s t a t e ( C o n t r o l _ M o n a d _ S t a t e _ T r a n s . m o n a d S t a t e S t a t e T ( D a t a _ I d e n t i t y . m o n a d I d e n t i t y ) ) ( f ) ) ;  
     } ) ( ) ;                                                                                              
     v a r   f u n c t o r G e n   =   C o n t r o l _ M o n a d _ S t a t e _ T r a n s . f u n c t o r S t a t e T ( D a t a _ I d e n t i t y . f u n c t o r I d e n t i t y ) ;  
     v a r   e v a l G e n   =   f u n c t i o n   ( $ 7 9 )   {  
             r e t u r n   C o n t r o l _ M o n a d _ S t a t e . e v a l S t a t e ( u n G e n ( $ 7 9 ) ) ;  
     } ;  
     v a r   b i n d G e n   =   C o n t r o l _ M o n a d _ S t a t e _ T r a n s . b i n d S t a t e T ( D a t a _ I d e n t i t y . m o n a d I d e n t i t y ) ;  
     v a r   a p p l y G e n   =   C o n t r o l _ M o n a d _ S t a t e _ T r a n s . a p p l y S t a t e T ( D a t a _ I d e n t i t y . m o n a d I d e n t i t y ) ;  
     v a r   c h o o s e I n t $ p r i m e   =   f u n c t i o n   ( a )   {  
             r e t u r n   f u n c t i o n   ( b )   {  
                     v a r   n u m B   =   D a t a _ I n t . t o N u m b e r ( b ) ;  
                     v a r   n u m A   =   D a t a _ I n t . t o N u m b e r ( a ) ;  
                     v a r   c l a m p   =   f u n c t i o n   ( x )   {  
                             r e t u r n   n u m A   +   $ $ M a t h . r e m a i n d e r ( x ) ( ( n u m B   -   n u m A )   +   1 ) ;  
                     } ;  
                     v a r   c h o o s e 3 1 B i t P o s N u m b e r   =   D a t a _ F u n c t o r . m a p ( f u n c t o r G e n ) ( D a t a _ I n t . t o N u m b e r ) ( l c g S t e p ) ;  
                     v a r   c h o o s e 3 2 B i t P o s N u m b e r   =   C o n t r o l _ A p p l y . a p p l y ( a p p l y G e n ) ( D a t a _ F u n c t o r . m a p ( f u n c t o r G e n ) ( D a t a _ S e m i r i n g . a d d ( D a t a _ S e m i r i n g . s e m i r i n g N u m b e r ) ) ( c h o o s e 3 1 B i t P o s N u m b e r ) ) ( D a t a _ F u n c t o r . m a p ( f u n c t o r G e n ) ( D a t a _ S e m i r i n g . m u l ( D a t a _ S e m i r i n g . s e m i r i n g N u m b e r ) ( 2 . 0 ) ) ( c h o o s e 3 1 B i t P o s N u m b e r ) ) ;  
                     r e t u r n   D a t a _ F u n c t o r . m a p ( f u n c t o r G e n ) ( f u n c t i o n   ( $ 8 2 )   {  
                             r e t u r n   D a t a _ I n t . f l o o r ( c l a m p ( $ 8 2 ) ) ;  
                     } ) ( c h o o s e 3 2 B i t P o s N u m b e r ) ;  
             } ;  
     } ;  
     v a r   c h o o s e I n t   =   f u n c t i o n   ( a )   {  
             r e t u r n   f u n c t i o n   ( b )   {  
                     v a r   $ 5 9   =   a   < =   b ;  
                     i f   ( $ 5 9 )   {  
                             r e t u r n   c h o o s e I n t $ p r i m e ( a ) ( b ) ;  
                     } ;  
                     r e t u r n   c h o o s e I n t $ p r i m e ( b ) ( a ) ;  
             } ;  
     } ;  
     v a r   a p p l i c a t i v e G e n   =   C o n t r o l _ M o n a d _ S t a t e _ T r a n s . a p p l i c a t i v e S t a t e T ( D a t a _ I d e n t i t y . m o n a d I d e n t i t y ) ;  
     e x p o r t s [ " u n G e n " ]   =   u n G e n ;  
     e x p o r t s [ " c h o o s e I n t " ]   =   c h o o s e I n t ;  
     e x p o r t s [ " r u n G e n " ]   =   r u n G e n ;  
     e x p o r t s [ " e v a l G e n " ]   =   e v a l G e n ;  
     e x p o r t s [ " f u n c t o r G e n " ]   =   f u n c t o r G e n ;  
     e x p o r t s [ " a p p l y G e n " ]   =   a p p l y G e n ;  
     e x p o r t s [ " a p p l i c a t i v e G e n " ]   =   a p p l i c a t i v e G e n ;  
     e x p o r t s [ " b i n d G e n " ]   =   b i n d G e n ;  
     e x p o r t s [ " m o n a d G e n " ]   =   m o n a d G e n ;  
 } ) ( P S [ " T e s t . Q u i c k C h e c k . G e n " ]   =   P S [ " T e s t . Q u i c k C h e c k . G e n " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   C o n t r o l _ A p p l i c a t i v e   =   P S [ " C o n t r o l . A p p l i c a t i v e " ] ;  
     v a r   C o n t r o l _ B i n d   =   P S [ " C o n t r o l . B i n d " ] ;  
     v a r   C o n t r o l _ M o n a d _ S t a t e   =   P S [ " C o n t r o l . M o n a d . S t a t e " ] ;  
     v a r   D a t a _ F u n c t i o n   =   P S [ " D a t a . F u n c t i o n " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ T u p l e   =   P S [ " D a t a . T u p l e " ] ;  
     v a r   E f f e c t   =   P S [ " E f f e c t " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;  
     v a r   R a n d o m _ L C G   =   P S [ " R a n d o m . L C G " ] ;  
     v a r   S i g n a l   =   P S [ " S i g n a l " ] ;  
     v a r   T e s t _ Q u i c k C h e c k   =   P S [ " T e s t . Q u i c k C h e c k " ] ;  
     v a r   T e s t _ Q u i c k C h e c k _ G e n   =   P S [ " T e s t . Q u i c k C h e c k . G e n " ] ;                                    
     v a r   f o l d p M   =   f u n c t i o n   ( r u n )   {  
             r e t u r n   f u n c t i o n   ( s t $ p r i m e )   {  
                     r e t u r n   f u n c t i o n   ( f )   {  
                             r e t u r n   f u n c t i o n   ( s t )   {  
                                     r e t u r n   f u n c t i o n   ( s i g )   {  
                                             r e t u r n   D a t a _ F u n c t o r . m a p ( S i g n a l . f u n c t o r S i g n a l ) ( D a t a _ T u p l e . f s t ) ( S i g n a l . f o l d p ( f u n c t i o n   ( x a )   {  
                                                     r e t u r n   f u n c t i o n   ( v )   {  
                                                             r e t u r n   D a t a _ T u p l e . u n c u r r y ( r u n ) ( n e w   D a t a _ T u p l e . T u p l e ( f ( x a ) ( v . v a l u e 0 ) ,   v . v a l u e 1 ) ) ;  
                                                     } ;  
                                             } ) ( n e w   D a t a _ T u p l e . T u p l e ( s t ,   s t $ p r i m e ) ) ( s i g ) ) ;  
                                     } ;  
                             } ;  
                     } ;  
             } ;  
     } ;  
     v a r   f o l d p R $ p r i m e   =   f o l d p M ( T e s t _ Q u i c k C h e c k _ G e n . r u n G e n ) ;  
     v a r   f o l d p R   =   f u n c t i o n   ( f )   {  
             r e t u r n   f u n c t i o n   ( s t )   {  
                     r e t u r n   f u n c t i o n   ( s i g )   {  
                             r e t u r n   f u n c t i o n   _ _ d o ( )   {  
                                     v a r   v   =   R a n d o m _ L C G . r a n d o m S e e d ( ) ;  
                                     r e t u r n   f o l d p R $ p r i m e ( {  
                                             n e w S e e d :   v ,  
                                             s i z e :   5 3 6 8 7 0 9 1 1  
                                     } ) ( f ) ( s t ) ( s i g ) ;  
                             } ;  
                     } ;  
             } ;  
     } ;  
     v a r   e v a l G e n D   =   f u n c t i o n   ( g )   {  
             r e t u r n   f u n c t i o n   _ _ d o ( )   {  
                     v a r   v   =   R a n d o m _ L C G . r a n d o m S e e d ( ) ;  
                     r e t u r n   T e s t _ Q u i c k C h e c k _ G e n . e v a l G e n ( g ) ( {  
                             n e w S e e d :   v ,  
                             s i z e :   5 3 6 8 7 0 9 1 1  
                     } ) ;  
             } ;  
     } ;  
     e x p o r t s [ " f o l d p M " ]   =   f o l d p M ;  
     e x p o r t s [ " f o l d p R " ]   =   f o l d p R ;  
     e x p o r t s [ " e v a l G e n D " ]   =   e v a l G e n D ;  
 } ) ( P S [ " S i g n a l M " ]   =   P S [ " S i g n a l M " ]   | |   { } ) ;  
 ( f u n c t i o n ( e x p o r t s )   {  
     / /   G e n e r a t e d   b y   p u r s   v e r s i o n   0 . 1 2 . 1  
     " u s e   s t r i c t " ;  
     v a r   C o n t r o l _ A p p l i c a t i v e   =   P S [ " C o n t r o l . A p p l i c a t i v e " ] ;  
     v a r   C o n t r o l _ A p p l y   =   P S [ " C o n t r o l . A p p l y " ] ;  
     v a r   C o n t r o l _ B i n d   =   P S [ " C o n t r o l . B i n d " ] ;  
     v a r   D a t a _ A r r a y   =   P S [ " D a t a . A r r a y " ] ;  
     v a r   D a t a _ A r r a y _ P a r t i a l   =   P S [ " D a t a . A r r a y . P a r t i a l " ] ;  
     v a r   D a t a _ E q   =   P S [ " D a t a . E q " ] ;  
     v a r   D a t a _ E u c l i d e a n R i n g   =   P S [ " D a t a . E u c l i d e a n R i n g " ] ;  
     v a r   D a t a _ F o l d a b l e   =   P S [ " D a t a . F o l d a b l e " ] ;  
     v a r   D a t a _ F u n c t i o n   =   P S [ " D a t a . F u n c t i o n " ] ;  
     v a r   D a t a _ F u n c t o r   =   P S [ " D a t a . F u n c t o r " ] ;  
     v a r   D a t a _ G e n e r i c _ R e p   =   P S [ " D a t a . G e n e r i c . R e p " ] ;  
     v a r   D a t a _ H e y t i n g A l g e b r a   =   P S [ " D a t a . H e y t i n g A l g e b r a " ] ;  
     v a r   D a t a _ I n t   =   P S [ " D a t a . I n t " ] ;  
     v a r   D a t a _ M a y b e   =   P S [ " D a t a . M a y b e " ] ;  
     v a r   D a t a _ O r d   =   P S [ " D a t a . O r d " ] ;  
     v a r   D a t a _ R i n g   =   P S [ " D a t a . R i n g " ] ;  
     v a r   D a t a _ S e m i r i n g   =   P S [ " D a t a . S e m i r i n g " ] ;  
     v a r   D a t a _ T r a v e r s a b l e   =   P S [ " D a t a . T r a v e r s a b l e " ] ;  
     v a r   D a t a _ T u p l e   =   P S [ " D a t a . T u p l e " ] ;  
     v a r   D a t a _ U n i t   =   P S [ " D a t a . U n i t " ] ;  
     v a r   E f f e c t   =   P S [ " E f f e c t " ] ;  
     v a r   E f f e c t _ C o n s o l e   =   P S [ " E f f e c t . C o n s o l e " ] ;  
     v a r   E f f e c t _ R a n d o m   =   P S [ " E f f e c t . R a n d o m " ] ;  
     v a r   G r a p h i c s _ C a n v a s   =   P S [ " G r a p h i c s . C a n v a s " ] ;  
     v a r   P a r t i a l _ U n s a f e   =   P S [ " P a r t i a l . U n s a f e " ] ;  
     v a r   P r e l u d e   =   P S [ " P r e l u d e " ] ;  
     v a r   S i g n a l   =   P S [ " S i g n a l " ] ;  
     v a r   S i g n a l _ D O M   =   P S [ " S i g n a l . D O M " ] ;  
     v a r   S i g n a l _ T i m e   =   P S [ " S i g n a l . T i m e " ] ;  
     v a r   S i g n a l M   =   P S [ " S i g n a l M " ] ;  
     v a r   T e s t _ Q u i c k C h e c k _ G e n   =   P S [ " T e s t . Q u i c k C h e c k . G e n " ] ;                                    
     v a r   I n p u t 1   =   ( f u n c t i o n   ( )   {  
             f u n c t i o n   I n p u t 1 ( )   {  
  
             } ;  
             I n p u t 1 . v a l u e   =   n e w   I n p u t 1 ( ) ;  
             r e t u r n   I n p u t 1 ;  
     } ) ( ) ;  
     v a r   I n p u t 2   =   ( f u n c t i o n   ( )   {  
             f u n c t i o n   I n p u t 2 ( v a l u e 0 )   {  
                     t h i s . v a l u e 0   =   v a l u e 0 ;  
             } ;  
             I n p u t 2 . c r e a t e   =   f u n c t i o n   ( v a l u e 0 )   {  
                     r e t u r n   n e w   I n p u t 2 ( v a l u e 0 ) ;  
             } ;  
             r e t u r n   I n p u t 2 ;  
     } ) ( ) ;  
     v a r   W a i t i n g   =   ( f u n c t i o n   ( )   {  
             f u n c t i o n   W a i t i n g ( )   {  
  
             } ;  
             W a i t i n g . v a l u e   =   n e w   W a i t i n g ( ) ;  
             r e t u r n   W a i t i n g ;  
     } ) ( ) ;  
     v a r   I n g a m e   =   ( f u n c t i o n   ( )   {  
             f u n c t i o n   I n g a m e ( v a l u e 0 )   {  
                     t h i s . v a l u e 0   =   v a l u e 0 ;  
             } ;  
             I n g a m e . c r e a t e   =   f u n c t i o n   ( v a l u e 0 )   {  
                     r e t u r n   n e w   I n g a m e ( v a l u e 0 ) ;  
             } ;  
             r e t u r n   I n g a m e ;  
     } ) ( ) ;  
     v a r   y e l l o w   =   " # F F F F 0 0 " ;  
     v a r   w h i t e   =   " # F F F F F F " ;  
     v a r   u n t i l M   =   f u n c t i o n   ( d i c t M o n a d )   {  
             r e t u r n   f u n c t i o n   ( c o n d )   {  
                     r e t u r n   f u n c t i o n   ( m a )   {  
                             r e t u r n   C o n t r o l _ B i n d . b i n d ( d i c t M o n a d . B i n d 1 ( ) ) ( m a ) ( f u n c t i o n   ( v )   {  
                                     v a r   $ 3 7   =   c o n d ( v ) ;  
                                     i f   ( $ 3 7 )   {  
                                             r e t u r n   C o n t r o l _ A p p l i c a t i v e . p u r e ( d i c t M o n a d . A p p l i c a t i v e 0 ( ) ) ( v ) ;  
                                     } ;  
                                     r e t u r n   u n t i l M ( d i c t M o n a d ) ( c o n d ) ( m a ) ;  
                             } ) ;  
                     } ;  
             } ;  
     } ;  
     v a r   s t a r t 2   =   W a i t i n g . v a l u e ;  
     v a r   s q u a r e   =   f u n c t i o n   ( s i z e )   {  
             r e t u r n   f u n c t i o n   ( x )   {  
                     r e t u r n   f u n c t i o n   ( y )   {  
                             r e t u r n   {  
                                     x :   D a t a _ I n t . t o N u m b e r ( s i z e   *   x   |   0 ) ,  
                                     y :   D a t a _ I n t . t o N u m b e r ( s i z e   *   y   |   0 ) ,  
                                     w i d t h :   D a t a _ I n t . t o N u m b e r ( s i z e ) ,  
                                     h e i g h t :   D a t a _ I n t . t o N u m b e r ( s i z e )  
                             } ;  
                     } ;  
             } ;  
     } ;  
     v a r   s n a k e C o l o r   =   w h i t e ;  
     v a r   r e d   =   " # F F 0 0 0 0 " ;  
     v a r   r a n d o m P o i n t   =   f u n c t i o n   ( x m a x )   {  
             r e t u r n   f u n c t i o n   ( y m a x )   {  
                     r e t u r n   C o n t r o l _ B i n d . b i n d ( T e s t _ Q u i c k C h e c k _ G e n . b i n d G e n ) ( T e s t _ Q u i c k C h e c k _ G e n . c h o o s e I n t ( 1 ) ( x m a x ) ) ( f u n c t i o n   ( v )   {  
                             r e t u r n   C o n t r o l _ B i n d . b i n d ( T e s t _ Q u i c k C h e c k _ G e n . b i n d G e n ) ( T e s t _ Q u i c k C h e c k _ G e n . c h o o s e I n t ( 1 ) ( y m a x ) ) ( f u n c t i o n   ( v 1 )   {  
                                     r e t u r n   C o n t r o l _ A p p l i c a t i v e . p u r e ( T e s t _ Q u i c k C h e c k _ G e n . a p p l i c a t i v e G e n ) ( n e w   D a t a _ T u p l e . T u p l e ( v ,   v 1 ) ) ;  
                             } ) ;  
                     } ) ;  
             } ;  
     } ;  
     v a r   p u r p l e   =   " 8 0 0 0 8 0 " ;  
     v a r   m o u s e C o l o r   =   r e d ;  
     v a r   i n i t $ p r i m e   =   C o n t r o l _ B i n d . b i n d ( T e s t _ Q u i c k C h e c k _ G e n . b i n d G e n ) ( u n t i l M ( T e s t _ Q u i c k C h e c k _ G e n . m o n a d G e n ) ( f u n c t i o n   ( p )   {  
             r e t u r n   D a t a _ E q . n o t E q ( D a t a _ T u p l e . e q T u p l e ( D a t a _ E q . e q I n t ) ( D a t a _ E q . e q I n t ) ) ( p ) ( n e w   D a t a _ T u p l e . T u p l e ( 1 ,   1 ) ) ;  
     } ) ( r a n d o m P o i n t ( 2 5 ) ( 2 5 ) ) ) ( f u n c t i o n   ( v )   {  
             r e t u r n   C o n t r o l _ A p p l i c a t i v e . p u r e ( T e s t _ Q u i c k C h e c k _ G e n . a p p l i c a t i v e G e n ) ( {  
                     x d :   2 5 ,  
                     y d :   2 5 ,  
                     s i z e :   1 0 ,  
                     m o u s e :   v ,  
                     s n a k e :   [   n e w   D a t a _ T u p l e . T u p l e ( 1 ,   1 )   ] ,  
                     d i r :   n e w   D a t a _ T u p l e . T u p l e ( 1 ,   0 ) ,  
                     a l i v e :   t r u e ,  
                     p r e v :   D a t a _ M a y b e . N o t h i n g . v a l u e  
             } ) ;  
     } ) ;  
     v a r   i n i t   =   S i g n a l M . e v a l G e n D ( i n i t $ p r i m e ) ;  
     v a r   i n B o u n d s   =   f u n c t i o n   ( v )   {  
             r e t u r n   f u n c t i o n   ( m )   {  
                     r e t u r n   v . v a l u e 0   >   0   & &   ( v . v a l u e 1   >   0   & &   ( v . v a l u e 0   < =   m . x d   & &   v . v a l u e 1   < =   m . y d ) ) ;  
             } ;  
     } ;  
     v a r   i f s   =   f u n c t i o n   ( $ c o p y _ l i )   {  
             r e t u r n   f u n c t i o n   ( $ c o p y _ z )   {  
                     v a r   $ t c o _ v a r _ l i   =   $ c o p y _ l i ;  
                     v a r   $ t c o _ d o n e   =   f a l s e ;  
                     v a r   $ t c o _ r e s u l t ;  
                     f u n c t i o n   $ t c o _ l o o p ( l i ,   z )   {  
                             v a r   v   =   D a t a _ A r r a y . u n c o n s ( l i ) ;  
                             i f   ( v   i n s t a n c e o f   D a t a _ M a y b e . J u s t )   {  
                                     i f   ( v . v a l u e 0 . h e a d . v a l u e 0 )   {  
                                             $ t c o _ d o n e   =   t r u e ;  
                                             r e t u r n   v . v a l u e 0 . h e a d . v a l u e 1 ;  
                                     } ;  
                                     $ t c o _ v a r _ l i   =   v . v a l u e 0 . t a i l ;  
                                     $ c o p y _ z   =   z ;  
                                     r e t u r n ;  
                             } ;  
                             i f   ( v   i n s t a n c e o f   D a t a _ M a y b e . N o t h i n g )   {  
                                     $ t c o _ d o n e   =   t r u e ;  
                                     r e t u r n   z ;  
                             } ;  
                             t h r o w   n e w   E r r o r ( " F a i l e d   p a t t e r n   m a t c h   a t   S n a k e S   l i n e   1 7 7 ,   c o l u m n   1 2   -   l i n e   1 7 9 ,   c o l u m n   3 4 :   "   +   [   v . c o n s t r u c t o r . n a m e   ] ) ;  
                     } ;  
                     w h i l e   ( ! $ t c o _ d o n e )   {  
                             $ t c o _ r e s u l t   =   $ t c o _ l o o p ( $ t c o _ v a r _ l i ,   $ c o p y _ z ) ;  
                     } ;  
                     r e t u r n   $ t c o _ r e s u l t ;  
             } ;  
     } ;  
     v a r   i n p u t D i r   =   ( f u n c t i o n   ( )   {  
             v a r   f   =   f u n c t i o n   ( l )   {  
                     r e t u r n   f u n c t i o n   ( u )   {  
                             r e t u r n   f u n c t i o n   ( d )   {  
                                     r e t u r n   f u n c t i o n   ( r )   {  
                                             r e t u r n   i f s ( [   D a t a _ T u p l e . T u p l e . c r e a t e ( l ) ( n e w   D a t a _ T u p l e . T u p l e ( - 1   |   0 ,   0 ) ) ,   D a t a _ T u p l e . T u p l e . c r e a t e ( u ) ( n e w   D a t a _ T u p l e . T u p l e ( 0 ,   - 1   |   0 ) ) ,   D a t a _ T u p l e . T u p l e . c r e a t e ( d ) ( n e w   D a t a _ T u p l e . T u p l e ( 0 ,   1 ) ) ,   D a t a _ T u p l e . T u p l e . c r e a t e ( r ) ( n e w   D a t a _ T u p l e . T u p l e ( 1 ,   0 ) )   ] ) ( n e w   D a t a _ T u p l e . T u p l e ( 0 ,   0 ) ) ;  
                                     } ;  
                             } ;  
                     } ;  
             } ;  
             r e t u r n   C o n t r o l _ A p p l y . a p p l y ( E f f e c t . a p p l y E f f e c t ) ( C o n t r o l _ A p p l y . a p p l y ( E f f e c t . a p p l y E f f e c t ) ( C o n t r o l _ A p p l y . a p p l y ( E f f e c t . a p p l y E f f e c t ) ( D a t a _ F u n c t o r . m a p ( E f f e c t . f u n c t o r E f f e c t ) ( S i g n a l . m a p 4 ( f ) ) ( S i g n a l _ D O M . k e y P r e s s e d ( 3 7 ) ) ) ( S i g n a l _ D O M . k e y P r e s s e d ( 3 8 ) ) ) ( S i g n a l _ D O M . k e y P r e s s e d ( 4 0 ) ) ) ( S i g n a l _ D O M . k e y P r e s s e d ( 3 9 ) ) ;  
     } ) ( ) ;  
     v a r   g r e e n   =   " # 0 0 8 0 0 0 " ;  
     v a r   w a l l C o l o r   =   g r e e n ;  
     v a r   f p s   =   f u n c t i o n   ( x )   {  
             r e t u r n   S i g n a l _ T i m e . e v e r y ( S i g n a l _ T i m e . s e c o n d   /   x ) ;  
     } ;  
     v a r   i n p u t   =   D a t a _ F u n c t o r . m a p ( E f f e c t . f u n c t o r E f f e c t ) ( S i g n a l . s a m p l e O n ( f p s ( 2 0 . 0 ) ) ) ( i n p u t D i r ) ;  
     v a r   i n p u t 2   =   f u n c t i o n   _ _ d o ( )   {  
             v a r   v   =   S i g n a l _ D O M . k e y P r e s s e d ( 3 2 ) ( ) ;  
             v a r   v 1   =   i n p u t ( ) ;  
             r e t u r n   S i g n a l . m e r g e ( S i g n a l . f i l t e r M a p ( f u n c t i o n   ( x )   {  
                     i f   ( x )   {  
                             r e t u r n   n e w   D a t a _ M a y b e . J u s t ( I n p u t 1 . v a l u e ) ;  
                     } ;  
                     r e t u r n   D a t a _ M a y b e . N o t h i n g . v a l u e ;  
             } ) ( I n p u t 1 . v a l u e ) ( v ) ) ( D a t a _ F u n c t o r . m a p ( S i g n a l . f u n c t o r S i g n a l ) ( I n p u t 2 . c r e a t e ) ( v 1 ) ) ;  
     } ;  
     v a r   c o l o r S q u a r e   =   f u n c t i o n   ( s i z e )   {  
             r e t u r n   f u n c t i o n   ( v )   {  
                     r e t u r n   f u n c t i o n   ( c o l o r )   {  
                             r e t u r n   f u n c t i o n   ( c t x )   {  
                                     r e t u r n   f u n c t i o n   _ _ d o ( )   {  
                                             G r a p h i c s _ C a n v a s . s e t F i l l S t y l e ( c t x ) ( c o l o r ) ( ) ;  
                                             r e t u r n   G r a p h i c s _ C a n v a s . f i l l P a t h ( c t x ) ( G r a p h i c s _ C a n v a s . r e c t ( c t x ) ( s q u a r e ( s i z e ) ( v . v a l u e 0 ) ( v . v a l u e 1 ) ) ) ( ) ;  
                                     } ;  
                             } ;  
                     } ;  
             } ;  
     } ;  
     v a r   b o d y   =   f u n c t i o n   ( l i )   {  
             r e t u r n   D a t a _ A r r a y . s l i c e ( 0 ) ( D a t a _ A r r a y . l e n g t h ( l i )   -   1   |   0 ) ( l i ) ;  
     } ;  
     v a r   c h e c k O K   =   f u n c t i o n   ( p t )   {  
             r e t u r n   f u n c t i o n   ( m )   {  
                     r e t u r n   m . a l i v e   & &   ( i n B o u n d s ( p t ) ( m )   & &   ! D a t a _ F o l d a b l e . e l e m ( D a t a _ F o l d a b l e . f o l d a b l e A r r a y ) ( D a t a _ T u p l e . e q T u p l e ( D a t a _ E q . e q I n t ) ( D a t a _ E q . e q I n t ) ) ( p t ) ( b o d y ( m . s n a k e ) ) ) ;  
             } ;  
     } ;  
     v a r   s t e p   =   f u n c t i o n   ( d i c t P a r t i a l )   {  
             r e t u r n   f u n c t i o n   ( d i r )   {  
                     r e t u r n   f u n c t i o n   ( m )   {  
                             v a r   d   =   ( f u n c t i o n   ( )   {  
                                     v a r   $ 6 1   =   D a t a _ E q . n o t E q ( D a t a _ T u p l e . e q T u p l e ( D a t a _ E q . e q I n t ) ( D a t a _ E q . e q I n t ) ) ( d i r ) ( n e w   D a t a _ T u p l e . T u p l e ( 0 ,   0 ) ) ;  
                                     i f   ( $ 6 1 )   {  
                                             r e t u r n   d i r ;  
                                     } ;  
                                     r e t u r n   m . d i r ;  
                             } ) ( ) ;  
                             v a r   h d   =   D a t a _ S e m i r i n g . a d d ( D a t a _ T u p l e . s e m i r i n g T u p l e ( D a t a _ S e m i r i n g . s e m i r i n g I n t ) ( D a t a _ S e m i r i n g . s e m i r i n g I n t ) ) ( D a t a _ A r r a y _ P a r t i a l . h e a d ( d i c t P a r t i a l ) ( m . s n a k e ) ) ( d ) ;  
                             v a r   $ 6 2   =   c h e c k O K ( h d ) ( m ) ;  
                             i f   ( $ 6 2 )   {  
                                     v a r   $ 6 3   =   D a t a _ E q . e q ( D a t a _ T u p l e . e q T u p l e ( D a t a _ E q . e q I n t ) ( D a t a _ E q . e q I n t ) ) ( h d ) ( m . m o u s e ) ;  
                                     i f   ( $ 6 3 )   {  
                                             r e t u r n   C o n t r o l _ B i n d . b i n d ( T e s t _ Q u i c k C h e c k _ G e n . b i n d G e n ) ( u n t i l M ( T e s t _ Q u i c k C h e c k _ G e n . m o n a d G e n ) ( f u n c t i o n   ( p t )   {  
                                                     r e t u r n   ! ( D a t a _ F o l d a b l e . e l e m ( D a t a _ F o l d a b l e . f o l d a b l e A r r a y ) ( D a t a _ T u p l e . e q T u p l e ( D a t a _ E q . e q I n t ) ( D a t a _ E q . e q I n t ) ) ( p t ) ( m . s n a k e )   | |   D a t a _ E q . e q ( D a t a _ T u p l e . e q T u p l e ( D a t a _ E q . e q I n t ) ( D a t a _ E q . e q I n t ) ) ( p t ) ( h d ) ) ;  
                                             } ) ( r a n d o m P o i n t ( m . x d ) ( m . y d ) ) ) ( f u n c t i o n   ( v )   {  
                                                     r e t u r n   C o n t r o l _ A p p l i c a t i v e . p u r e ( T e s t _ Q u i c k C h e c k _ G e n . a p p l i c a t i v e G e n ) ( {  
                                                             s n a k e :   D a t a _ A r r a y . c o n s ( h d ) ( m . s n a k e ) ,  
                                                             m o u s e :   v ,  
                                                             d i r :   d ,  
                                                             p r e v :   D a t a _ M a y b e . N o t h i n g . v a l u e ,  
                                                             a l i v e :   m . a l i v e ,  
                                                             s i z e :   m . s i z e ,  
                                                             x d :   m . x d ,  
                                                             y d :   m . y d  
                                                     } ) ;  
                                             } ) ;  
                                     } ;  
                                     r e t u r n   C o n t r o l _ A p p l i c a t i v e . p u r e ( T e s t _ Q u i c k C h e c k _ G e n . a p p l i c a t i v e G e n ) ( {  
                                             s n a k e :   D a t a _ A r r a y . c o n s ( h d ) ( b o d y ( m . s n a k e ) ) ,  
                                             d i r :   d ,  
                                             p r e v :   D a t a _ A r r a y . l a s t ( m . s n a k e ) ,  
                                             a l i v e :   m . a l i v e ,  
                                             m o u s e :   m . m o u s e ,  
                                             s i z e :   m . s i z e ,  
                                             x d :   m . x d ,  
                                             y d :   m . y d  
                                     } ) ;  
                             } ;  
                             r e t u r n   C o n t r o l _ A p p l i c a t i v e . p u r e ( T e s t _ Q u i c k C h e c k _ G e n . a p p l i c a t i v e G e n ) ( {  
                                     a l i v e :   f a l s e ,  
                                     p r e v :   D a t a _ M a y b e . N o t h i n g . v a l u e ,  
                                     d i r :   m . d i r ,  
                                     m o u s e :   m . m o u s e ,  
                                     s i z e :   m . s i z e ,  
                                     s n a k e :   m . s n a k e ,  
                                     x d :   m . x d ,  
                                     y d :   m . y d  
                             } ) ;  
                     } ;  
             } ;  
     } ;  
     v a r   s t e p 2   =   f u n c t i o n   ( d i c t P a r t i a l )   {  
             r e t u r n   f u n c t i o n   ( i n p )   {  
                     r e t u r n   f u n c t i o n   ( g )   {  
                             v a r   v   =   n e w   D a t a _ T u p l e . T u p l e ( i n p ,   g ) ;  
                             i f   ( v . v a l u e 0   i n s t a n c e o f   I n p u t 1   & &   v . v a l u e 1   i n s t a n c e o f   W a i t i n g )   {  
                                     r e t u r n   D a t a _ F u n c t o r . m a p ( T e s t _ Q u i c k C h e c k _ G e n . f u n c t o r G e n ) ( I n g a m e . c r e a t e ) ( i n i t $ p r i m e ) ;  
                             } ;  
                             i f   ( v . v a l u e 0   i n s t a n c e o f   I n p u t 2   & &   v . v a l u e 1   i n s t a n c e o f   I n g a m e )   {  
                                     r e t u r n   C o n t r o l _ B i n d . b i n d ( T e s t _ Q u i c k C h e c k _ G e n . b i n d G e n ) ( s t e p ( d i c t P a r t i a l ) ( v . v a l u e 0 . v a l u e 0 ) ( v . v a l u e 1 . v a l u e 0 ) ) ( f u n c t i o n   ( v 1 )   {  
                                             i f   ( v 1 . a l i v e )   {  
                                                     r e t u r n   C o n t r o l _ A p p l i c a t i v e . p u r e ( T e s t _ Q u i c k C h e c k _ G e n . a p p l i c a t i v e G e n ) ( n e w   I n g a m e ( v 1 ) ) ;  
                                             } ;  
                                             r e t u r n   C o n t r o l _ A p p l i c a t i v e . p u r e ( T e s t _ Q u i c k C h e c k _ G e n . a p p l i c a t i v e G e n ) ( W a i t i n g . v a l u e ) ;  
                                     } ) ;  
                             } ;  
                             r e t u r n   C o n t r o l _ A p p l i c a t i v e . p u r e ( T e s t _ Q u i c k C h e c k _ G e n . a p p l i c a t i v e G e n ) ( g ) ;  
                     } ;  
             } ;  
     } ;  
     v a r   b l u e   =   " # 0 0 0 0 F F " ;  
     v a r   b l a c k   =   " # 0 0 0 0 0 0 " ;  
     v a r   b i n d R   =   f u n c t i o n   ( d i c t M o n a d )   {  
             r e t u r n   f u n c t i o n   ( m x )   {  
                     r e t u r n   f u n c t i o n   ( m y )   {  
                             r e t u r n   C o n t r o l _ B i n d . b i n d ( d i c t M o n a d . B i n d 1 ( ) ) ( m x ) ( D a t a _ F u n c t i o n [ " c o n s t " ] ( m y ) ) ;  
                     } ;  
             } ;  
     } ;  
     v a r   b g C o l o r   =   b l a c k ;  
     v a r   r e n d e r   =   f u n c t i o n   ( d i c t P a r t i a l )   {  
             r e t u r n   f u n c t i o n   ( m )   {  
                     r e t u r n   D a t a _ F u n c t o r [ " v o i d " ] ( E f f e c t . f u n c t o r E f f e c t ) ( f u n c t i o n   _ _ d o ( )   {  
                             v a r   v   =   G r a p h i c s _ C a n v a s . g e t C a n v a s E l e m e n t B y I d ( " c a n v a s " ) ( ) ;  
                             v a r   $ _ _ u n u s e d   =   f u n c t i o n   ( d i c t P a r t i a l 1 )   {  
                                     r e t u r n   f u n c t i o n   ( $ d o l l a r 2 5 )   {  
                                             r e t u r n   $ d o l l a r 2 5 ;  
                                     } ;  
                             } ;  
                             r e t u r n   $ _ _ u n u s e d ( d i c t P a r t i a l ) ( ( f u n c t i o n   ( )   {  
                                     i f   ( v   i n s t a n c e o f   D a t a _ M a y b e . J u s t )   {  
                                             r e t u r n   f u n c t i o n   _ _ d o ( )   {  
                                                     v a r   v 1   =   G r a p h i c s _ C a n v a s . g e t C o n t e x t 2 D ( v . v a l u e 0 ) ( ) ;  
                                                     G r a p h i c s _ C a n v a s . s e t F i l l S t y l e ( v 1 ) ( w a l l C o l o r ) ( ) ;  
                                                     G r a p h i c s _ C a n v a s . f i l l P a t h ( v 1 ) ( G r a p h i c s _ C a n v a s . r e c t ( v 1 ) ( {  
                                                             x :   0 . 0 ,  
                                                             y :   0 . 0 ,  
                                                             w i d t h :   D a t a _ I n t . t o N u m b e r ( m . s i z e   *   ( m . x d   +   2   |   0 )   |   0 ) ,  
                                                             h e i g h t :   D a t a _ I n t . t o N u m b e r ( m . s i z e   *   ( m . y d   +   2   |   0 )   |   0 )  
                                                     } ) ) ( ) ;  
                                                     G r a p h i c s _ C a n v a s . s e t F i l l S t y l e ( v 1 ) ( b g C o l o r ) ( ) ;  
                                                     G r a p h i c s _ C a n v a s . f i l l P a t h ( v 1 ) ( G r a p h i c s _ C a n v a s . r e c t ( v 1 ) ( {  
                                                             x :   D a t a _ I n t . t o N u m b e r ( m . s i z e ) ,  
                                                             y :   D a t a _ I n t . t o N u m b e r ( m . s i z e ) ,  
                                                             w i d t h :   D a t a _ I n t . t o N u m b e r ( m . s i z e   *   m . x d   |   0 ) ,  
                                                             h e i g h t :   D a t a _ I n t . t o N u m b e r ( m . s i z e   *   m . y d   |   0 )  
                                                     } ) ) ( ) ;  
                                                     v a r   v 2   =   D a t a _ T r a v e r s a b l e [ " f o r " ] ( E f f e c t . a p p l i c a t i v e E f f e c t ) ( D a t a _ T r a v e r s a b l e . t r a v e r s a b l e A r r a y ) ( m . s n a k e ) ( f u n c t i o n   ( x )   {  
                                                             r e t u r n   c o l o r S q u a r e ( m . s i z e ) ( x ) ( s n a k e C o l o r ) ( v 1 ) ;  
                                                     } ) ( ) ;  
                                                     r e t u r n   c o l o r S q u a r e ( m . s i z e ) ( m . m o u s e ) ( m o u s e C o l o r ) ( v 1 ) ( ) ;  
                                             } ;  
                                     } ;  
                                     t h r o w   n e w   E r r o r ( " F a i l e d   p a t t e r n   m a t c h   a t   S n a k e S   l i n e   1 2 3 ,   c o l u m n   9   -   l i n e   1 2 4 ,   c o l u m n   9 :   "   +   [   v . c o n s t r u c t o r . n a m e   ] ) ;  
                             } ) ( ) ) ( ) ;  
                     } ) ;  
             } ;  
     } ;  
     v a r   r e n d e r 2   =   f u n c t i o n   ( d i c t P a r t i a l )   {  
             r e t u r n   f u n c t i o n   ( g )   {  
                     i f   ( g   i n s t a n c e o f   W a i t i n g )   {  
                             r e t u r n   C o n t r o l _ A p p l i c a t i v e . p u r e ( E f f e c t . a p p l i c a t i v e E f f e c t ) ( D a t a _ U n i t . u n i t ) ;  
                     } ;  
                     i f   ( g   i n s t a n c e o f   I n g a m e )   {  
                             r e t u r n   r e n d e r ( d i c t P a r t i a l ) ( g . v a l u e 0 ) ;  
                     } ;  
                     t h r o w   n e w   E r r o r ( " F a i l e d   p a t t e r n   m a t c h   a t   S n a k e S   l i n e   2 3 5 ,   c o l u m n   5   -   l i n e   2 3 7 ,   c o l u m n   2 7 :   "   +   [   g . c o n s t r u c t o r . n a m e   ] ) ;  
             } ;  
     } ;  
     v a r   m a i n   =   D a t a _ F u n c t o r [ " v o i d " ] ( E f f e c t . f u n c t o r E f f e c t ) ( f u n c t i o n   _ _ d o ( )   {  
             v a r   v   =   i n p u t 2 ( ) ;  
             v a r   v 1   =   S i g n a l M . f o l d p R ( s t e p 2 ( ) ) ( s t a r t 2 ) ( v ) ( ) ;  
             r e t u r n   S i g n a l . r u n S i g n a l ( D a t a _ F u n c t o r . m a p ( S i g n a l . f u n c t o r S i g n a l ) ( r e n d e r 2 ( ) ) ( v 1 ) ) ( ) ;  
     } ) ;  
     v a r   r e n d e r S t e p   =   f u n c t i o n   ( d i c t P a r t i a l )   {  
             r e t u r n   f u n c t i o n   ( m )   {  
                     r e t u r n   D a t a _ F u n c t o r [ " v o i d " ] ( E f f e c t . f u n c t o r E f f e c t ) ( f u n c t i o n   _ _ d o ( )   {  
                             v a r   v   =   G r a p h i c s _ C a n v a s . g e t C a n v a s E l e m e n t B y I d ( " c a n v a s " ) ( ) ;  
                             v a r   $ _ _ u n u s e d   =   f u n c t i o n   ( d i c t P a r t i a l 1 )   {  
                                     r e t u r n   f u n c t i o n   ( $ d o l l a r 3 1 )   {  
                                             r e t u r n   $ d o l l a r 3 1 ;  
                                     } ;  
                             } ;  
                             r e t u r n   $ _ _ u n u s e d ( d i c t P a r t i a l ) ( ( f u n c t i o n   ( )   {  
                                     i f   ( v   i n s t a n c e o f   D a t a _ M a y b e . J u s t )   {  
                                             r e t u r n   f u n c t i o n   _ _ d o ( )   {  
                                                     v a r   v 1   =   G r a p h i c s _ C a n v a s . g e t C o n t e x t 2 D ( v . v a l u e 0 ) ( ) ;  
                                                     c o l o r S q u a r e ( m . s i z e ) ( D a t a _ A r r a y _ P a r t i a l . h e a d ( d i c t P a r t i a l ) ( m . s n a k e ) ) ( s n a k e C o l o r ) ( v 1 ) ( ) ;  
                                                     i f   ( m . p r e v   i n s t a n c e o f   D a t a _ M a y b e . N o t h i n g )   {  
                                                             r e t u r n   c o l o r S q u a r e ( m . s i z e ) ( m . m o u s e ) ( m o u s e C o l o r ) ( v 1 ) ( ) ;  
                                                     } ;  
                                                     i f   ( m . p r e v   i n s t a n c e o f   D a t a _ M a y b e . J u s t )   {  
                                                             r e t u r n   c o l o r S q u a r e ( m . s i z e ) ( m . p r e v . v a l u e 0 ) ( b g C o l o r ) ( v 1 ) ( ) ;  
                                                     } ;  
                                                     t h r o w   n e w   E r r o r ( " F a i l e d   p a t t e r n   m a t c h   a t   S n a k e S   l i n e   1 1 1 ,   c o l u m n   9   -   l i n e   1 1 3 ,   c o l u m n   5 5 :   "   +   [   m . p r e v . c o n s t r u c t o r . n a m e   ] ) ;  
                                             } ;  
                                     } ;  
                                     t h r o w   n e w   E r r o r ( " F a i l e d   p a t t e r n   m a t c h   a t   S n a k e S   l i n e   1 0 7 ,   c o l u m n   9   -   l i n e   1 0 8 ,   c o l u m n   9 :   "   +   [   v . c o n s t r u c t o r . n a m e   ] ) ;  
                             } ) ( ) ) ( ) ;  
                     } ) ;  
             } ;  
     } ;  
     e x p o r t s [ " r a n d o m P o i n t " ]   =   r a n d o m P o i n t ;  
     e x p o r t s [ " i n i t ' " ]   =   i n i t $ p r i m e ;  
     e x p o r t s [ " i n i t " ]   =   i n i t ;  
     e x p o r t s [ " i n B o u n d s " ]   =   i n B o u n d s ;  
     e x p o r t s [ " c h e c k O K " ]   =   c h e c k O K ;  
     e x p o r t s [ " s t e p " ]   =   s t e p ;  
     e x p o r t s [ " c o l o r S q u a r e " ]   =   c o l o r S q u a r e ;  
     e x p o r t s [ " s q u a r e " ]   =   s q u a r e ;  
     e x p o r t s [ " r e n d e r S t e p " ]   =   r e n d e r S t e p ;  
     e x p o r t s [ " r e n d e r " ]   =   r e n d e r ;  
     e x p o r t s [ " i n p u t D i r " ]   =   i n p u t D i r ;  
     e x p o r t s [ " i n p u t " ]   =   i n p u t ;  
     e x p o r t s [ " f p s " ]   =   f p s ;  
     e x p o r t s [ " m a i n " ]   =   m a i n ;  
     e x p o r t s [ " i f s " ]   =   i f s ;  
     e x p o r t s [ " b o d y " ]   =   b o d y ;  
     e x p o r t s [ " u n t i l M " ]   =   u n t i l M ;  
     e x p o r t s [ " b i n d R " ]   =   b i n d R ;  
     e x p o r t s [ " w h i t e " ]   =   w h i t e ;  
     e x p o r t s [ " b l a c k " ]   =   b l a c k ;  
     e x p o r t s [ " r e d " ]   =   r e d ;  
     e x p o r t s [ " y e l l o w " ]   =   y e l l o w ;  
     e x p o r t s [ " g r e e n " ]   =   g r e e n ;  
     e x p o r t s [ " b l u e " ]   =   b l u e ;  
     e x p o r t s [ " p u r p l e " ]   =   p u r p l e ;  
     e x p o r t s [ " s n a k e C o l o r " ]   =   s n a k e C o l o r ;  
     e x p o r t s [ " b g C o l o r " ]   =   b g C o l o r ;  
     e x p o r t s [ " m o u s e C o l o r " ]   =   m o u s e C o l o r ;  
     e x p o r t s [ " w a l l C o l o r " ]   =   w a l l C o l o r ;  
     e x p o r t s [ " I n p u t 1 " ]   =   I n p u t 1 ;  
     e x p o r t s [ " I n p u t 2 " ]   =   I n p u t 2 ;  
     e x p o r t s [ " W a i t i n g " ]   =   W a i t i n g ;  
     e x p o r t s [ " I n g a m e " ]   =   I n g a m e ;  
     e x p o r t s [ " i n p u t 2 " ]   =   i n p u t 2 ;  
     e x p o r t s [ " s t e p 2 " ]   =   s t e p 2 ;  
     e x p o r t s [ " r e n d e r 2 " ]   =   r e n d e r 2 ;  
     e x p o r t s [ " s t a r t 2 " ]   =   s t a r t 2 ;  
 } ) ( P S [ " S n a k e S " ]   =   P S [ " S n a k e S " ]   | |   { } ) ;  
 P S [ " S n a k e S " ] . m a i n ( ) ;  
 } ) . c a l l ( t h i s , r e q u i r e ( ' _ p r o c e s s ' ) )  
 } , { " _ p r o c e s s " : 1 } ] } , { } , [ 2 ] ) ;  
 